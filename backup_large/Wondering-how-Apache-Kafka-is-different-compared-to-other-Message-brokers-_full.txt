














Wondering how Apache Kafka is different compared to other Message brokers?
        























 














LinkedIn and 3rd parties use essential and non-essential cookies to provide, secure, analyze and improve our Services, and to show you relevant ads (including professional and job ads) on and off LinkedIn. Learn more in our Cookie Policy.Select Accept to consent or Reject to decline non-essential cookies for this use. You can update your choices at any time in your settings.



                Accept
                

                Reject
                


 





LinkedIn






              Manish Mehndiratta
 
Expand search










              Jobs
            



              People
            



              Learning
            












Dismiss






Dismiss

















Dismiss


 











Dismiss


 

















Dismiss














          Join now
        
Sign in





 







 




 




              Wondering how Apache Kafka is different compared to other Message brokers?
            









                  Report this post
                


 







            
          
        Manish Mehndiratta
      
      
          




            
        Manish Mehndiratta
      
          

              
        Strategy | Solution Architecture | Integration Architecture
      
            


              
        
          Published Mar 19, 2019
      
      
            



          + Follow
        





In recent years, Apache Kafka has been growing in popularity; by some accounts, as much as 90% of all data will be flowing through Kafka's streaming capacities in the coming years. 
Consequently, many IT specialists are launching a variety of Kafka supports, from individual out-of-the-box integration options to full-on cloud-based managed services. 
 So what is it about Apache Kafka that's making it so popular? What capability(s) does it offer and what problem(s) does it solve? An overarching review of this message broker provides a comprehensive explanation of how Kafka facilitates information integration like no other broker available. 
 The Growing Challenge of Information Integration
Maintaining a robust and scalable integration platform has been the goal of every organization for more than 20 years. Message broker programming has beenconsidered one of the key components of those platforms, (some even say backbone), and message-oriented-middleware (MOM) plays a significant role.  The options for implementation of MOM are plentiful: Apache ActiveMQ, IBM MQ, JMS, EMS, JBoss, Fuse Message Broker, TIBCO EMS to name a few. 
 Although each message broker is unique, most of these share key fundamental characteristics:
-       They enable a loosely coupled architecture, providing a layer of separation for applications;
-       They provide communication independence across the IT applications;
-       They allow permit event driven architecture;
-       They facilitate information by First-in-First-Out (FIFO) message handling;
-       They provide shared data persistence for hardware and software unavailability;
-       They facilitate a much needed rate of message handling capability in the range of tens and hundreds of thousands of messages per second.
These characteristics form the core of integration implementation within the IT ecosystem for the majority of organizations. 
However, in recent years, innovative startups have introduced advanced programming that is pressuring legacy systems to adapt to changing consumer expectations and demands.
To remain competitive, companies must now reinvent and transform rapidly to be able to provide responsive and better customer experience, to be able to act on opportunities with sub-second latency, and to be able to predict and plan for customer behaviors. These changes require business and IT teams to align their focus and innovate faster capacities to speed the delivery of core business services and supports. 
 Kafka facilitates these evolutions to produce a faster, meaner, leaner organization by: 
-       Enabling an agile business capability delivery;
-       Breaking down monolith application to smaller, fine grained more easily managed microservices;
-       Enabling an omni-channel customer experience;
-       Exposing features through API-led connectivity;
-       Providing data-processing needs through cloud applications and IoT devices;
-       Providing the ability to ingest and process streaming data, and
-       Ensuring the consistency of messages and data across business sectors and data centers. 
So how does Apache Kafka manage to achieve these goals? 
 Mastering Data Exchange to Speed Business Processes
In essence, these capability/capacity challenges relate to today's significantly higher volume and velocity of data exchanges. The increasing number of data sources has also increased the volume of message flow from tens or hundreds of thousands, but millions of messages per second. IT implementation is no longer local, but spread across many regions and data centers. 
The added messaging volume also requires modifications of the application landscape, as well as the integration implementations built around the message brokers that enable critical business needs and capabilities. As a modern message broker, Apache Kafka extends the existing capabilities while adding additional processing opportunities: To partition even sub-sub-based topics to enable parallelism and significantly higher throughput;
-       For consistency of transaction and messaging across multiple data centers and even hybrid cloud infrastructures;
-       For persistence of messages despite high levels of consumer consumption; 
-       For guaranteed message sequencing through offset metadata management for each partition on any topic;
-       To shift load balancing from the producer to the message broker so that producers can publish messages autonomously;
·       For consumption of information from the message broker at the consumer's preferred pace;
To access applications through replay or from multiple offsets, in the event of any failure on the consumer side;
-       To add out-of-the-box connectors for seamless and scalable source and sink applications to be developed natively with Kafka Connect, and
-       To build a stream-processing application for real-time data within the message broker layer for sub-second response time and actions to be performed with Kafka Streams.
 Apache Kafka provides sophisticated data integration and management capacities to enable companies of all sizes to compete, survive and innovate at a rapid velocity. Not surprisingly, leading organizations across industries have already adopted, and are benefitting from; the enhanced information controls provided by Apache Kafka, such as LinkedIn, Uber, Airbnb, Target, Lyft, Paypal, Netflix, Twitter. The extensive list of customers and implementation can be found here.
 Conclusion:
The demands on every business have evolved significantly in recent years because of the massive expansion of the volume and velocity of incoming data. Kafka surpasses conventional message brokers by facilitating the scale of data management capabilities demanded by that growing flow of information.  With Apache Kafka, every organization can enable its IT ecosystem to facilitate its growth and respond to increasingly complex consumer demands. 
 













            206
        


        
            5 Comments
          
      





Like




Comment




Share










LinkedIn User


Hi dear Manish,
Tks, I couldn't agree more!




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    1y
  
        









                  Report this comment
                


 














                Sree Vaddi
              


did you miss pulsar ?
https://www.infoworld.com/article/3379120/pubsub-messaging-apache-kafka-vs-apache-pulsar.html




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      


                2 Likes
              





          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









                  Report this comment
                


 














                Kai Waehner
              


I have also posted some content about this topic recently: „Apache Kafka vs Integration Middleware (MQ, ETL, ESB) - Friends, Enemies or Frenemies?“

Slides and video recording:
http://www.kai-waehner.de/blog/2019/03/07/apache-kafka-middleware-mq-etl-esb-comparison/

Article: 
https://www.confluent.io/blog/apache-kafka-vs-enterprise-service-bus-esb-friends-enemies-or-frenemies/

Any feedback appreciated!




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      


                11 Likes
              





          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









                  Report this comment
                


 






              See more comments
          




        To view or add a comment, sign in
      
      To view or add a comment, sign in









More articles by this author


              See all
            



 



 









 


          Why A Data-Driven Culture Matters And How To Get There
        

            Feb 5, 2020
          

 






 


          Path To Stream Processing In Your Digital Journey
        

            Dec 10, 2019
          

 






 


          How To Approach The Transformation To Microservices
        

            Apr 11, 2019
          

 

























          Others also viewed
        








 


            
        Apache Kafka - Exactly Once Semantics
      
 




Manish Mehndiratta

          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









 


            
        Overcoming The Challenges Of A Digital Transformation
      
 




Manish Mehndiratta

          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









 


            
        Why is Bounded Context crucial to Micro-services architecture? 
      
 




Manish Mehndiratta

          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









 


            
        Using The Great Reshuffle to get ahead where you already are
      
 




Andrew Seaman

          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    2mo
  
        













LinkedIn

© 2022



            About
          



            Accessibility
          



            User Agreement
          



            Privacy Policy
          



            Cookie Policy
          



            Copyright Policy
          



            Brand Policy
          



            Guest Controls
          



            Community Guidelines
          








                العربية (Arabic)
            




                Čeština (Czech)
            




                Dansk (Danish)
            




                Deutsch (German)
            




English (English)





                Español (Spanish)
            




                Français (French)
            




                हिंदी (Hindi)
            




                Bahasa Indonesia (Bahasa Indonesia)
            




                Italiano (Italian)
            




                日本語 (Japanese)
            




                한국어 (Korean)
            




                Bahasa Malaysia (Malay)
            




                Nederlands (Dutch)
            




                Norsk (Norwegian)
            




                Polski (Polish)
            




                Português (Portuguese)
            




                Română (Romanian)
            




                Русский (Russian)
            




                Svenska (Swedish)
            




                ภาษาไทย (Thai)
            




                Tagalog (Tagalog)
            




                Türkçe (Turkish)
            




                简体中文 (Chinese (Simplified))
            




                正體中文 (Chinese (Traditional))
            



Language





 






