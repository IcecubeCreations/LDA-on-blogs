How to parse JSON in Java - GeeksforGeeksSkip to content
CoursesFor Working ProfessionalsLIVEDSA Live ClassesSystem DesignJava Backend DevelopmentFull Stack LIVEExplore MoreSelf-PacedDSA- Self PacedSDE TheoryMust-Do Coding QuestionsExplore MoreFor StudentsLIVECompetitive ProgrammingData Structures with C++Data ScienceExplore MoreSelf-PacedDSA- Self PacedCIPJAVA / Python / C++Explore MoreSchool CoursesSchool GuidePython ProgrammingLearn To Make AppsExplore moreAll CoursesTutorialsAlgorithmsAnalysis of AlgorithmsAsymptotic AnalysisWorst, Average and Best CasesAsymptotic NotationsLittle o and little omega notationsLower and Upper Bound TheoryAnalysis of LoopsSolving RecurrencesAmortized AnalysisWhat does 'Space Complexity' mean ?Pseudo-polynomial AlgorithmsPolynomial Time Approximation SchemeA Time Complexity QuestionSearching AlgorithmsSorting AlgorithmsGraph AlgorithmsPattern SearchingGeometric AlgorithmsMathematicalBitwise AlgorithmsRandomized AlgorithmsGreedy AlgorithmsDynamic ProgrammingDivide and ConquerBacktrackingBranch and BoundAll AlgorithmsData StructuresArraysLinked ListStackQueueBinary TreeBinary Search TreeHeapHashingGraphAdvanced Data StructureMatrixStringsAll Data StructuresInterview CornerCompany PreparationTop TopicsPractice Company QuestionsInterview ExperiencesExperienced InterviewsInternship InterviewsCompetititve ProgrammingDesign PatternsSystem Design TutorialMultiple Choice QuizzesLanguagesCC++JavaPythonC#JavaScriptjQuerySQLPHPScalaPerlGo LanguageHTMLCSSKotlinML & Data ScienceMachine LearningData ScienceCS SubjectsMathematicsOperating SystemDBMSComputer NetworksComputer Organization and ArchitectureTheory of ComputationCompiler DesignDigital LogicSoftware EngineeringGATEGATE Computer Science NotesLast Minute NotesGATE CS Solved PapersGATE CS Original Papers and Official KeysGATE 2021 DatesGATE CS 2021 SyllabusImportant Topics for GATE CSWeb TechnologiesHTMLCSSJavaScriptAngularJSReactJSNodeJSBootstrapjQueryPHPSoftware DesignsSoftware Design PatternsSystem Design TutorialSchool LearningSchool ProgrammingMathematicsNumber SystemAlgebraTrigonometryStatisticsProbabilityGeometryMensurationCalculusMaths Notes (Class 8-12)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesClass 12 NotesNCERT SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionRD Sharma SolutionsClass 8 Maths SolutionClass 9 Maths SolutionClass 10 Maths SolutionClass 11 Maths SolutionClass 12 Maths SolutionPhysics Notes (Class 8-11)Class 8 NotesClass 9 NotesClass 10 NotesClass 11 NotesCS Exams/PSUsISROISRO CS Original Papers and Official KeysISRO CS Solved PapersISRO CS Syllabus for Scientist/Engineer ExamUGC NETUGC NET CS Notes Paper IIUGC NET CS Notes Paper IIIUGC NET CS Solved PapersStudentCampus Ambassador ProgramSchool Ambassador ProgramProjectGeek of the MonthCampus Geek of the MonthPlacement CourseCompetititve ProgrammingTestimonialsStudent ChapterGeek on the TopInternshipCareersJobsApply for JobsPost a JobJOB-A-THONPracticeAll DSA ProblemsProblem of the DayInterview Series: Weekly ContestsBi-Wizard Coding: School ContestsContests and EventsPractice SDE SheetCurated DSA ListsTop 50 Array ProblemsTop 50 String ProblemsTop 50 Tree ProblemsTop 50 Graph ProblemsTop 50 DP Problems


WriteCome write articles for us and get featuredPracticeLearn and code with the best industry expertsPremiumGet access to ad-free content, doubt assistance and more!JobsCome and find your dream job with usGeeks DigestQuizzesGeeks CampusGblog ArticlesIDECampus MantriHomeSaved VideosCoursesGBlogPuzzlesWhat's New ?


Change Language
Data StructuresAlgorithmsInterview PreparationTopic-wise PracticeC++JavaPythonCompetitive ProgrammingMachine LearningHTMLSDE SheetPuzzlesGFG SchoolProjects

Related Articles

▲Related ArticlesConvert Json String to Java Object Using GSONConvert Java Object to Json String using Jackson APIConvert Java Object to Json String using GSONHow to parse JSON in JavaDifferent ways of Reading a text file in JavaReturning Multiple values in JavaArrays in JavaHow to add an element to an Array in Java?How to determine length or size of an Array in Java?length vs length() in JavaSplit() String method in Java with examplesJava String trim() method with ExampleTrim (Remove leading and trailing spaces) a string in JavaJava Program to Count the Number of Lines, Words, Characters, and Paragraphs in a Text FileCheck if a String Contains Only Alphabets in Java Using Lambda ExpressionRemove elements from a List that satisfy given predicate in JavaCheck if a String Contains Only Alphabets in Java using ASCII ValuesCheck if a String Contains only Alphabets in Java using RegexHow to check if string contains only digits in JavaCheck if given string contains all the digitsArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaObject Oriented Programming (OOPs) Concept in JavaHow to iterate any Map in JavaHashMap in Java with ExamplesInitialize an ArrayList in JavaMultidimensional Arrays in JavaTable of ContentsConvert Json String to Java Object Using GSONConvert Java Object to Json String using Jackson APIConvert Java Object to Json String using GSONHow to parse JSON in JavaDifferent ways of Reading a text file in JavaReturning Multiple values in JavaArrays in JavaHow to add an element to an Array in Java?How to determine length or size of an Array in Java?length vs length() in JavaSplit() String method in Java with examplesJava String trim() method with ExampleTrim (Remove leading and trailing spaces) a string in JavaJava Program to Count the Number of Lines, Words, Characters, and Paragraphs in a Text FileCheck if a String Contains Only Alphabets in Java Using Lambda ExpressionRemove elements from a List that satisfy given predicate in JavaCheck if a String Contains Only Alphabets in Java using ASCII ValuesCheck if a String Contains only Alphabets in Java using RegexHow to check if string contains only digits in JavaCheck if given string contains all the digitsArrays.sort() in Java with examplesFor-each loop in JavaReverse a string in JavaObject Oriented Programming (OOPs) Concept in JavaHow to iterate any Map in JavaHashMap in Java with ExamplesInitialize an ArrayList in JavaMultidimensional Arrays in JavaHow to parse JSON in JavaImprove Article

Save Article

Like Article

Difficulty Level :
MediumLast Updated :
07 Aug, 2019JSON (JavaScript Object Notation) is a lightweight, text-based, language-independent data exchange format that is easy for humans and machines to read and write. JSON can represent two structured types: objects and arrays. An object is an unordered collection of zero or more name/value pairs. An array is an ordered sequence of zero or more values. The values can be strings, numbers, booleans, null, and these two structured types.Below is a simple example from Wikipedia that shows JSON representation of an object that describes a person. The object has string values for first name and last name, a number value for age, an object value representing the person’s address, and an array value of phone number objects.

{

    "firstName": "John",

    "lastName": "Smith",

    "age": 25,

    "address": {

        "streetAddress": "21 2nd Street",

        "city": "New York",

        "state": "NY",

        "postalCode": 10021

    },

    "phoneNumbers": [

        {

            "type": "home",

            "number": "212 555-1234"

        },

        {

            "type": "fax",

            "number": "646 555-4567" 

        }

    ] 

}

JSON Processing in Java : The Java API for JSON Processing JSON.simple is a simple Java library that allow parse, generate, transform, and query JSON.Getting Started : You need to download the json-simple-1.1 jar and put it in your CLASSPATH before compiling and running the below example codes.For importing jar in IDE like eclipse, refer here.If you are using maven you may use the following maven link https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple/1.1.1Json-Simple API : It provides object models for JSON object and array structures. These JSON structures are represented as object models using types JSONObject and JSONArray. JSONObject provides a Map view to access the unordered collection of zero or more name/value pairs from the model. Similarly, JSONArray provides a List view to access the ordered sequence of zero or more values from the model.Write JSON to a fileLet us see an example that writes above JSON data into a file “JSONExample.json”, with help of JSONObject and JSONArray.// Java program for write JSON to a file  import java.io.FileNotFoundException;import java.io.PrintWriter;import java.util.LinkedHashMap;import java.util.Map;import org.json.simple.JSONArray;import org.json.simple.JSONObject;  public class JSONWriteExample{    public static void main(String[] args) throws FileNotFoundException     {        // creating JSONObject        JSONObject jo = new JSONObject();                  // putting data to JSONObject        jo.put("firstName", "John");        jo.put("lastName", "Smith");        jo.put("age", 25);                  // for address data, first create LinkedHashMap        Map m = new LinkedHashMap(4);        m.put("streetAddress", "21 2nd Street");        m.put("city", "New York");        m.put("state", "NY");        m.put("postalCode", 10021);                  // putting address to JSONObject        jo.put("address", m);                  // for phone numbers, first create JSONArray         JSONArray ja = new JSONArray();                  m = new LinkedHashMap(2);        m.put("type", "home");        m.put("number", "212 555-1234");                  // adding map to list        ja.add(m);                  m = new LinkedHashMap(2);        m.put("type", "fax");        m.put("number", "212 555-1234");                  // adding map to list        ja.add(m);                  // putting phoneNumbers to JSONObject        jo.put("phoneNumbers", ja);                  // writing JSON to file:"JSONExample.json" in cwd        PrintWriter pw = new PrintWriter("JSONExample.json");        pw.write(jo.toJSONString());                  pw.flush();        pw.close();    }}Output from file “JSONExample.json” :

{

     "lastName":"Smith",

    "address":{

        "streetAddress":"21 2nd Street",

         "city":"New York",

         "state":"NY",

         "postalCode":10021

    },

     "age":25,

     "phoneNumbers":[

            {

            "type":"home", "number":"212 555-1234"

            },

         {

            "type":"fax", "number":"212 555-1234"

         }

     ],

     "firstName":"John"

}

Note : In JSON, An object is an unordered set of name/value pairs, so JSONObject doesn’t preserve the order of an object’s name/value pairs, since it is (by definition) not significant. Hence in our output file, order is not preserved.Read JSON from a fileLet us see an example that read JSON data from above created file “JSONExample.json” with help of JSONParser, JSONObject and JSONArray.// Java program to read JSON from a file  import java.io.FileReader;import java.util.Iterator;import java.util.Map;  import org.json.simple.JSONArray;import org.json.simple.JSONObject;import org.json.simple.parser.*;  public class JSONReadExample {    public static void main(String[] args) throws Exception     {        // parsing file "JSONExample.json"        Object obj = new JSONParser().parse(new FileReader("JSONExample.json"));                  // typecasting obj to JSONObject        JSONObject jo = (JSONObject) obj;                  // getting firstName and lastName        String firstName = (String) jo.get("firstName");        String lastName = (String) jo.get("lastName");                  System.out.println(firstName);        System.out.println(lastName);                  // getting age        long age = (long) jo.get("age");        System.out.println(age);                  // getting address        Map address = ((Map)jo.get("address"));                  // iterating address Map        Iterator<Map.Entry> itr1 = address.entrySet().iterator();        while (itr1.hasNext()) {            Map.Entry pair = itr1.next();            System.out.println(pair.getKey() + " : " + pair.getValue());        }                  // getting phoneNumbers        JSONArray ja = (JSONArray) jo.get("phoneNumbers");                  // iterating phoneNumbers        Iterator itr2 = ja.iterator();                  while (itr2.hasNext())         {            itr1 = ((Map) itr2.next()).entrySet().iterator();            while (itr1.hasNext()) {                Map.Entry pair = itr1.next();                System.out.println(pair.getKey() + " : " + pair.getValue());            }        }    }}Output:

John

Smith

25

streetAddress : 21 2nd Street

postalCode : 10021

state : NY

city : New York

number : 212 555-1234

type : home

number : 212 555-1234

type : fax

This article is contributed by Gaurav Miglani. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.My Personal Notes
arrow_drop_upSave

LikePreviousConvert Java Object to Json String using GSONNext
Different ways of Reading a text file in JavaRecommended ArticlesPage :Java Program to Convert JSON String to JSON Object28, Jan 22JSON | modify an array value of a JSON object03, May 18How to use cURL to Get JSON Data and Decode JSON Data in PHP ?28, May 21Period parse() method in Java with Examples27, Nov 18Duration parse(CharSequence) method in Java with Examples26, Nov 18Instant parse() method in Java with Examples27, Nov 18ZonedDateTime parse() method in Java with Examples28, Dec 18LocalDateTime parse() method in Java with Examples28, Dec 18LocalTime parse() method in Java with Examples28, Dec 18OffsetTime parse() method in Java with examples31, Dec 18LocalDate parse() method in Java with Examples31, Dec 18SimpleDateFormat parse() Method in Java with Examples29, Jan 19Year parse(CharSequence) method in Java with Examples27, Feb 19YearMonth parse(CharSequence) method in Java with Examples27, Feb 19Year parse(CharSequence,DateTimeFormatter) method in Java with Examples27, Feb 19YearMonth parse(CharSequence,DateTimeFormatter) method in Java with Examples27, Feb 19DateFormat parse(string , ParsePosition) Method in Java with Examples01, Apr 19NumberFormat parse() method in Java with Examples01, Apr 19Level parse() method in Java with Examples14, Oct 19ChoiceFormat parse() method in Java with Examples16, Dec 19MessageFormat parse() method in Java with Example : Set - 115, Jan 20MessageFormat parse() method in Java with Example : Set - 215, Jan 20MonthDay parse(CharSequence, DateTimeFormatter) method in Java12, May 20MonthDay parse(CharSequence) method in Java with Examples12, May 20Article Contributed By :GeeksforGeeksVote for difficultyCurrent difficulty :
MediumEasy
Normal
Medium
Hard
ExpertImproved By :ankitjainstArticle Tags :JSONJavaPractice Tags :JavaReport IssueWriting code in comment?
Please use ide.geeksforgeeks.org,
generate link and share the link here.
Load CommentsWhat's NewJava Backend Development- LIVE ClassesView DetailsInterview Series- Prepare, Practice & UpskillView DetailsData Structures & Algorithms- Self Paced CourseView DetailsMost popular in JavaStream In JavaMultithreading in JavaInterfaces in JavaSet in JavaArrayList in JavaMore related articles in JavaInheritance in JavaSingleton Class in JavaOverriding in JavaCollections in JavaExceptions in JavaImprove your Coding Skills with PracticeTry It!
5th Floor, A-118,Sector-136, Noida, Uttar Pradesh - 201305
feedback@geeksforgeeks.orgCompanyAbout UsCareersIn MediaContact UsPrivacy PolicyCopyright PolicyLearnAlgorithmsData StructuresSDE Cheat SheetMachine learningCS SubjectsVideo TutorialsNewsTop NewsTechnologyWork & CareerBusinessFinanceLifestyleLanguagesPythonJavaCPPGolangC#SQLWeb DevelopmentWeb TutorialsDjango TutorialHTMLCSSJavaScriptBootstrapContributeWrite an ArticleImprove an ArticlePick Topics to WriteWrite Interview ExperienceInternshipsVideo Internship@geeksforgeeks
, Some rights reserved
We use cookies to ensure you have the best browsing experience on our website. By using our site, you
acknowledge that you have read and understood our
Cookie Policy &

        Privacy Policy

Got It !
Start Your Coding Journey Now!Login
Register