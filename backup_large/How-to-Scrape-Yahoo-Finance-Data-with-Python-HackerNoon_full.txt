How to Scrape Yahoo Finance Data with Python | HackerNoonStart WritingNotificationssee  moreStart WritingReadDiscover (Sort By)All TopicsTop StoriesTechBriefLive ReactionsNoonificationSuperTagBooksSloggingAll NewslettersRandom StoryDaily ArchiveTechAll Topics (Click Here)AIBlockchainCybersecurityData ScienceDecentralizationFinanceFuturismGamingHardware ReviewsMachine LearningMediaProgrammingEngineeringRoboticsVirtual RealitySoftwareAPIsArchitectureCCodingEngineeringJavaJavascriptNodeJSOpen SourcePHPProgrammingPythonReactRubySQLSwiftTop StoriesLatestHow to Make A Great Looking Website Even If You Canâ€™t DesignAlexa.com is DEAD: F*CK the Alternatives!An Intro to Shamirâ€™s Secret Sharing Cryptographic AlgorithmHow Uber Uses AI to Improve DeliveriesShould Online Platforms Have Unions?WriteWriterBefore Clicking SubmitSubmit a DraftSubmit a Draft as a BrandWriting GuidesReach More PeopleYour Message, Your AdRepublishing GuideBacklinks GuidesEarn CryptoContestsAll ContestsGaming Metaverse ContestDecentralized Internet ContestHoliday Gear GiveawayNooniesWriting PromptsFind New Writing Prompts HereFull List of Prompts/ InterviewsNoonie and Startups Winners or Runners-UpInterview for Your Opinion on AnythingInterview for Startups NomineesInterview for Noonies NomineesWhat is the Metaverse? InterviewDecentralized InterviewLearnSelf-Paced CoursesAngular Masterclass ðŸ”—Cybersecurity ðŸ”—Data Science Bootcamp ðŸ”—Java Masterclass ðŸ”—JavaScript: Advanced ðŸ”—Machine Learning A-Z ðŸ”—Python: Zero to Hero ðŸ”—Web Development Bootcamp ðŸ”—Web Development Mastery ðŸ”—Tech Deep DivesAgileArtificial IntelligenceCloud ComputingDeFiDevOpsEntrepreneurshipEthereumMarketingNFTsNodeJSOpen SourceReactSoftware DevelopmentWeb DevelopmentBuild SkillzzApply Psychology of ColorsAuto-Generate GraphicsBuild Frontend for Ethereum dAppsBuild a Private BlockchainCreate Generative Art with PythonChoose the Right Kubernetes ContainerGet Featured on Product Hunt without HunterGo Serverless with AWSHack Smart ContractsHost Your Git Server on Raspberry PiImplement QA ProperlyInsert Binary Tree in RustLearn AnythingMeasure Technical DebtProtect Your Code with GulpWrite NFT Smart ContractsAboutCompanyContact UsAbout UsCareersPodcastJoin Community (and Comment)Full List of Social Media AccountsRegular Platform UpdatesPeopleCEOCOOMeet the TeamInvestorsExternal Tech ExpertsAnnual Noonies AwardsShareholder UpdatesSoftware by HackerNoonProduct UpdatesSloggingAnnual Startup AwardsRemove Paywalled Stories from Google SearchHacker Noon is a GIFMobile Application Coming SoonHelpWritersWe Give all the FAQsStory Rejected?Account SettingsHow to use our EditorContactVisitorsWhat the FAQ?Sign UpGetting StartedHow to Navigate our SiteContactPartnerPartnershipsCreate a Writing ContestMedia KitWrite as a Business or BrandSitewide Yellow BillboardNewsletter AdsNiche MarketingBlog for the Corporate SoulThousands of CustomersShopHackerNoon Merchthe shirtthe beaniethe joggersthe PBS style tote bagspiral notebookscolorful masksrainbow laptop sleevesand HN stickersTech Co DirectoryCompany PagesRead About This FeatureBrowse All PagesRequest a Tech Company PageBrowse Company ListFull Startups ListGiantsBrowse All CompaniesAmazonAppleCoinbaseIntelMicrosoftTeslaCompany ListStartupsBrowse Top StartupsAfricaAsiaEuropeNorth and Central AmericaOceaniaSouth AmericaBrowse All StartupsReadDiscover (Sort By)All TopicsTop StoriesTechBriefLive ReactionsNoonificationSuperTagBooksSloggingAll NewslettersRandom StoryDaily ArchiveTechAll Topics (Click Here)AIBlockchainCybersecurityData ScienceDecentralizationFinanceFuturismGamingHardware ReviewsMachine LearningMediaProgrammingEngineeringRoboticsVirtual RealitySoftwareAPIsArchitectureCCodingEngineeringJavaJavascriptNodeJSOpen SourcePHPProgrammingPythonReactRubySQLSwiftTop StoriesLatestHow to Make A Great Looking Website Even If You Canâ€™t DesignAlexa.com is DEAD: F*CK the Alternatives!An Intro to Shamirâ€™s Secret Sharing Cryptographic AlgorithmHow Uber Uses AI to Improve DeliveriesShould Online Platforms Have Unions?WriteWriterBefore Clicking SubmitSubmit a DraftSubmit a Draft as a BrandWriting GuidesReach More PeopleYour Message, Your AdRepublishing GuideBacklinks GuidesEarn CryptoContestsAll ContestsGaming Metaverse ContestDecentralized Internet ContestHoliday Gear GiveawayNooniesWriting PromptsFind New Writing Prompts HereFull List of Prompts/ InterviewsNoonie and Startups Winners or Runners-UpInterview for Your Opinion on AnythingInterview for Startups NomineesInterview for Noonies NomineesWhat is the Metaverse? InterviewDecentralized InterviewLearnSelf-Paced CoursesAngular Masterclass ðŸ”—Cybersecurity ðŸ”—Data Science Bootcamp ðŸ”—Java Masterclass ðŸ”—JavaScript: Advanced ðŸ”—Machine Learning A-Z ðŸ”—Python: Zero to Hero ðŸ”—Web Development Bootcamp ðŸ”—Web Development Mastery ðŸ”—Tech Deep DivesAgileArtificial IntelligenceCloud ComputingDeFiDevOpsEntrepreneurshipEthereumMarketingNFTsNodeJSOpen SourceReactSoftware DevelopmentWeb DevelopmentBuild SkillzzApply Psychology of ColorsAuto-Generate GraphicsBuild Frontend for Ethereum dAppsBuild a Private BlockchainCreate Generative Art with PythonChoose the Right Kubernetes ContainerGet Featured on Product Hunt without HunterGo Serverless with AWSHack Smart ContractsHost Your Git Server on Raspberry PiImplement QA ProperlyInsert Binary Tree in RustLearn AnythingMeasure Technical DebtProtect Your Code with GulpWrite NFT Smart ContractsAboutCompanyContact UsAbout UsCareersPodcastJoin Community (and Comment)Full List of Social Media AccountsRegular Platform UpdatesPeopleCEOCOOMeet the TeamInvestorsExternal Tech ExpertsAnnual Noonies AwardsShareholder UpdatesSoftware by HackerNoonProduct UpdatesSloggingAnnual Startup AwardsRemove Paywalled Stories from Google SearchHacker Noon is a GIFMobile Application Coming SoonHelpWritersWe Give all the FAQsStory Rejected?Account SettingsHow to use our EditorContactVisitorsWhat the FAQ?Sign UpGetting StartedHow to Navigate our SiteContactPartnerPartnershipsCreate a Writing ContestMedia KitWrite as a Business or BrandSitewide Yellow BillboardNewsletter AdsNiche MarketingBlog for the Corporate SoulThousands of CustomersShopHackerNoon Merchthe shirtthe beaniethe joggersthe PBS style tote bagspiral notebookscolorful masksrainbow laptop sleevesand HN stickersTech Co DirectoryCompany PagesRead About This FeatureBrowse All PagesRequest a Tech Company PageBrowse Company ListFull Startups ListGiantsBrowse All CompaniesAmazonAppleCoinbaseIntelMicrosoftTeslaCompany ListStartupsBrowse Top StartupsAfricaAsiaEuropeNorth and Central AmericaOceaniaSouth AmericaBrowse All StartupsWrite-to-Earn: KuCoin $1M ProgramHow to Scrape Yahoo Finance Data with Pythonâ€‚by@sandra-moraesHow to Scrape Yahoo Finance Data with PythonNovember 14th 2019  34,528 reads0 Financial market data is one of the most valuable data in the current time. If analyzed correctly, it holds the potential of turning an organisationâ€™s economic issues upside down. In this blog, we are going to extract data about cryptocurrencies, currencies, world-indices, active-stocks and commodities. The applications of scraping Yahoo finance data can be forecasting stock prices, predicting market sentiment towards a stock, gaining an investive edge and the process of generating investment plans can make good use of this data.@sandra-moraesSandra MoraesData Scientist About @sandra-moraesFinancial market data is one of the most valuable data in the current time. If analyzed correctly, it holds the potential of turning an organisationâ€™s economic issues upside down. Among a few of them,Â Yahoo financeÂ is one such website which provides free access to this valuable data of stocks and commoditiesÂ prices. In this blog, we are going to implement a simpleÂ web crawler in pythonÂ which will help us in scraping yahoo finance website. Some of the applications of scraping Yahoo finance data can be forecasting stock prices, predicting market sentiment towards a stock,Â gaining an investive edgeÂ andÂ cryptocurrency trading. Also, the process of generating investment plans can make good use of this data!BeforeÂ scrapingÂ yahoo finance website, let us first understand more about Yahoo finance Data in the next section.Â What is Yahoo Finance?Yahoo financeÂ is a business media platform from Yahoo which provides comprehensive offerings in the world of business and investment.Â It has a plethora of available business information likeÂ financial news, data about stock quotes, press releases and financial reports. Whether you are an investor or are just looking for some business news, Yahoo finance is the place to go. The biggest plus of Yahoo finance is that it provides all of this information for free. Hence by scraping Yahoo finance data, you can actually get valuable information at your end and do an analysis of stocks and currencies trends. Moreover, you get real-time information about stock prices along with accessÂ to other financial investment/management tools.Why Scrape Finance websites?Financial data ifÂ extracted and analysed in real timeÂ can provide a wealth of information for investments, trading, research and sentiment analysisStock tradingÂ Online tradingÂ involves stocks trading via an online platform.Â Online trading portals facilitate the trading of different financial instruments such as stocks, mutual funds and commodities. In online stock trading, owners of one stock meet different buyers virtually and sell the stocks to buyers. The selling part only happens when a buyer and a seller has negotiated the price of exchange.Furthermore, these prices are market dependent and are provided by scraping yahooÂ finance. Moreover, stock trading organisations can leverage yahoo finance data to keep a record of changing stock prices and market trend. This analysis will help financial and investment companies to predict the market and buy/sell stocks for maximum profits.Sentiment analysis of the marketÂ Organizations can performÂ sentimentÂ analysis over the blogs, news, tweets and social media posts in business and financial domainsÂ to analyze the market trend. Furthermore, scraping Yahoo finance will help them in collecting data for natural language processing algorithms to identify the sentiment of the market. Through this, one can track the emotion towards a particular product, stock, commodity or currency and make the right investment decision.Equity researchÂ Equity ResearchÂ refers to analyzingÂ a companyâ€™sÂ financial data, perform analysis over it and identify recommendations for buying and selling of stocks.Â The main aim ofÂ equity research is to provide investors with financial analysis reports and recommendations on buying, holding, or selling a particular investment. Also, banks and financial investment organisations often use equity research for their investments andÂ sales & tradingÂ clients, by providing timely, high-quality information and analysis.Regulatory complianceÂ Business and financial investment jobs are high-risk jobs. A lot of investment decisions are directly dependent on the government scheme and policies regarding trade. Hence, it is essential toÂ keep track of the government sites and other official forums to extract any policy changes related to trading.Â Mainly, risk analysts should crawl news outlets and government sites for real-time actions about the events and decisions which are directly correlated with their business.Approach for scraping Yahoo finance dataYahoo finance provides a plethora of information of about stock market and investment. Our primary goal is to fetch the data by scraping Yahoo finance and store it on our own premises for later analysis. In this blog, we are going toÂ extract data about cryptocurrencies, currencies, world-indices, active-stocks and commodities. These data points can also beÂ scraped from the results of searchÂ engine too, but we will keep the scope to scraping Yahoo finance only in this blog.We will be writing simple python code for scraping Yahoo finance data which will visit the website and get all this data for us. Python is used for the crawler implementation. We are using the Beautiful Soup library to do crawling for us!Python implementation for scraping Yahoo finance dataWe start by importing the required libraries for us. We have imported the pandas andÂ Beautiful SoupÂ library here. Pandas library will help us in arranging the collected data in the form of tables whereas the Beautiful Soup library provides us with the crawling abilities in pythonimport requests from bs4 
import BeautifulSoup import csv 
import pandas as pd Scraping Crypto CurrenciesA cryptocurrency is a digital currency using cryptographic security. Cryptocurrencies are decentralized systems based onÂ blockchainÂ technology, a distributed network of computers. Due to advanced protection, these currencies are harder to counterfeit.By now, cryptocurrencies have become a global phenomenon. With significant growth in recent years, investments in cryptocurrencies prooved beneficial to a large number of investors.In below code section, we have given the yahoo finance link for the cryptocurrencies page. There are multiple pages which contain information about the cryptocurrencies. This code iterates through all the pages and pulls out the relevant information. Pulling of any relevant information happens through HTML tags present in the source code of the website. We just need to identify those tags and put them in attributes placeholder in the code!names=[]
prices=[]
changes=[]
percentChanges=[]
marketCaps=[]
totalVolumes=[]
circulatingSupplys=[]
 
for i in range(0,10):
  CryptoCurrenciesUrl = "https://in.finance.yahoo.com/cryptocurrencies?offset="+str(i)+"&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;count=50"
  r= requests.get(CryptoCurrenciesUrl)
  data=r.text
  soup=BeautifulSoup(data)
 
  for listing in soup.find_all('tr', attrs={'class':'SimpleDataTableRow'}):
    for name in listing.find_all('td', attrs={'aria-label':'Name'}):
      names.append(name.text)
    for price in listing.find_all('td', attrs={'aria-label':'Price (intraday)'}):
      prices.append(price.find('span').text)
    for change in listing.find_all('td', attrs={'aria-label':'Change'}):
      changes.append(change.text)
    for percentChange in listing.find_all('td', attrs={'aria-label':'% change'}):
      percentChanges.append(percentChange.text)
    for marketCap in listing.find_all('td', attrs={'aria-label':'Market cap'}):
      marketCaps.append(marketCap.text)
    for totalVolume in listing.find_all('td', attrs={'aria-label':'Total volume all currencies (24 hrs)'}):
      totalVolumes.append(totalVolume.text)
    for circulatingSupply in listing.find_all('td', attrs={'aria-label':'Circulating supply'}):
      circulatingSupplys.append(circulatingSupply.text)Also, you can find the snapshot of cryptocurrencies data collected after scraping yahoo finance belowScraping CurrenciesFollowing code will help you in scraping Yahoo finance for currencies. The approach is more or less the same here. We have to identify the tags which hold the required information.In Yahoo finance, there are no specific attributes in HTML code, so we pulled data through data-idâ€™s present.names=[]
prices=[]
changes=[]
percentChanges=[]
marketCaps=[]
totalVolumes=[]
circulatingSupplys=[]
 
CryptoCurrenciesUrl = "https://in.finance.yahoo.com/currencies"
r= requests.get(CryptoCurrenciesUrl)
data=r.text
soup=BeautifulSoup(data)
 
counter = 40
for i in range(40, 404, 14):
   for listing in soup.find_all('tr', attrs={'data-reactid':i}):
      for name in listing.find_all('td', attrs={'data-reactid':i+3}):
         names.append(name.text)
      for price in listing.find_all('td', attrs={'data-reactid':i+4}):
         prices.append(price.text)
      for change in listing.find_all('td', attrs={'data-reactid':i+5}):
         changes.append(change.text)
      for percentChange in listing.find_all('td', attrs={'data-reactid':i+7}):
         percentChanges.append(percentChange.text)
pd.DataFrame({"Names": names, "Prices": prices, "Change": changes, "% Change": percentChanges})Also, you can find the snapshot of currencies data collected after scraping yahoo finance below.Scraping World IndicesThe MSCI World is a market cap weighted stock market index of 1,649 stocks from companies throughout the world. TheÂ indexÂ andÂ theirÂ movementsÂ giveÂ anÂ insightÂ intoÂ theÂ generalÂ attitudeÂ ofÂ theÂ investingÂ public companies of all sizes and industries.By Scraping yahoo finance, we get access to attributes of world indices like prices, percentage changes, market volume about the different world indices.prices=[]
names=[]
changes=[]
percentChanges=[]
marketCaps=[]
totalVolumes=[]
circulatingSupplys=[]
 
CryptoCurrenciesUrl = "https://in.finance.yahoo.com/world-indices"
r= requests.get(CryptoCurrenciesUrl)
data=r.text
soup=BeautifulSoup(data)
 
counter = 40
for i in range(40, 404, 14):
   for row in soup.find_all('tbody'):
      for srow in row.find_all('tr'):
         for name in srow.find_all('td', attrs={'class':'data-col1'}):
            names.append(name.text)
         for price in srow.find_all('td', attrs={'class':'data-col2'}):
            prices.append(price.text)
         for change in srow.find_all('td', attrs={'class':'data-col3'}):
            changes.append(change.text)
         for percentChange in srow.find_all('td', attrs={'class':'data-col4'}):
            percentChanges.append(percentChange.text)
 
pd.DataFrame({"Names": names, "Prices": prices, "Change": changes, "% Change": percentChanges})Also, you can find the snapshot of world-indices data collected after scraping yahoo finance below.Scraping most-active stocksTheÂ stocksÂ onÂ anÂ exchangeÂ withÂ theÂ highestÂ volumeÂ overÂ aÂ givenÂ periodÂ areÂ theÂ mostÂ active.Â BecauseÂ ofÂ significantlyÂ importantÂ newÂ informationÂ affectingÂ theÂ stockÂ reachingÂ theÂ market,Â stocksÂ usuallyÂ haveÂ aÂ higherÂ thanÂ averageÂ tradingÂ volume.Â ThisÂ givesÂ investorsÂ aÂ strongÂ impetusÂ toÂ buyÂ orÂ sellÂ theÂ stock for high profits.Following code helps in scraping Yahoo finance about most-active stocks!names=[]
prices=[]
changes=[]
percentChanges=[]
marketCaps=[]
totalVolumes=[]
circulatingSupplys=[]
 
for i in range(0,11):
CryptoCurrenciesUrl = "https://in.finance.yahoo.com/most-active?offset="+str(i)+"&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;count=100"
r= requests.get(CryptoCurrenciesUrl)
data=r.text
soup=BeautifulSoup(data)
 
for listing in soup.find_all('tr', attrs={'class':'SimpleDataTableRow'}):
   for name in listing.find_all('td', attrs={'aria-label':'Name'}):
      names.append(name.text)
   for price in listing.find_all('td', attrs={'aria-label':'Price (intraday)'}):
      prices.append(price.find('span').text)
   for change in listing.find_all('td', attrs={'aria-label':'Change'}):
      changes.append(change.text)
   for percentChange in listing.find_all('td', attrs={'aria-label':'% change'}):
      percentChanges.append(percentChange.text)
   for marketCap in listing.find_all('td', attrs={'aria-label':'Market cap'}):
      marketCaps.append(marketCap.text)
   for totalVolume in listing.find_all('td', attrs={'aria-label':'Avg vol (3-month)'}):
      totalVolumes.append(totalVolume.text)
   for circulatingSupply in listing.find_all('td', attrs={'aria-label':'Volume'}):
      circulatingSupplys.append(circulatingSupply.text)
 
pd.DataFrame({"Names": names, "Prices": prices, "Change": changes, "% Change": percentChanges, "Market Cap": marketCaps, "Average Volume": totalVolumes,"Volume":circulatingSupplys})
Also, you can find the snapshot of most-active stocks data collected after scraping yahoo finance below.AÂ commodityÂ isÂ anessentialÂ commodityÂ usedÂ inÂ tradeÂ thatÂ canÂ beÂ exchangedÂ withÂ theÂ sameÂ typeÂ ofÂ commodity.TheÂ CommoditiesÂ areÂ mostÂ frequentlyÂ usedÂ asÂ inputsÂ toÂ otherÂ goodsÂ orÂ services.Â TradersÂ tradeÂ inÂ commodityÂ marketsÂ solelyÂ toÂ benefitÂ fromÂ volatileÂ priceÂ changes.Â TheseÂ tradersÂ neverÂ intendÂ toÂ supplyÂ theÂ actualÂ commodityÂ orÂ takeÂ itÂ whenÂ theÂ futuresÂ contractÂ expires.Below helps in scraping yahoo finance for the data about different commodities like gold and silver.prices=[]
names=[]
changes=[]
percentChanges=[]
marketCaps=[]
marketTimes=[]
totalVolumes=[]
openInterests=[]
 
CryptoCurrenciesUrl = "https://in.finance.yahoo.com/commodities"
r= requests.get(CryptoCurrenciesUrl)
data=r.text
soup=BeautifulSoup(data)
 
counter = 40
for i in range(40, 404, 14):
   for row in soup.find_all('tbody'):
      for srow in row.find_all('tr'):
         for name in srow.find_all('td', attrs={'class':'data-col1'}):
            names.append(name.text)
         for price in srow.find_all('td', attrs={'class':'data-col2'}):
            prices.append(price.text)
         for time in srow.find_all('td', attrs={'class':'data-col3'}):
            marketTimes.append(time.text)
         for change in srow.find_all('td', attrs={'class':'data-col4'}):
            changes.append(change.text)
         for percentChange in srow.find_all('td', attrs={'class':'data-col5'}):
            percentChanges.append(percentChange.text)
         for volume in srow.find_all('td', attrs={'class':'data-col6'}):
            totalVolumes.append(volume.text)
         for openInterest in srow.find_all('td', attrs={'class':'data-col7'}):
            openInterests.append(openInterest.text)
 
pd.DataFrame({"Names": names, "Prices": prices, "Change": changes, "% Change": percentChanges, "Market Time": marketTimes,'Open Interest': openInterests ,"Volume": totalVolumes})Also, you can find the snapshot of commodities data collected after scraping yahoo finance below.In ConclusionIn this article, we had a look at how simpleÂ scraping yahoo finance for stock market dataÂ can be using python. Furthermore, the data about stocks, commodities and currencies were also collected by scraping yahoo finance website.Â Beautiful soup is a simple and powerful scraping library in pythonÂ which made the task of scraping Yahoo finance website really simple. Also, the data collected by scraping Yahoo finance can be used by the financial organizations to predict the stock prices or predict the market trend for generating optimized investment plans. Apart from financial organizations, many industries across different verticals have leveraged the benefits of web scraping.Â 0by Sandra Moraes @sandra-moraes.Data Scientist Read my storiesCommentsSignup or Login to Join the DiscussionEnter the Debugging Writing ContestTags#web-scraping#data-science-tools#yahoo-finance-scraping#python-tutorials#python-machine-learning#scraping-using-python#python#yahooRelated StoriesScraping Amazon Reviews using Scrapy in Python [Tutorial]Published at Nov 20, 2019 by sandra-moraes  #web-scraping  Developing, Packaging and Distributing a PythonÂ LibraryPublished at May 24, 2022 by darshitac  #software-development  A Step-by-Step Guide to Building a Football Data ScraperPublished at May 24, 2022 by zoltanbettenbuk  #web-scraping  America's Secret PagerÂ GiantPublished at May 22, 2022 by evilsaloon  #tech  Why Are We Teaching Pandas Instead of SQL?Published at May 20, 2022 by vladpublish  #sql-vs-pandas  A Quick Introduction to Python Numpy for BeginnersPublished at May 18, 2022 by biraj21  #python  Join HackerNoon ABOUTCareersContactCookiesEmailsHelpPrivacyTermsREADArchiveLeaderboardNoonificationSignupTech BriefTech TagsTop StoriesWRITEDistributionEditor TipsGuidelinesNew StoryPerksPromptsWhy WritePARTNERBillboardBrand PublishingCase StudiesContestsNiche MarketingNewsletterWriting ContestsThe HackerNoon NewsletterQuality Weekly Reads About Technology Infiltrating EverythingSubscribefree Yes, I agree to receive emails about tech eating the world.
