














Flume or Kafka for Real-Time Event Processing
        























 














LinkedIn and 3rd parties use essential and non-essential cookies to provide, secure, analyze and improve our Services, and to show you relevant ads (including professional and job ads) on and off LinkedIn. Learn more in our Cookie Policy.Select Accept to consent or Reject to decline non-essential cookies for this use. You can update your choices at any time in your settings.



                Accept
                

                Reject
                


 





LinkedIn






              Lan Jiang
 
Expand search










              Jobs
            



              People
            



              Learning
            












Dismiss






Dismiss

















Dismiss


 











Dismiss


 

















Dismiss














          Join now
        
Sign in





 







 




 




              Flume or Kafka for Real-Time Event Processing
            









                  Report this post
                


 







            
          
        Lan Jiang
      
      
          




            
        Lan Jiang
      
          

              
        Sr. Manager, Field Engineering | Healthcare & Life Sciences (I am actively hiring Specialist Solutions Architect)
      
            


              
        
          Published Mar 18, 2015
      
      
            



          + Follow
        





Flume and Kakfa both can act as the event backbone for real-time event processing. Some features are overlapping between the two and there are some confusions about what should be used in what use cases. This post tries to elaborate on the pros and cons of both products and the use cases that they fit the best.
Flume and Kafka are actually two quite different products. Kafka is a general purpose publish-subscribe model messaging system, which offers strong durability, scalability and fault-tolerance support. It is not specifically designed for Hadoop. Hadoop ecosystem is just be one of its possible consumers.





Image taken from http://kafka.apache.org
Flume is a distributed, reliable, and available system for efficiently collecting, aggregating, and moving large amounts of data from many different sources to a centralized data store, such as HDFS or HBase. It is more tightly integrated with Hadoop ecosystem. For example, the flume HDFS sink integrates with the HDFS security very well. So its common use case is to act as a data pipeline to ingest data into Hadoop.



Image taken from https://blogs.apache.org/flume/entry/flume_ng_architecture
Compared to Flume, Kafka wins on the its superb scalability and messsage durablity.
Kafka is very scalable. One of the key benefits of Kafka is that it is very easy to add large number of consumers without affecting performance and without down time. That's because Kafka does not track which messages in the topic have been consumed by consumers. It simply keeps all messages in the topic within a configurable period. It is the consumers' responsibility to do the tracking through offset. In contrast, adding more consumers to Flume means changing the topology of Flume pipeline design, replicating the channel to deliver the messages to a new sink. It is not really a scalable solution when you have huge number of consumers. Also since the flume topology needs to be changed, it requires some down time.
Kafka's scalability is also demonstrated by its ability to handle spike of the events. This is where Kakfa truly shines because it acts as a "shock absorber" between the producers and consumers. Kafka can handle events at 100k+ per second rate coming from producers. Because Kafka consumers pull data from the topic, different consumers can consume the messages at different pace. Kafka also supports different consumption model. You can have one consumer processing the messages at real-time and another consumer processing the messages in batch mode. On the contrary, Flume sink supports push model. When event producers suddenly generate a flood of messages, even though flume channel somewhat acts as a buffer between source and sink, the sink endpoints might still be overwhelmed by the write operations. Message durability is also an important consideration. Flume supports both ephemeral memory-based channel and durable file-based channel. Even when you use a durable file-based channel, any event stored in a channel not yet written to a sink will be unavailable until the agent is recovered. Moreoever, the file-based channel does not replicate event data to a different node. It totally depends on the durability of the storage it writes upon. If message durability is crucial, it is recommended to use SAN or RAID. Kafka supports both synchronous and asynchronous replication based on your durability requirement and it uses commodity hard drive. Flume does have some features that makes it attractive to be a data ingestion and simple event processing framework. The key benefit of Flume is that it supports many built-in sources and sinks, which you can use out of box. If you use Kafka, most likely you have to write your own producer and consumer. Of course, as Kakfa becomes more and more popular, other frameworks are constantly adding integration support for Kafka. For example, Apache Storm added Kafka Spout in release 0.9.2, allowing Storm topology to consume data from Kafka 0.8.x directly. Kafka does not provider native support for message processing. So mostly likely it needs to integrate with other event processing frameworks such as Apache Storm to complete the job. In contrast, Flume supports different data flow models and interceptors chaining, which makes event filtering and transforming very easy. For example, you can filter out messages that you are not interested in the pipeline first before sending it through the network for obvious performance reason. However, It is not suitable for complex event processing, which I will address in a future post. The good news is that the latest trend is to use both together to get the best of both worlds. For example, Flume in CDH 5.2 starts to accept data from Kafka via the KafkaSource and push to Kafka using the KafkaSink. Also CDH 5.3 (the latest release) adds Kafka Channel support, which addresses the event durability issue mentioned above.













            504
        


        
            47 Comments
          
      





Like




Comment




Share













                Tung Mai
              


great article




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









                  Report this comment
                


 














                Tushar Shekhar
              


In depth explanation.




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









                  Report this comment
                


 














                Pranav Patel
              


Great point to point article.




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    4y
  
        









                  Report this comment
                


 














                Saurabh Kumar Gupta
              


Great Explanation...




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    4y
  
        









                  Report this comment
                


 














                Seshagiri Rao Kadamati
              


Thank you




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    4y
  
        









                  Report this comment
                


 














                Seshagiri Rao Kadamati
              


Very well explained




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    4y
  
        









                  Report this comment
                


 














                kavya tg
              


hi nice article, apache flume feed online streaming data from various sources like network traffic, social media, email messages, and log files into HDFS. Both Kafka and flume works on the streaming data,i got this information from this website http://beyondcorner.com/learn-apache-flume/




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    4y
  
        









                  Report this comment
                


 














                Elisa Dioguardi
              


thank you, it's an interesting explanation




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    4y
  
        









                  Report this comment
                


 











LinkedIn User


nice presentation





                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    4y
  
        









                  Report this comment
                


 














                Naeem Sayyed
              


very good explanation




                  Like
                

        Sign in to like this comment
      



                  Reply
                

        Sign in to reply to this comment
      

 




          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    5y
  
        









                  Report this comment
                


 






              See more comments
          




        To view or add a comment, sign in
      
      To view or add a comment, sign in









More articles by this author


              See all
            



 



 









 


          Enable Back Pressure To Make Your Spark Streaming Application Production Ready
        

            Feb 22, 2017
          

 






 


          How to Shutdown a Spark Streaming Job Gracefully
        

            Feb 5, 2017
          

 






 


          Why I choose Scala for Apache Spark project
        

            Apr 24, 2015
          

 

























          Others also viewed
        








 


            
        What is Apache Flume? and How it is storing log files/streaming data  in hadoop (hdfs/hive/hbase....etc) ?
      
 




Prabhu Sundarraj

          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    3y
  
        









 


            
        My weekend dating with Apache Flume-ng
      
 




vamsi Krishna Krishna

          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    7y
  
        









 


            
        How we increased performance of flume by 400%
      
 




Shubham Shirude

          

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
    
    
    
    
    
    
    
    

    7y
  
        













LinkedIn

© 2022



            About
          



            Accessibility
          



            User Agreement
          



            Privacy Policy
          



            Cookie Policy
          



            Copyright Policy
          



            Brand Policy
          



            Guest Controls
          



            Community Guidelines
          








                العربية (Arabic)
            




                Čeština (Czech)
            




                Dansk (Danish)
            




                Deutsch (German)
            




English (English)





                Español (Spanish)
            




                Français (French)
            




                हिंदी (Hindi)
            




                Bahasa Indonesia (Bahasa Indonesia)
            




                Italiano (Italian)
            




                日本語 (Japanese)
            




                한국어 (Korean)
            




                Bahasa Malaysia (Malay)
            




                Nederlands (Dutch)
            




                Norsk (Norwegian)
            




                Polski (Polish)
            




                Português (Portuguese)
            




                Română (Romanian)
            




                Русский (Russian)
            




                Svenska (Swedish)
            




                ภาษาไทย (Thai)
            




                Tagalog (Tagalog)
            




                Türkçe (Turkish)
            




                简体中文 (Chinese (Simplified))
            




                正體中文 (Chinese (Traditional))
            



Language





 






