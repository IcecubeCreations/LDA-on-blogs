<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="https://piotrminkowski.wordpress.com/xmlrpc.php">

<title>Message Brokers &#8211; Piotr&#039;s TechBlog</title>
<meta name='robots' content='max-image-preview:large' />
<meta name="google-site-verification" content="WmDORopnXbRZQ--eUd5WSkkKxoFKRIUEi2-heXpKbJU" />
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//s.pubmine.com' />
<link rel='dns-prefetch' href='//x.bidswitch.net' />
<link rel='dns-prefetch' href='//static.criteo.net' />
<link rel='dns-prefetch' href='//ib.adnxs.com' />
<link rel='dns-prefetch' href='//aax.amazon-adsystem.com' />
<link rel='dns-prefetch' href='//bidder.criteo.com' />
<link rel='dns-prefetch' href='//cas.criteo.com' />
<link rel='dns-prefetch' href='//gum.criteo.com' />
<link rel='dns-prefetch' href='//ads.pubmatic.com' />
<link rel='dns-prefetch' href='//gads.pubmatic.com' />
<link rel='dns-prefetch' href='//tpc.googlesyndication.com' />
<link rel='dns-prefetch' href='//ad.doubleclick.net' />
<link rel='dns-prefetch' href='//googleads.g.doubleclick.net' />
<link rel='dns-prefetch' href='//www.googletagservices.com' />
<link rel='dns-prefetch' href='//cdn.switchadhub.com' />
<link rel='dns-prefetch' href='//delivery.g.switchadhub.com' />
<link rel='dns-prefetch' href='//delivery.swid.switchadhub.com' />
<link rel='dns-prefetch' href='//a.teads.tv' />
<link rel='dns-prefetch' href='//prebid.media.net' />
<link rel='dns-prefetch' href='//adserver-us.adtech.advertising.com' />
<link rel='dns-prefetch' href='//fastlane.rubiconproject.com' />
<link rel='dns-prefetch' href='//prebid-server.rubiconproject.com' />
<link rel='dns-prefetch' href='//hb-api.omnitagjs.com' />
<link rel='dns-prefetch' href='//mtrx.go.sonobi.com' />
<link rel='dns-prefetch' href='//apex.go.sonobi.com' />
<link rel='dns-prefetch' href='//u.openx.net' />
<link href='https://fonts.gstatic.com' crossorigin rel='preconnect' />
<link rel="alternate" type="application/rss+xml" title="Piotr&#039;s TechBlog &raquo; Feed" href="https://piotrminkowski.wordpress.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Piotr&#039;s TechBlog &raquo; Comments Feed" href="https://piotrminkowski.wordpress.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Piotr&#039;s TechBlog &raquo; Message Brokers Category Feed" href="https://piotrminkowski.wordpress.com/category/message-brokers/feed/" />
	<script type="text/javascript">
		/* <![CDATA[ */
		function addLoadEvent(func) {
			var oldonload = window.onload;
			if (typeof window.onload != 'function') {
				window.onload = func;
			} else {
				window.onload = function () {
					oldonload();
					func();
				}
			}
		}
		/* ]]> */
	</script>
	<script type="text/javascript">
window._wpemojiSettings = {"baseUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/72x72\/","ext":".png","svgUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/wpcom-smileys\/twemoji\/2\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/s0.wp.com\/wp-includes\/js\/wp-emoji-release.min.js?m=1652185836h&ver=6.0-RC4-53438"}};
/*! This file is auto-generated */
!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode,e=(p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0),i.toDataURL());return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([129777,127995,8205,129778,127999],[129777,127995,8203,129778,127999])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(e=t.source||{}).concatemoji?c(e.concatemoji):e.wpemoji&&e.twemoji&&(c(e.twemoji),c(e.wpemoji)))}(window,document,window._wpemojiSettings);
</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='all-css-0-1' href='https://s0.wp.com/_static/??-eJyNkFtOAzEMRTdEEmYKU34Qa8nDilych+KkVXZPWrXDUITK55XvObqyOmVhU6wQqwpNZGoeI6tTtikIDkjQ75K0zE9qgxlK/htMxWnHylMymn51bzXfRjRQ/LgUUMdpJ2c5K9OQ3FloPwWhKbp0xbUTrCKMlpoDVgdWARxqIAiX8ZuQSXcogsBr22XA+Bgft23+Af09/rJ0yKBmfZ6se2pV+ILubva/FUVXjJ4f4DZdsVlOb3ISjCETiALH8USHXNeGWEUf4X1aXnfPy8t+vxy+AOdpvAM=?cssminify=yes' type='text/css' media='all' />
<style id='wp-block-library-inline-css'>
.has-text-align-justify {
	text-align:justify;
}
</style>
<style id='global-styles-inline-css'>
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
</style>
<link rel='stylesheet' id='all-css-2-1' href='https://s0.wp.com/_static/??-eJyNjjsOAjEMRC9EsFb8KsRZkqwFC3FiZRytuD0WlFDQTDF6bzS0asitGlcjGUHLuC4VlFtn70WjkRPC8xK5sDi2zcCGfmuruhNS0s5A8JRlSLCbi/jyPjXpSFTazLDYCfYs/BcZATY/ClAqLT/e+xc5T8fDbj95nu4vGjlR8g==?cssminify=yes' type='text/css' media='all' />
<style id='lodestar-style-inline-css'>
.byline { clip: rect(1px, 1px, 1px, 1px); height: 1px; position: absolute; overflow: hidden; width: 1px; }
</style>
<link crossorigin="anonymous" rel='stylesheet' id='lodestar_fonts_url-css'  href='https://fonts.googleapis.com/css?family=Work+Sans%3A800%7CKarla%3A400%2C400italic%2C700%2C700italic&#038;subset=latin%2Clatin-ext' media='all' />
<link rel='stylesheet' id='all-css-4-1' href='https://s0.wp.com/_static/??-eJyFj9EKwjAMRX/IGsRt4oP4LV0Xa6VtSpMy9vdWVKiI8+1ccg+XwJyUoSgYBUJRyRfrIoPFiNnVww/cGuYNNK5cMSBDKiN4mpBFZ3DR1IqhoFgWj19Os8dknPYqYCwtrymzmywKg1BSibjS35W38lp4PtWGNdkiKU9Gi6P4EdTFa5fX1IyjJ1vRQm018SGdw2nXd8du6PeH4XYHgoKWjA==?cssminify=yes' type='text/css' media='all' />
<link rel='stylesheet' id='print-css-5-1' href='https://s0.wp.com/wp-content/mu-plugins/global-print/global-print.css?m=1465851035h&cssminify=yes' type='text/css' media='print' />
<style id='jetpack-global-styles-frontend-style-inline-css'>
:root { --font-headings: unset; --font-base: unset; --font-headings-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; --font-base-default: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;}
</style>
<link rel='stylesheet' id='all-css-8-1' href='https://s0.wp.com/wp-content/themes/h4/global.css?m=1420737423h&cssminify=yes' type='text/css' media='all' />
<script id='media-video-jwt-bridge-js-extra'>
var videopressAjax = {"ajaxUrl":"https:\/\/piotrminkowski.wordpress.com\/wp-admin\/admin-ajax.php","bridgeUrl":"https:\/\/s0.wp.com\/wp-content\/mu-plugins\/videopress\/js\/videopress-token-bridge.js","post_id":"7632"};
</script>
<script id='wpcom-actionbar-placeholder-js-extra'>
var actionbardata = {"siteID":"123543283","siteURL":"http:\/\/piotrminkowski.wordpress.com","xhrURL":"https:\/\/piotrminkowski.wordpress.com\/wp-admin\/admin-ajax.php","nonce":"da2e64eb2b","isLoggedIn":"","statusMessage":"","subsEmailDefault":"instantly","proxyScriptUrl":"https:\/\/s0.wp.com\/wp-content\/js\/wpcom-proxy-request.js?ver=20211021","i18n":{"followedText":"New posts from this site will now appear in your <a href=\"https:\/\/wordpress.com\/read\">Reader<\/a>","foldBar":"Collapse this bar","unfoldBar":"Expand this bar"}};
</script>
<script crossorigin='anonymous' type='text/javascript' src='https://s0.wp.com/_static/??-eJyFjskOwjAMRH8IExWJUg6Ib0kTEyVkw04o/XvKUrYLJ8ueNzMWQwaVYsFYhGMRUm89QmUkaaYb2HhIS8cL8c2RL5ApXcZZs1H5qpFvojtVpPE5lsHGvxAEa0gW/ITntlAh+2psZHG2GlMm5HvCe4OSjhihJ6sN/vp7n8wrYUikpWZQXjI/HlEhA5faT7592DXterXZNl3Xuisv9mlE'></script>
<script type='text/javascript'>
	window.addEventListener( 'DOMContentLoaded', function() {
		rltInitialize( {"token":null,"iframeOrigins":["https:\/\/widgets.wp.com"]} );
	} );
</script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://piotrminkowski.wordpress.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://s0.wp.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress.com" />

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="website" />
<meta property="og:title" content="Message Brokers &#8211; Piotr&#039;s TechBlog" />
<meta property="og:url" content="https://piotrminkowski.wordpress.com/category/message-brokers/" />
<meta property="og:site_name" content="Piotr&#039;s TechBlog" />
<meta property="og:image" content="https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=200" />
<meta property="og:image:width" content="200" />
<meta property="og:image:height" content="200" />
<meta property="og:image:alt" content="" />
<meta property="og:locale" content="en_US" />
<meta property="fb:app_id" content="249643311490" />
<meta name="twitter:creator" content="@piotr_minkowski" />
<meta name="twitter:site" content="@piotr_minkowski" />

<!-- End Jetpack Open Graph Tags -->
<link rel="search" type="application/opensearchdescription+xml" href="https://piotrminkowski.wordpress.com/osd.xml" title="Piotr&#039;s TechBlog" />
<link rel="search" type="application/opensearchdescription+xml" href="https://s1.wp.com/opensearch.xml" title="WordPress.com" />
<meta name="application-name" content="Piotr&#039;s TechBlog" /><meta name="msapplication-window" content="width=device-width;height=device-height" /><meta name="msapplication-tooltip" content="Blog about Java, Microservices, Spring, Containers and more" /><meta name="msapplication-task" content="name=Subscribe;action-uri=https://piotrminkowski.wordpress.com/feed/;icon-uri=https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=16" /><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=https://s0.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=https://s0.wp.com/i/favicon.ico" /><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=https://s0.wp.com/i/favicon.ico" /><meta name="description" content="Posts about Message Brokers written by Piotr Mińkowski" />
		<script type="text/javascript">

			window.doNotSellCallback = function() {

				var linkElements = [
					'a[href="https://wordpress.com/?ref=footer_blog"]',
					'a[href="https://wordpress.com/?ref=footer_website"]',
					'a[href="https://wordpress.com/?ref=vertical_footer"]',
					'a[href^="https://wordpress.com/?ref=footer_segment_"]',
				].join(',');

				var dnsLink = document.createElement( 'a' );
				dnsLink.href = 'https://wordpress.com/advertising-program-optout/';
				dnsLink.classList.add( 'do-not-sell-link' );
				dnsLink.rel = 'nofollow';
				dnsLink.style.marginLeft = '0.5em';
				dnsLink.textContent = 'Do Not Sell My Personal Information';

				var creditLinks = document.querySelectorAll( linkElements );

				if ( 0 === creditLinks.length ) {
					return false;
				}

				Array.prototype.forEach.call( creditLinks, function( el ) {
					el.insertAdjacentElement( 'afterend', dnsLink );
				});

				return true;
			};

		</script>
		<script id="cmp-configuration" type="application/configuration">{"gvlVersion":"144","consentLanguage":"EN","locale":"en","vendorsAll":"BGJrv6__7a_s_3_f_b9ujzGr_v9e__yGccL5tn3gu5f635ei--wnZou_VtXBVyPEl27YJCBto5k6iak2LVEqteY9jUmzlORpRPZckk9jL2zrAw_p8_sofzBTPf_P__7_O6f___v_2_ue__r___7v__3__18b__Pvs_9_r6v_f___________3________-AA","vendorsLegInterest":"BGIAkw1LyALsyxwZNIwihRAjCsJCqBQAUUAwtEVgA4OCnZWAS6ghYAIBUhGBECDEFGDAIABBIAkIiAkALBAIgCIBAACABEAhAARMAgsALAwCAAUA0LEAKAAQJCDIgIjlMCAqRKKCWysQSgr2NMIA6zwAoFEZFQAIkkhBICAkLBzHAEgJeLJA0xQvkAIwQoAA","ajaxNonce":"4c483b501e","modulePath":"https:\/\/s0.wp.com\/wp-content\/blog-plugins\/wordads-classes\/js\/","gvlPath":"https:\/\/public-api.wordpress.com\/wpcom\/v2\/sites\/123543283\/cmp\/vendors\/en\/","_":{"title":"Privacy & Cookies","intro":"We, WordPress.com, and our advertising partners store and\/or access information on your device and also process personal data, like unique identifiers, browsing activity, and other standard information sent by your device including your IP address. This information is collected over time and used for personalised ads, ad measurement, audience insights, and product development specific to our ads program. If this sounds good to you, select \"I Agree!\" below.  Otherwise, you can get more information, customize your consent preferences, or decline consent by selecting \"Learn More\". Note that your preferences apply to all websites in the <a href=\"https:\/\/automattic.com\/cookies\/#user-ads-consent\" target=\"_blank\">WordPress.com network<\/a>, and if you change your mind in the future you can update your preferences anytime by visiting the Privacy link displayed under each ad. One last thing, our partners may process some of your data based on legitimate interests instead of consent but you can object to that by choosing \"Learn More\" and then disabling the Legitimate Interests toggle under any listed Purpose or Partner.","config":"Learn More","accept":"I Agree!","viewPartners":"View Partners","error":"We're sorry but an unexpected error occurred. Please try again later."}}</script>		<script type="text/javascript">
		function __ATA_CC() {var v = document.cookie.match('(^|;) ?personalized-ads-consent=([^;]*)(;|$)');return v ? 1 : 0;}
		var __ATA_PP = { 'pt': 3, 'ht': 0, 'tn': 'lodestar', 'uloggedin': 0, 'amp': false, 'consent': __ATA_CC(), 'gdpr_applies': true, 'ad': { 'label': { 'text': 'Advertisements' }, 'reportAd': { 'text': 'Report this ad' }, 'privacySettings': { 'text': 'Privacy', 'onClick': function() { window.__tcfapi && window.__tcfapi( 'showUi' ) } } }, 'siteid': 8982, 'blogid': 123543283, 'js_hint': 'tcf2_test' };
		var __ATA = __ATA || {};
		__ATA.cmd = __ATA.cmd || [];
		__ATA.criteo = __ATA.criteo || {};
		__ATA.criteo.cmd = __ATA.criteo.cmd || [];
		</script>
		<script type="text/javascript">
		(function(){var g=Date.now||function(){return+new Date};function h(a,b){a:{for(var c=a.length,d="string"==typeof a?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:"string"==typeof a?a.charAt(b):a[b]};function k(a,b,c){c=null!=c?"="+encodeURIComponent(String(c)):"";if(b+=c){c=a.indexOf("#");0>c&&(c=a.length);var d=a.indexOf("?");if(0>d||d>c){d=c;var e=""}else e=a.substring(d+1,c);a=[a.substr(0,d),e,a.substr(c)];c=a[1];a[1]=b?c?c+"&"+b:b:c;a=a[0]+(a[1]?"?"+a[1]:"")+a[2]}return a};var l=0;function m(a,b){var c=document.createElement("script");c.src=a;c.onload=function(){b&&b(void 0)};c.onerror=function(){b&&b("error")};a=document.getElementsByTagName("head");var d;a&&0!==a.length?d=a[0]:d=document.documentElement;d.appendChild(c)}function n(a){var b=void 0===b?document.cookie:b;return(b=h(b.split("; "),function(c){return-1!=c.indexOf(a+"=")}))?b.split("=")[1]:""}function p(a){return"string"==typeof a&&0<a.length}
		function r(a,b,c){b=void 0===b?"":b;c=void 0===c?".":c;var d=[];Object.keys(a).forEach(function(e){var f=a[e],q=typeof f;"object"==q&&null!=f||"function"==q?d.push(r(f,b+e+c)):null!==f&&void 0!==f&&(e=encodeURIComponent(b+e),d.push(e+"="+encodeURIComponent(f)))});return d.filter(p).join("&")}function t(a,b){a||((window.__ATA||{}).config=b.c,m(b.url))}var u=Math.floor(1E13*Math.random()),v=window.__ATA||{};window.__ATA=v;window.__ATA.cmd=v.cmd||[];v.rid=u;v.createdAt=g();var w=window.__ATA||{},x="s.pubmine.com";
		w&&w.serverDomain&&(x=w.serverDomain);var y="//"+x+"/conf",z=window.top===window,A=window.__ATA_PP&&window.__ATA_PP.gdpr_applies,B="boolean"===typeof A?Number(A):null,C=window.__ATA_PP||null,D=z?document.referrer?document.referrer:null:null,E=z?window.location.href:document.referrer?document.referrer:null,F,G=n("__ATA_tuuid");F=G?G:null;var H=window.innerWidth+"x"+window.innerHeight,I=n("usprivacy"),J=r({gdpr:B,pp:C,rid:u,src:D,ref:E,tuuid:F,vp:H,us_privacy:I?I:null},"",".");
		(function(a){var b=void 0===b?"cb":b;l++;var c="callback__"+g().toString(36)+"_"+l.toString(36);a=k(a,b,c);window[c]=function(d){t(void 0,d)};m(a,function(d){d&&t(d)})})(y+"?"+J);}).call(this);
		</script><!-- There is no amphtml version available for this URL. --><link rel="icon" href="https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=32" sizes="32x32" />
<link rel="icon" href="https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=192" sizes="192x192" />
<link rel="apple-touch-icon" href="https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=180" />
<meta name="msapplication-TileImage" content="https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=200" />
<script type="text/javascript">
	window.google_analytics_uacct = "UA-52447-2";
</script>

<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-52447-2']);
	_gaq.push(['_gat._anonymizeIp']);
	_gaq.push(['_setDomainName', 'wordpress.com']);
	_gaq.push(['_initData']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
	})();
</script>
</head>

<body class="archive category category-message-brokers category-110665517 wp-embed-responsive customizer-styles-applied hfeed lodestar-footer-image has-sidebar has-top-content author-hidden highlander-enabled highlander-light">
<div id="page" class="site">
	<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

	<header id="masthead" class="site-header" role="banner">

		<div class="header-top">
			<div class="wrap">
				<nav id="site-navigation" class="main-navigation" role="navigation" aria-label="Top Menu">
	<button class="menu-toggle" aria-controls="top-menu" aria-expanded="false">Menu</button>
	<div class="menu-primary-container"><ul id="top-menu" class="menu"><li id="menu-item-8" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-8"><a href="/">Home</a></li>
<li id="menu-item-6632" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6632"><a href="https://piotrminkowski.wordpress.com/books/">My Books</a></li>
<li id="menu-item-7142" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-7142"><a href="https://piotrminkowski.wordpress.com/courses-trainings/">Courses &amp; Trainings</a></li>
<li id="menu-item-8178" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8178"><a href="https://piotrminkowski.wordpress.com/about-me/">About Me</a></li>
<li id="menu-item-10" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10"><a href="https://piotrminkowski.wordpress.com/contact/">Contact</a></li>
</ul></div></nav><!-- #site-navigation -->
					<div class="site-top-content">
		<span class="site-top-content-1">This blog has been moved to the new site (<strong><a href="https://piotrminkowski.com">-&gt; piotrminkowski.com</a></strong>)</span>	</div>
							</div>
		</div><!-- .header-top -->

		
<div class="custom-header">
	
			<div class="custom-header-image" style="background-image: url(https://defaultcustomheadersdata.files.wordpress.com/2016/07/blur.jpg?resize=2000,1200)">
				<div class="site-branding">
	<div class="wrap">

		
					<p class="site-title"><a href="https://piotrminkowski.wordpress.com/" rel="home">Piotr&#039;s TechBlog</a></p>
		
						<p class="site-description">Blog about Java, Microservices, Spring, Containers and more</p>
		
	</div><!-- .wrap -->
</div><!-- .site-branding -->
			</div>

		
</div><!-- .custom-header -->

	</header>

	<div id="content" class="site-content">
<div class="wrap">
	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

		
			<header class="page-header">
				<h1 class="page-title">Category: <span>Message Brokers</span></h1>			</header>
			
<article id="post-7632" class="post-7632 post type-post status-publish format-standard has-post-thumbnail hentry category-containers category-message-brokers tag-java tag-jib tag-kubemq tag-kubernetes tag-message-broker tag-messaging tag-minikube tag-skaffold">
			<div class="post-thumbnail">
			<a href="https://piotrminkowski.wordpress.com/2020/01/17/kubernetes-messaging-with-java-and-kubemq/">
				<img width="700" height="439" src="https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png?w=700" class="attachment-lodestar-featured-archive-image size-lodestar-featured-archive-image wp-post-image" alt="" srcset="https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png?w=768 768w, https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png 895w" sizes="(max-width: 700px) 100vw, 700px" data-attachment-id="7649" data-permalink="https://piotrminkowski.wordpress.com/2020/01/17/kubernetes-messaging-with-java-and-kubemq/kubernetes-messaging-java-kubemq-logo/" data-orig-file="https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png" data-orig-size="895,561" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="kubernetes-messaging-java-kubemq-logo" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2020/01/kubernetes-messaging-java-kubemq-logo.png?w=700" />			</a>
		</div>
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2020/01/17/kubernetes-messaging-with-java-and-kubemq/" rel="bookmark">Kubernetes Messaging with Java and&nbsp;KubeMQ</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2020/01/17/kubernetes-messaging-with-java-and-kubemq/" rel="bookmark"><time class="entry-date published updated" datetime="2020-01-17T08:53:31+00:00">January 17, 2020</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>Have you ever tried to run any message broker on Kubernetes? <strong>KubeMQ</strong> is relatively new solution and is not as popular as competitive tools like RabbitMQ, Kafka or ActiveMQ. However, it has one big advantage over them &#8211; it is Kubernetes <strong>native</strong> message broker, which may be deployed there using a single command without preparing any additional templates or manifests. This convinced me to take a closer look at KubeMQ.  <a href="https://piotrminkowski.wordpress.com/2020/01/17/kubernetes-messaging-with-java-and-kubemq/#more-7632" class="more-link">Continue reading <span class="screen-reader-text">&#8220;Kubernetes Messaging with Java and&nbsp;KubeMQ&#8221;</span> <span class="meta-nav">&rarr;</span></a></p>
	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/java/" rel="tag">Java</a>, <a href="https://piotrminkowski.wordpress.com/tag/jib/" rel="tag">Jib</a>, <a href="https://piotrminkowski.wordpress.com/tag/kubemq/" rel="tag">KubeMQ</a>, <a href="https://piotrminkowski.wordpress.com/tag/kubernetes/" rel="tag">Kubernetes</a>, <a href="https://piotrminkowski.wordpress.com/tag/message-broker/" rel="tag">message broker</a>, <a href="https://piotrminkowski.wordpress.com/tag/messaging/" rel="tag">messaging</a>, <a href="https://piotrminkowski.wordpress.com/tag/minikube/" rel="tag">Minikube</a>, <a href="https://piotrminkowski.wordpress.com/tag/skaffold/" rel="tag">Skaffold</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2020/01/17/kubernetes-messaging-with-java-and-kubemq/#respond">Leave a comment</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-7207" class="post-7207 post type-post status-publish format-standard has-post-thumbnail hentry category-message-brokers category-micronaut category-microservices tag-apache-kafka tag-distributed-tracing tag-messaging tag-micronaut tag-microservices tag-zipkin">
			<div class="post-thumbnail">
			<a href="https://piotrminkowski.wordpress.com/2019/08/06/kafka-in-microservices-with-micronaut/">
				<img width="700" height="465" src="https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png?w=700" class="attachment-lodestar-featured-archive-image size-lodestar-featured-archive-image wp-post-image" alt="" loading="lazy" srcset="https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png?w=768 768w, https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png 839w" sizes="(max-width: 700px) 100vw, 700px" data-attachment-id="7215" data-permalink="https://piotrminkowski.wordpress.com/2019/08/06/kafka-in-microservices-with-micronaut/micronaut-kafka-logo/" data-orig-file="https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png" data-orig-size="839,557" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="micronaut-kafka-logo" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2019/08/micronaut-kafka-logo.png?w=700" />			</a>
		</div>
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2019/08/06/kafka-in-microservices-with-micronaut/" rel="bookmark">Kafka In Microservices With&nbsp;Micronaut</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2019/08/06/kafka-in-microservices-with-micronaut/" rel="bookmark"><time class="entry-date published" datetime="2019-08-06T07:14:19+00:00">August 6, 2019</time><time class="updated" datetime="2019-08-06T07:15:48+00:00">August 6, 2019</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>Today we are going to build some microservices communicating with each other asynchronously through Apache Kafka topics. We use Micronaut Framework, which provides dedicated library for integration with Kafka. Let&#8217;s take a brief look at the architecture of our sample system. We have 4 microservices: order-service, trip-service, driver-service and passenger-service. The implementation of these applications is very simple. All of them have in-memory storage and connect to the same Kafka instance.<br />
 <a href="https://piotrminkowski.wordpress.com/2019/08/06/kafka-in-microservices-with-micronaut/#more-7207" class="more-link">Continue reading <span class="screen-reader-text">&#8220;Kafka In Microservices With&nbsp;Micronaut&#8221;</span> <span class="meta-nav">&rarr;</span></a></p>
<div id="atatags-370373-628fd9b70a3f3">
        <script type="text/javascript">
            __ATA.cmd.push(function() {
                __ATA.initVideoSlot('atatags-370373-628fd9b70a3f3', {
                    sectionId: '370373',
                    format: 'inread'
                });
            });
        </script>
    </div>	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/apache-kafka/" rel="tag">Apache Kafka</a>, <a href="https://piotrminkowski.wordpress.com/tag/distributed-tracing/" rel="tag">distributed tracing</a>, <a href="https://piotrminkowski.wordpress.com/tag/messaging/" rel="tag">messaging</a>, <a href="https://piotrminkowski.wordpress.com/tag/micronaut/" rel="tag">Micronaut</a>, <a href="https://piotrminkowski.wordpress.com/tag/microservices/" rel="tag">Microservices</a>, <a href="https://piotrminkowski.wordpress.com/tag/zipkin/" rel="tag">Zipkin</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2019/08/06/kafka-in-microservices-with-micronaut/#respond">Leave a comment</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-7053" class="post-7053 post type-post status-publish format-standard has-post-thumbnail hentry category-message-brokers category-microservices tag-message-broker tag-microservices tag-redis tag-spring-cloud tag-spring-cloud-config tag-spring-data">
			<div class="post-thumbnail">
			<a href="https://piotrminkowski.wordpress.com/2019/03/18/redis-in-microservices-architecture/">
				<img width="700" height="353" src="https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=700" class="attachment-lodestar-featured-archive-image size-lodestar-featured-archive-image wp-post-image" alt="" loading="lazy" srcset="https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=768 768w, https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=1024 1024w, https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png 1046w" sizes="(max-width: 700px) 100vw, 700px" data-attachment-id="7056" data-permalink="https://piotrminkowski.wordpress.com/2019/03/18/redis-in-microservices-architecture/redis-micro-logo/" data-orig-file="https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png" data-orig-size="1046,527" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="redis-micro-logo" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2019/03/redis-micro-logo.png?w=700" />			</a>
		</div>
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2019/03/18/redis-in-microservices-architecture/" rel="bookmark">Redis in Microservices&nbsp;Architecture</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2019/03/18/redis-in-microservices-architecture/" rel="bookmark"><time class="entry-date published" datetime="2019-03-18T09:12:30+00:00">March 18, 2019</time><time class="updated" datetime="2019-05-30T09:32:52+00:00">May 30, 2019</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>Redis can be widely used in microservices architecture. It is probably one of the few popular software solutions that may be leveraged by your application in such many different ways. Depending on the requirements it can acts as a primary database, cache, message broker. While it is also a key/value store we can use it as a configuration server or discovery server in your microservices architecture. Although it is usually defined as an in-memory data structure, we can also run it in persistent mode.<br />
Today, I’m going to show you some examples of using Redis with microservices built on top of Spring Boot and Spring Cloud frameworks. These application will communicate between each other asynchronously using Redis Pub/Sub, using Redis as a cache or primary database, and finally used Redis as a configuration server.  <a href="https://piotrminkowski.wordpress.com/2019/03/18/redis-in-microservices-architecture/#more-7053" class="more-link">Continue reading <span class="screen-reader-text">&#8220;Redis in Microservices&nbsp;Architecture&#8221;</span> <span class="meta-nav">&rarr;</span></a></p>
	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/message-broker/" rel="tag">message broker</a>, <a href="https://piotrminkowski.wordpress.com/tag/microservices/" rel="tag">Microservices</a>, <a href="https://piotrminkowski.wordpress.com/tag/redis/" rel="tag">Redis</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring-cloud/" rel="tag">Spring Cloud</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring-cloud-config/" rel="tag">Spring Cloud Config</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring-data/" rel="tag">Spring Data</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2019/03/18/redis-in-microservices-architecture/#respond">Leave a comment</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-6930" class="post-6930 post type-post status-publish format-standard has-post-thumbnail hentry category-containers category-message-brokers tag-clustering tag-consul tag-docker tag-message-broker tag-rabbitmq tag-vault">
			<div class="post-thumbnail">
			<a href="https://piotrminkowski.wordpress.com/2018/12/27/rabbitmq-cluster-with-consul-and-vault/">
				<img width="700" height="390" src="https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg?w=700" class="attachment-lodestar-featured-archive-image size-lodestar-featured-archive-image wp-post-image" alt="" loading="lazy" srcset="https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg?w=700 700w, https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg?w=150 150w, https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg?w=300 300w, https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg?w=768 768w, https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg 961w" sizes="(max-width: 700px) 100vw, 700px" data-attachment-id="6935" data-permalink="https://piotrminkowski.wordpress.com/2018/12/27/rabbitmq-cluster-with-consul-and-vault/rabbit-consul/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg" data-orig-size="961,535" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit-consul" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/12/rabbit-consul.jpg?w=700" />			</a>
		</div>
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2018/12/27/rabbitmq-cluster-with-consul-and-vault/" rel="bookmark">RabbitMQ Cluster with Consul and&nbsp;Vault</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2018/12/27/rabbitmq-cluster-with-consul-and-vault/" rel="bookmark"><time class="entry-date published" datetime="2018-12-27T23:20:07+00:00">December 27, 2018</time><time class="updated" datetime="2020-01-07T12:37:57+00:00">January 7, 2020</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>Almost two years ago I wrote an article about <strong>RabbitMQ</strong> clustering <a href="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/">RabbitMQ in cluster</a>. It was one of the first post on my blog, and it&#8217;s really hard to believe it has been two years since I started this blog. Anyway, one of the question about the topic described in the mentioned article inspired me to return to that subject one more time. That question pointed to the problem of an approach to setting up the cluster. This approach assumes that we are manually attaching new nodes to the cluster by executing the command <code>rabbitmqctl join_cluster</code> with cluster name as a parameter. If I remember correctly it was the only one available method of creating cluster at that time. Today we have more choices, what illustrates an evolution of RabbitMQ during last two years.  <a href="https://piotrminkowski.wordpress.com/2018/12/27/rabbitmq-cluster-with-consul-and-vault/#more-6930" class="more-link">Continue reading <span class="screen-reader-text">&#8220;RabbitMQ Cluster with Consul and&nbsp;Vault&#8221;</span> <span class="meta-nav">&rarr;</span></a></p>
	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/clustering/" rel="tag">Clustering</a>, <a href="https://piotrminkowski.wordpress.com/tag/consul/" rel="tag">Consul</a>, <a href="https://piotrminkowski.wordpress.com/tag/docker/" rel="tag">Docker</a>, <a href="https://piotrminkowski.wordpress.com/tag/message-broker/" rel="tag">message broker</a>, <a href="https://piotrminkowski.wordpress.com/tag/rabbitmq/" rel="tag">RabbitMQ</a>, <a href="https://piotrminkowski.wordpress.com/tag/vault/" rel="tag">Vault</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2018/12/27/rabbitmq-cluster-with-consul-and-vault/#comments">2 Comments</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-6678" class="post-6678 post type-post status-publish format-standard has-post-thumbnail hentry category-message-brokers category-microservices category-spring-cloud tag-apache-kafka tag-message-broker tag-messaging tag-microservices tag-rabbitmq tag-spring-boot tag-spring-cloud">
			<div class="post-thumbnail">
			<a href="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/">
				<img width="522" height="327" src="https://piotrminkowski.files.wordpress.com/2018/06/stream-logo.gif?w=522" class="attachment-lodestar-featured-archive-image size-lodestar-featured-archive-image wp-post-image" alt="" loading="lazy" data-attachment-id="6694" data-permalink="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/stream-logo/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-logo.gif" data-orig-size="522,327" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stream-logo" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-logo.gif?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-logo.gif?w=522" />			</a>
		</div>
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/" rel="bookmark">Building and testing message-driven microservices using Spring Cloud&nbsp;Stream</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/" rel="bookmark"><time class="entry-date published" datetime="2018-06-15T08:46:04+00:00">June 15, 2018</time><time class="updated" datetime="2018-06-15T10:15:44+00:00">June 15, 2018</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>Spring Boot and Spring Cloud give you a great opportunity to build microservices fast using different styles of communication. You can create synchronous REST microservices based on Spring Cloud Netflix libraries as shown in one of my previous articles <a href="https://piotrminkowski.wordpress.com/2018/04/26/quick-guide-to-microservices-with-spring-boot-2-0-eureka-and-spring-cloud/">Quick Guide to Microservices with Spring Boot 2.0, Eureka and Spring Cloud</a>. You can create asynchronous, reactive microservices deployed on Netty with Spring WebFlux project and combine it succesfully with some Spring Cloud libraries as shown in my article <a href="https://piotrminkowski.wordpress.com/2018/05/04/reactive-microservices-with-spring-webflux-and-spring-cloud/">Reactive Microservices with Spring WebFlux and Spring Cloud</a>. And finally, you may implement message-driven microservices based on publish/subscribe model using Spring Cloud Stream and message broker like Apache Kafka or RabbitMQ. The last of listed approaches to building microservices is the main subject of this article. I&#8217;m going to show you how to effectively build, scale, run and test messaging microservices basing on RabbitMQ broker.</p>
<h3>Architecture</h3>
<p>For the purpose of demonstrating Spring Cloud Stream features we will design a sample system which uses <strong>publish/subscribe model</strong> for inter-service communication. We have three microservices: <code>order-service</code>, <code>product-service</code> and <code>account-service</code>. Application <code>order-service</code> exposes HTTP endpoint that is responsible for processing orders sent to our system. All the incoming orders are processed asynchronously &#8211; <code>order-service</code> prepare and send message to RabbitMQ exchange and then respond to the calling client that the request has been accepted for processing. Applications <code>account-service</code> and <code>product-service</code> are listening for the order messages incoming to the exchange. Microservice <code>account-service</code> is responsible for checking if there are sufficient funds on customer&#8217;s account for order realization and then withdrawing cash from this account. Microservice <code>product-service</code> checks if there is sufficient amount of products in the store, and changes the number of available products after processing order. Both <code>account-service</code> and <code>product-service</code> send asynchronous response through RabbitMQ exchange (this time it is one-to-one communication using direct exchange) with a status of operation. Microservice <code>order-service</code> after receiving response messages sets the appropriate status of the order and exposes it through REST endpoint <code>GET /order/{id}</code> to the external client.</p>
<p>If you feel that the description of our sample system is a little incomprehensible, here&#8217;s the diagram with architecture for clarification.</p>
<p><img loading="lazy" data-attachment-id="6693" data-permalink="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/stream-1-3/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png" data-orig-size="819,288" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stream-1" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png?w=700" class="  wp-image-6693 aligncenter" src="https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png?w=640&#038;h=225" alt="stream-1" width="640" height="225" srcset="https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png?w=640&amp;h=225 640w, https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png?w=150&amp;h=53 150w, https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png?w=300&amp;h=105 300w, https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png?w=768&amp;h=270 768w, https://piotrminkowski.files.wordpress.com/2018/06/stream-12.png 819w" sizes="(max-width: 640px) 100vw, 640px" /></p>
<h3>Enabling Spring Cloud Stream</h3>
<p>The recommended way to include Spring Cloud Stream in the project is with a dependency management system. Spring Cloud Stream has an independent release trains management in relation to the whole Spring Cloud framework. However, if we have declared <code>spring-cloud-dependencies</code> in the <code>Elmhurst.RELEASE</code> version inside the <code>dependencyManagement</code><br />
section, we wouldn&#8217;t have to declare anything else in <code>pom.xml</code>. If you prefer to use only the Spring Cloud Stream project, you should define the following section.</p>
<pre class="brush: xml; title: ; notranslate" title="">
&lt;dependencyManagement&gt;
  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
      &lt;artifactId&gt;spring-cloud-stream-dependencies&lt;/artifactId&gt;
      &lt;version&gt;Elmhurst.RELEASE&lt;/version&gt;
      &lt;type&gt;pom&lt;/type&gt;
      &lt;scope&gt;import&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
</pre>
<p>The next step is to add <code>spring-cloud-stream</code> artifact to the project dependencies. I also recommend you include at least the <code>spring-cloud-sleuth</code> library to provide sending messaging with the same <code>traceId</code> as the source request incoming to <code>order-service</code>.</p>
<pre class="brush: xml; title: ; notranslate" title="">
&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
  &lt;artifactId&gt;spring-cloud-stream&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
  &lt;artifactId&gt;spring-cloud-sleuth&lt;/artifactId&gt;
&lt;/dependency&gt;
</pre>
<h3>Spring Cloud Stream programming model</h3>
<p>To enable connectivity to a message broker for your application, annotate the main class with <code>@EnableBinding</code>. The <code>@EnableBinding</code> annotation takes one or more interfaces as parameters. You may choose between three interfaces provided by Spring Cloud Stream:</p>
<ul>
<li>Sink: This is used for marking a service that receives messages from the inbound channel.</li>
<li>Source: This is used for sending messages to the outbound channel.</li>
<li>Processor: This can be used in case you need both an inbound channel and an outbound channel, as it extends the Source and Sink interfaces. Because <code>order-service</code> sends messages, as well as receives them, its main class has been annotated with <code>@EnableBinding(Processor.class)</code>.</li>
</ul>
<p>Here&#8217;s the main class of order-service that enables Spring Cloud Stream binding.</p>
<pre class="brush: java; title: ; notranslate" title="">
@SpringBootApplication
@EnableBinding(Processor.class)
public class OrderApplication {
  public static void main(String[] args) {
    new SpringApplicationBuilder(OrderApplication.class).web(true).run(args);
  }
}
</pre>
<h3>Adding message broker</h3>
<p>In Spring Cloud Stream nomenclature the implementation responsible for integration with specific message broker is called <strong>binder</strong>. By default, Spring Cloud Stream provides binder implementations for Kafka and RabbitMQ. It is able to automatically detect and use a binder found on the classpath. Any middleware-specific settings can be overridden through external configuration properties in the form supported by Spring Boot, such as application arguments, environment variables, or just the <code>application.yml</code> file. To include support for RabbitMQ, which used it this article as a message broker, you should add the following dependency to the project.</p>
<pre class="brush: xml; title: ; notranslate" title="">
&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
  &lt;artifactId&gt;spring-cloud-starter-stream-rabbit&lt;/artifactId&gt;
&lt;/dependency&gt;
</pre>
<p>Now, our applications need to connected with one, shared instance of RabbitMQ broker. That&#8217;s why I run Docker image with RabbitMQ exposed outside on default 5672 port. It also launches web dashboard available under address <a href="http://192.168.99.100:15672" rel="nofollow">http://192.168.99.100:15672</a>.</p>
<pre class="brush: bash; title: ; notranslate" title="">
$ docker run -d --name rabbit -p 15672:15672 -p 5672:5672 rabbitmq:management
</pre>
<p>We need to override default address of RabbitMQ for every Spring Boot application by settings property <code>spring.rabbitmq.host</code> to Docker machine IP 192.168.99.100.</p>
<pre class="brush: plain; title: ; notranslate" title="">
spring:
  rabbitmq:
    host: 192.168.99.100
    port: 5672
</pre>
<h3>Implementing message-driven microservices</h3>
<p>Spring Cloud Stream is built on top of Spring Integration project. Spring Integration extends the Spring programming model to support the well-known Enterprise Integration Patterns (EIP). EIP defines a number of components that are typically used for orchestration in distributed systems. You have probably heard about patterns such as message channels, routers, aggregators, or endpoints. Let&#8217;s proceed to the implementation.<br />
We begin from <code>order-service</code>, that is responsible for accepting orders, publishing them on shared topic and then collecting asynchronous responses from downstream services. Here&#8217;s the @Service, which builds message and publishes it to the remote topic using <code>Source</code> bean.</p>
<pre class="brush: java; title: ; notranslate" title="">
@Service
public class OrderSender {
  @Autowired
  private Source source;

  public boolean send(Order order) {
    return this.source.output().send(MessageBuilder.withPayload(order).build());
  }
}
</pre>
<p>That <code>@Service</code> is called by the controller, which exposes the HTTP endpoints for submitting new orders and getting order with status by <code>id</code>.</p>
<pre class="brush: java; title: ; notranslate" title="">
@RestController
public class OrderController {

	private static final Logger LOGGER = LoggerFactory.getLogger(OrderController.class);

	private ObjectMapper mapper = new ObjectMapper();

	@Autowired
	OrderRepository repository;
	@Autowired
	OrderSender sender;	

	@PostMapping
	public Order process(@RequestBody Order order) throws JsonProcessingException {
		Order o = repository.add(order);
		LOGGER.info("Order saved: {}", mapper.writeValueAsString(order));
		boolean isSent = sender.send(o);
		LOGGER.info("Order sent: {}", mapper.writeValueAsString(Collections.singletonMap("isSent", isSent)));
		return o;
	}

	@GetMapping("/{id}")
	public Order findById(@PathVariable("id") Long id) {
		return repository.findById(id);
	}

}
</pre>
<p>Now, let&#8217;s take a closer look on consumer side. The message sent by <code>OrderSender</code> bean from <code>order-service</code> is received by <code>account-service</code> and <code>product-service</code>. To receive the message from topic exchange, we just have to annotate the method that takes the Order object as a parameter with <code>@StreamListener</code>. We also have to define target channel for listener &#8211; in that case it is <code>Processor.INPUT</code>.</p>
<pre class="brush: java; title: ; notranslate" title="">
@SpringBootApplication
@EnableBinding(Processor.class)
public class OrderApplication {

	private static final Logger LOGGER = LoggerFactory.getLogger(OrderApplication.class);

	@Autowired
	OrderService service;

	public static void main(String[] args) {
		new SpringApplicationBuilder(OrderApplication.class).web(true).run(args);
	}

	@StreamListener(Processor.INPUT)
	public void receiveOrder(Order order) throws JsonProcessingException {
		LOGGER.info("Order received: {}", mapper.writeValueAsString(order));
		service.process(order);
	}

}
</pre>
<p>Received order is then processed by <code>AccountService</code> bean. Order may be accepted or rejected by <code>account-service</code> dependending on sufficient funds on customer&#8217;s account for order&#8217;s realization. The response with acceptance status is sent back to <code>order-service</code> via output channel invoked by the <code>OrderSender</code> bean.</p>
<pre class="brush: java; title: ; notranslate" title="">
@Service
public class AccountService {

	private static final Logger LOGGER = LoggerFactory.getLogger(AccountService.class);

	private ObjectMapper mapper = new ObjectMapper();

	@Autowired
	AccountRepository accountRepository;
	@Autowired
	OrderSender orderSender;

	public void process(final Order order) throws JsonProcessingException {
		LOGGER.info("Order processed: {}", mapper.writeValueAsString(order));
		List accounts =  accountRepository.findByCustomer(order.getCustomerId());
		Account account = accounts.get(0);
		LOGGER.info("Account found: {}", mapper.writeValueAsString(account));
		if (order.getPrice() &lt;= account.getBalance()) {
			order.setStatus(OrderStatus.ACCEPTED);
			account.setBalance(account.getBalance() - order.getPrice());
		} else {
			order.setStatus(OrderStatus.REJECTED);
		}
		orderSender.send(order);
		LOGGER.info(&quot;Order response sent: {}&quot;, mapper.writeValueAsString(order));
	}

}
</pre>
<p>The last step is configuration. It is provided inside <code>application.yml</code> file. We have to properly define destinations for channels. While <code>order-service</code> is assigning <code>orders-out</code> destination to output channel, and <code>orders-in</code> destination to input channel, <code>account-service</code> and <code>product-service</code> do the opposite. It is logical, because message sent by <code>order-service</code> via its output destination is received by consuming services via their input destinations. But it is still the same destination on shared broker&#8217;s exchange. Here are configuration settings of <code>order-service</code>.</p>
<pre class="brush: plain; title: ; notranslate" title="">
spring:
  cloud:
    stream:
      bindings:
        output:
          destination: orders-out
        input:
          destination: orders-in
      rabbit:
        bindings:
          input:
            consumer:
              exchangeType: direct
</pre>
<p>Here&#8217;s configuration provided for <code>account-service</code> and <code>product-service</code>.</p>
<pre class="brush: plain; title: ; notranslate" title="">
spring:
  cloud:
    stream:
      bindings:
        output:
          destination: orders-in
        input:
          destination: orders-out
      rabbit:
        bindings:
          output:
            producer:
              exchangeType: direct
              routingKeyExpression: '"#"'
</pre>
<p>Finally, you can run our sample microservice. For now, we just need to run a single instance of each microservice. You can easily generate some test requests by running JUnit test class <code>OrderControllerTest</code> provided in my source code repository inside module <code>order-service</code>. This case is simple. In the next we will study more advanced sample with multiple running instances of consuming services.</p>
<h3>Scaling up</h3>
<p>To scale up our Spring Cloud Stream applications we just need to launch additional instances of each microservice. They will still listen for the incoming messages on the same topic exchange as the currently running instances. After adding one instance of <code>account-service</code> and <code>product-service</code> we may send a test order. The result of that test won&#8217;t be satisfactory for us&#8230; Why? A single order is received by all the running instances of every microservice. This is exactly how topic exchanges works &#8211; the message sent to topic is received by all consumers, which are listening on that topic. Fortunately, Spring Cloud Stream is able to solve that problem by providing solution called <strong>consumer group</strong>. It is responsible for guarantee that only one of the instances is expected to handle a given message, if they are placed in a competing consumer relationship. The transformation to consumer group mechanism when running multiple instances of the service has been visualized on the following figure.</p>
<p><img loading="lazy" data-attachment-id="6687" data-permalink="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/stream-2-2/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg" data-orig-size="960,358" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stream-2" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg?w=700" class="  wp-image-6687 aligncenter" src="https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg?w=648&#038;h=242" alt="stream-2" width="648" height="242" srcset="https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg?w=648&amp;h=242 648w, https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg?w=150&amp;h=56 150w, https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg?w=300&amp;h=112 300w, https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg?w=768&amp;h=286 768w, https://piotrminkowski.files.wordpress.com/2018/06/stream-21.jpg 960w" sizes="(max-width: 648px) 100vw, 648px" /></p>
<p>Configuration of a consumer group mechanism is not very difficult. We just have to set <code>group</code> parameter with name of the group for given destination. Here&#8217;s the current binding configuration for <code>account-service</code>. The <code>orders-in</code> destination is a queue created for direct communication with <code>order-service</code>, so only <code>orders-out </code> is grouped using <code>spring.cloud.stream.bindings..group</code> property.</p>
<pre class="brush: plain; title: ; notranslate" title="">
spring:
  cloud:
    stream:
      bindings:
        output:
          destination: orders-in
        input:
          destination: orders-out
          group: account
</pre>
<p>Consumer group mechanisms is a concept taken from Apache Kafka, and implemented in Spring Cloud Stream also for RabbitMQ broker, which does not natively support it. So, I think it is pretty interesting how it is configured on RabbitMQ. If you run two instances of the service without setting group name on destination there are two bindings created for a single exchange (one binding per one instance) as shown in the picture below. Because two applications are listening on that exchange, there four bindings assigned to that exchange in total.</p>
<p><img loading="lazy" data-attachment-id="6688" data-permalink="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/stream-3/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png" data-orig-size="554,560" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="stream-3" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png?w=297" data-large-file="https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png?w=554" class="  wp-image-6688 aligncenter" src="https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png?w=460&#038;h=465" alt="stream-3" width="460" height="465" srcset="https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png?w=460&amp;h=465 460w, https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png?w=148&amp;h=150 148w, https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png?w=297&amp;h=300 297w, https://piotrminkowski.files.wordpress.com/2018/06/stream-3.png 554w" sizes="(max-width: 460px) 100vw, 460px" /></p>
<p>If you set group name for selected destination Spring Cloud Stream will create a single binding for all running instances of given service. The name of binding will be suffixed with group name.</p>
<p><img loading="lazy" data-attachment-id="6690" data-permalink="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/b08597_11_06/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png" data-orig-size="939,169" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="B08597_11_06" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png?w=700" class="  wp-image-6690 aligncenter" src="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png?w=597&#038;h=108" alt="B08597_11_06" width="597" height="108" srcset="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png?w=597&amp;h=108 597w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png?w=150&amp;h=27 150w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png?w=300&amp;h=54 300w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png?w=768&amp;h=138 768w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_06.png 939w" sizes="(max-width: 597px) 100vw, 597px" /></p>
<p>Because, we have included <code>spring-cloud-starter-sleuth</code> to the project dependencies the same <code>traceId</code> header is sent between all the asynchronous requests exchanged during realization of single request incoming to the <code>order-service</code> POST endpoint. Thanks to that we can easily correlate all logs using this header using Elastic Stack (Kibana).</p>
<p><img data-attachment-id="6689" data-permalink="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/b08597_11_05/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png" data-orig-size="1486,540" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="B08597_11_05" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=700" class="alignnone size-full wp-image-6689" src="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=700" alt="B08597_11_05" srcset="https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=1398 1398w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=768 768w, https://piotrminkowski.files.wordpress.com/2018/06/b08597_11_05.png?w=1024 1024w" sizes="(max-width: 700px) 100vw, 700px"   /></p>
<h3>Automated Testing</h3>
<p>You can easily test your microservice without connecting to a message broker. To achieve it you need to include <code>spring-cloud-stream-test-support</code> to your project dependencies. It contains the <code>TestSupportBinder</code> bean that lets you interact with the bound channels and inspect any messages sent and received by the application.</p>
<pre class="brush: xml; title: ; notranslate" title="">
&lt;dependency&gt;
  &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
  &lt;artifactId&gt;spring-cloud-stream-test-support&lt;/artifactId&gt;
  &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;
</pre>
<p>In the test class we need to declare <code>MessageCollector</code> bean, which is responsible for receiving messages retained by <code>TestSupportBinder</code>. Here&#8217;s my test class from <code>account-service</code>. Using <code>Processor</code> bean I send test order to input channel. Then <code>MessageCollector</code> receives message that is sent back to <code>order-service</code> via output channel. Test method <code>testAccepted</code> creates order that should be accepted by account-service, while <code>testRejected</code> method sets too high order price that results in rejecting the order.</p>
<pre class="brush: java; title: ; notranslate" title="">
@RunWith(SpringRunner.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
public class OrderReceiverTest {

	private static final Logger LOGGER = LoggerFactory.getLogger(OrderReceiverTest.class);

	@Autowired
	private Processor processor;
	@Autowired
	private MessageCollector messageCollector;

	@Test
	@SuppressWarnings("unchecked")
	public void testAccepted() {
		Order o = new Order();
		o.setId(1L);
		o.setAccountId(1L);
		o.setCustomerId(1L);
		o.setPrice(500);
		o.setProductIds(Collections.singletonList(2L));
		processor.input().send(MessageBuilder.withPayload(o).build());
		Message received = (Message) messageCollector.forChannel(processor.output()).poll();
		LOGGER.info("Order response received: {}", received.getPayload());
		assertNotNull(received.getPayload());
		assertEquals(OrderStatus.ACCEPTED, received.getPayload().getStatus());
	}

	@Test
	@SuppressWarnings("unchecked")
	public void testRejected() {
		Order o = new Order();
		o.setId(1L);
		o.setAccountId(1L);
		o.setCustomerId(1L);
		o.setPrice(100000);
		o.setProductIds(Collections.singletonList(2L));
		processor.input().send(MessageBuilder.withPayload(o).build());
		Message received = (Message) messageCollector.forChannel(processor.output()).poll();
		LOGGER.info("Order response received: {}", received.getPayload());
		assertNotNull(received.getPayload());
		assertEquals(OrderStatus.REJECTED, received.getPayload().getStatus());
	}

}
</pre>
<h3>Conclusion</h3>
<p>Message-driven microservices are a good choice whenever you don&#8217;t need synchronous response from your API. In this article I have shown sample use case of publish/subscribe model in inter-service communication between your microservices. The source code is as usual available on GitHub (<a href="https://github.com/piomin/sample-message-driven-microservices.git">https://github.com/piomin/sample-message-driven-microservices.git</a>). For more interesting examples with usage of Spring Cloud Stream library, also with Apache Kafka, you can refer to Chapter 11 in my book <strong>Mastering Spring Cloud</strong> (<a href="https://www.packtpub.com/application-development/mastering-spring-cloud">https://www.packtpub.com/application-development/mastering-spring-cloud</a>).</p>
	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/apache-kafka/" rel="tag">Apache Kafka</a>, <a href="https://piotrminkowski.wordpress.com/tag/message-broker/" rel="tag">message broker</a>, <a href="https://piotrminkowski.wordpress.com/tag/messaging/" rel="tag">messaging</a>, <a href="https://piotrminkowski.wordpress.com/tag/microservices/" rel="tag">Microservices</a>, <a href="https://piotrminkowski.wordpress.com/tag/rabbitmq/" rel="tag">RabbitMQ</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring-boot/" rel="tag">Spring Boot</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring-cloud/" rel="tag">Spring Cloud</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2018/06/15/building-and-testing-message-driven-microservices-using-spring-cloud-stream/#comments">7 Comments</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-6318" class="post-6318 post type-post status-publish format-standard has-post-thumbnail hentry category-message-brokers tag-apache-kafka tag-java tag-messaging tag-publish-subscribe tag-vert-x">
			<div class="post-thumbnail">
			<a href="https://piotrminkowski.wordpress.com/2018/01/30/partitioning-with-apache-kafka-and-vert-x/">
				<img width="700" height="299" src="https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png?w=700" class="attachment-lodestar-featured-archive-image size-lodestar-featured-archive-image wp-post-image" alt="" loading="lazy" srcset="https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png 702w" sizes="(max-width: 700px) 100vw, 700px" data-attachment-id="6321" data-permalink="https://piotrminkowski.wordpress.com/2018/01/30/partitioning-with-apache-kafka-and-vert-x/kafka-logo/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png" data-orig-size="702,300" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="kafka-logo" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-logo.png?w=700" />			</a>
		</div>
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2018/01/30/partitioning-with-apache-kafka-and-vert-x/" rel="bookmark">Partitioning with Apache Kafka and&nbsp;Vert.x</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2018/01/30/partitioning-with-apache-kafka-and-vert-x/" rel="bookmark"><time class="entry-date published" datetime="2018-01-30T10:46:29+00:00">January 30, 2018</time><time class="updated" datetime="2018-05-22T15:07:20+00:00">May 22, 2018</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>Apache Kafka is a distributed streaming platform. It also may act as a messaging system in your architecture. Traditional message brokers provides two models of communication: queuing and publish-subscribe (topics). Queues are used for point-to-point messaging, while topics allows you broadcast data to multiple target consumers. Kafka does not provide queuing mechanism directly. However, it introduces the consumer group concept, which generalizes both queuing and publish-subscribe models. The consumer group mechanisms guarantees that a single message would be processed by the only one consumer that belongs to the given group. It is especially useful when you have more than one instance of your service, which listens for messages incoming to the topic. That feature makes your consumers to behave as queuing clients within the same group.</p>
<p>Eclipse Vert.x is a lightweight and fast toolkit for building reactive applications on the JVM. I have already introduced that solution is the some of my previous posts, for example <a href="https://piotrminkowski.wordpress.com/2017/08/24/asynchronous-microservices-with-vert-x">Asynchronous Microservices with Vert.x</a>. Vert.x does not force you to implement a reactive application. You may create a standard service, which processes the HTTP requests asynchronously in accordance with Asynchronous I/O concept.</p>
<h2>The purpose of this article</h2>
<p>The main purpose of this article is to show you the main features of Apache Kafka, that may be useful when creating applications consuming messages. The Java client&#8217;s library choice is not a key point here. However, in my opinion Vert.x that is asynchronous, high performance framework perfectly matches to Apache Kafka. It provides Vert.x Kafka client, which allows you to read and send messages from/to an Kafka cluster. Before we proceed to the sample, let&#8217;s first dive into the core abstraction of Kafka.</p>
<h2>Kafka topic</h2>
<p>I&#8217;m assuming you excellent know what topic is and what is its main role. The every message incoming to the topic goes to every subscriber. What is the main difference between Kafka and standard topic provided by other message brokers? Kafka topic is partitioned. Each partition is an ordered, immutable sequence of records. Every record can be uniquecly identified within the partition by a sequential id number called the <em>offset</em>. The Kafka cluster retains all published records according to the configured retention period.</p>
<p>Consumer may subscribe to the whole topic or only to the selected partition. It can also control the offset from where it starts processing data. For example, it is able to reset offset in order reprocess data from the past or just or skip ahead to the most recent record to consume only messages currently sent to the topic. Here&#8217;s the figure that illustrates a single partition structure with producer and consumers listening for the incoming data.</p>
<p><img loading="lazy" data-attachment-id="6319" data-permalink="https://piotrminkowski.wordpress.com/2018/01/30/partitioning-with-apache-kafka-and-vert-x/kafka-1/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png" data-orig-size="702,363" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Kafka-1" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png?w=700" class="  wp-image-6319 aligncenter" src="https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png?w=607&#038;h=314" alt="Kafka-1" width="607" height="314" srcset="https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png?w=607&amp;h=314 607w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png?w=150&amp;h=78 150w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png?w=300&amp;h=155 300w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-1.png 702w" sizes="(max-width: 607px) 100vw, 607px" /></p>
<h2>Sample architecture</h2>
<p>Let me say some words about the sample system architecture. Its source code is available on GitHub (<a href="https://github.com/piomin/sample-vertx-kafka-messaging.git">https://github.com/piomin/sample-vertx-kafka-messaging.git</a>). In accordance of the principle that one picture speaks more than a thousand words, the diagram illustrating the architecture of our system is visible below. We have one topic created on Kafka platform, that consists of two partitions. There is one client application that exposes REST API allowing to send orders into the system and then forwarding them into the topic. The target partition is calculated basing on the type of order. We may create orders with types <em>SINGLE</em> and <em>MULTIPLE</em>. There are also some applications that consumes data from topic. First of them <em>single-order-processor</em> reads data from partition 0, the second <em>multiple-order-processor</em> from partition 1, and the last <em>all-order-processor</em> does not choose any partition.</p>
<p><img loading="lazy" data-attachment-id="6320" data-permalink="https://piotrminkowski.wordpress.com/2018/01/30/partitioning-with-apache-kafka-and-vert-x/kafka-2/" data-orig-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png" data-orig-size="959,414" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="kafka-2" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png?w=700" class="  wp-image-6320 aligncenter" src="https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png?w=645&#038;h=279" alt="kafka-2" width="645" height="279" srcset="https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png?w=645&amp;h=279 645w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png?w=150&amp;h=65 150w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png?w=300&amp;h=130 300w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png?w=768&amp;h=332 768w, https://piotrminkowski.files.wordpress.com/2018/01/kafka-2.png 959w" sizes="(max-width: 645px) 100vw, 645px" /></p>
<h2>Running Kafka</h2>
<p>To run Apache Kafka on the local machine we may use its Docker image. The image shared by Spotify also starts ZooKeeper server, which is used by Kafka. If you run Docker on Windows the default address of its virtual machine is <em>192.168.99.100</em>.</p>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d --name kafka -p 2181:2181 -p 9092:9092 --env ADVERTISED_HOST=192.168.99.100 --env ADVERTISED_PORT=9092 spotify/kafka
</pre>
<p>However, that option assumes the topics would be automatically created during application startup. I&#8217;ve got some problems with it while creating multi-partitions topic. There is also another image <em>ches/kafka</em>, which requires starting ZooKeeper separately, but provides Kafka client interface.</p>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d --name zookeeper -p 2181:2181 zookeeper
docker run -d --name kafka -p 9092:9092 -p 7203:7203 --network kafka-net --env KAFKA_ADVERTISED_HOST_NAME=192.168.99.100 --env ZOOKEEPER_IP=192.168.99.100 ches/kafka
</pre>
<p>Finally, we can run <em>ches/kafka</em> container in client mode and then create topic <em>orders-out</em> with two partitions.</p>
<pre class="brush: bash; title: ; notranslate" title="">
docker run --rm --network kafka-net ches/kafka kafka-topics.sh --create --topic orders-out --replication-factor 1 --partitions 2 --zookeeper 192.168.99.100:2181
Created topic "orders-out".
</pre>
<h2>Building producer application</h2>
<p>First, we need to include Maven dependencies to enable Vert.x framework for the application. If the application exposes RESTful HTTP API you should include <code>vertx-web</code>. Library <code>vertx-kafka-client</code> has to be included to all the sample modules.</p>
<p>To start Vert.x as Java application we have to create verticle by extending <code>AbstractVerticle</code>. Then the verticle needs to be deployed in the main method using <code>Vertx</code> object. For more details about Vert.x and verticles concept you may refer to one of my previous article mentioned in the preface.</p>
<pre class="brush: java; title: ; notranslate" title="">
public class OrderVerticle extends AbstractVerticle {

	public static void main(String[] args) {
		Vertx vertx = Vertx.vertx();
		vertx.deployVerticle(new OrderVerticle());
	}

}
</pre>
<p>The next step is to define producer using <code>KafkaProducer</code> interface. We have to provide connection settings and serializer implementation class. You can choose between various built-in serializer implemementations. The most suitable for me was <code>JsonObjectSerializer</code>, which requires <code>JsonObject</code> as an input parameter.</p>
<pre class="brush: java; title: ; notranslate" title="">
Properties config = new Properties();
config.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "192.168.99.100:9092");
config.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);
config.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, JsonObjectSerializer.class);
config.put(ProducerConfig.ACKS_CONFIG, "1");
KafkaProducer producer = KafkaProducer.create(vertx, config);
</pre>
<p>The procuder is invoked inside POST method route definition. It returnes an asynchronous response with a status after sending message to the topic. The message is created using <code>KafkaProducerRecord</code> interface. It takes topic&#8217;s name, request object and partition number as the parameters. As you may see in the fragment of code below, partition number is calculated on the basis order type (<code>o.getType().ordinal()</code>).</p>
<pre class="brush: java; title: ; notranslate" title="">
Router router = Router.router(vertx);
router.route("/order/*").handler(ResponseContentTypeHandler.create());
router.route(HttpMethod.POST, "/order").handler(BodyHandler.create());
router.post("/order").produces("application/json").handler(rc -&gt; {
	Order o = Json.decodeValue(rc.getBodyAsString(), Order.class);
	KafkaProducerRecord record = KafkaProducerRecord.create("orders", null, rc.getBodyAsJson(), o.getType().ordinal());
	producer.write(record, done -&gt; {
		if (done.succeeded()) {
			RecordMetadata recordMetadata = done.result();
			LOGGER.info("Record sent: msg={}, destination={}, partition={}, offset={}", record.value(), recordMetadata.getTopic(), recordMetadata.getPartition(), recordMetadata.getOffset());
			o.setId(recordMetadata.getOffset());
			o.setStatus(OrderStatus.PROCESSING);
		} else {
			Throwable t = done.cause();
			LOGGER.error("Error sent to topic: {}", t.getMessage());
			o.setStatus(OrderStatus.REJECTED);
		}
		rc.response().end(Json.encodePrettily(o));
	});
});
vertx.createHttpServer().requestHandler(router::accept).listen(8090);
</pre>
<h2>Building consumer applications</h2>
<p>The consumer configuration is very similar to that for producer. We also have to set connection settings and class using for deserialization. There is one interesting setting, which has been defined for the consumer in the fragment of code visible below. It is auto.offset.reset (<code>ConsumerConfig.AUTO_OFFSET_RESET_CONFIG</code>). It sets the initial offset in Kafka for the customer during initialization. If you would like to read all records from the beginning of stream use value <code>earliest</code>. If you would like to processes only the newest records (received after application startup) set that property to <code>latest</code>. Because in our case Kafka acts as a message broker, it is set to <code>latest</code>.</p>
<pre class="brush: java; title: ; notranslate" title="">
Properties config = new Properties();
config.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "192.168.99.100:9092");
config.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);
config.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);
config.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "latest");
config.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, "false");
KafkaConsumer consumer = KafkaConsumer.create(vertx, config);
</pre>
<p>As you probably remember we have three different application that subscribe to the topic. The first of them, implemented under the module <code>all-order-processor</code> consumes all the events incoming to the the topic. This implemementation is relatively the simplest. We only need to invoke <code>subscribe</code> method and pass the name of topic as a parameter. Then every incoming message is processed by <code>handler</code> method.</p>
<pre class="brush: java; title: ; notranslate" title="">
consumer.subscribe("orders-out", ar -&gt; {
	if (ar.succeeded()) {
		LOGGER.info("Subscribed");
	} else {
		LOGGER.error("Could not subscribe: err={}", ar.cause().getMessage());
	}
});

consumer.handler(record -&gt; {
	LOGGER.info("Processing: key={}, value={}, partition={}, offset={}", record.key(), record.value(), record.partition(), record.offset());
	Order order = Json.decodeValue(record.value(), Order.class);
	order.setStatus(OrderStatus.DONE);
	LOGGER.info("Order processed: id={}, price={}", order.getId(), order.getPrice());
});
</pre>
<p>The implementation of consuming method for the other applications is a little more complicated. Besides defining target topic, every consumer can ask for a specific partition. The application <code>multiple-order-processor</code> subscribes to partition 1, while <code>multiple-order-processor</code> to partition 0.</p>
<pre class="brush: java; title: ; notranslate" title="">
TopicPartition tp = new TopicPartition().setPartition(1).setTopic("orders-out");
consumer.assign(tp, ar -&gt; {
	if (ar.succeeded()) {
		LOGGER.info("Subscribed");
		consumer.assignment(done1 -&gt; {
			if (done1.succeeded()) {
				for (TopicPartition topicPartition : done1.result()) {
					LOGGER.info("Partition: topic={}, number={}", topicPartition.getTopic(), topicPartition.getPartition());
				}
			} else {
				LOGGER.error("Could not assign partition: err={}", done1.cause().getMessage());
			}
		});
	} else {
		LOGGER.error("Could not subscribe: err={}", ar.cause().getMessage());
	}
});
</pre>
<p>The implamentation of handle method inside <code>multiple-order-processor</code> is pretty interesting. If it receives order with non-empty field relatedOrderId it tries to find it in the historical records stored in topic. It may achieved by calling <code>seek</code> method on <code>KafkaConsumer</code>.</p>
<pre class="brush: java; title: ; notranslate" title="">
consumer.handler(record -&gt; {
	LOGGER.info("Processing: key={}, value={}, partition={}, offset={}", record.key(), record.value(), record.partition(), record.offset());
	Order order = Json.decodeValue(record.value(), Order.class);
	if (ordersWaiting.containsKey(record.offset())) {
		LOGGER.info("Related order found: id={}, price={}", order.getId(), order.getPrice());
		LOGGER.info("Current price: price={}", order.getPrice() + ordersWaiting.get(record.offset()).getPrice());
		consumer.seekToEnd(tp);
	}

	if (order.getRelatedOrderId() != null &amp;&amp; !ordersWaiting.containsKey(order.getRelatedOrderId())) {
		ordersWaiting.put(order.getRelatedOrderId(), order);
		consumer.seek(tp, order.getRelatedOrderId());
	}
});
</pre>
<h2>Testing</h2>
<p>Now it is time to launch our applications. You may run the main classes from your IDE or build the whole project using <code>mvn clean install</code> command and then run it with <code>java -jar</code>. Also run two instances of <code>all-order-processor</code> in order to check out how a consumer groups mechanism works in practice.</p>
<p>Let&#8217;s send some test requests to the <code>order-service</code> in the following sequence.</p>
<pre class="brush: plain; title: ; notranslate" title="">
curl -H "Content-Type: application/json" -X POST -d '{"type":"SINGLE","status":"NEW","price":200}' http://localhost:8090/order
{"id":0,"type":"SINGLE","status":"PROCESSING","price":200}
curl -H "Content-Type: application/json" -X POST -d '{"type":"SINGLE","status":"NEW","price":300}' http://localhost:8090/order
{"id":1,"type":"SINGLE","status":"PROCESSING","price":300}
curl -H "Content-Type: application/json" -X POST -d '{"type":"MULTIPLE","status":"NEW","price":400}' http://localhost:8090/order
{"id":0,"type":"MULTIPLE","status":"PROCESSING","price":400}
curl -H "Content-Type: application/json" -X POST -d '{"type":"MULTIPLE","status":"NEW","price":500,"relatedOrderId" :0}' http://localhost:8090/order
{"id":1,"type":"MULTIPLE","status":"PROCESSING","price":500}
</pre>
<p>Here&#8217;s log from producer application.</p>
<pre class="brush: plain; title: ; notranslate" title="">
2018-01-30 11:08:48 [INFO ]  Record sent: msg={"type":"SINGLE","status":"NEW","price":200}, destination=orders-out, partition=0, offset=0
2018-01-30 11:08:57 [INFO ]  Record sent: msg={"type":"SINGLE","status":"NEW","price":300}, destination=orders-out, partition=0, offset=1
2018-01-30 11:09:08 [INFO ]  Record sent: msg={"type":"MULTIPLE","status":"NEW","price":400}, destination=orders-out, partition=1, offset=0
2018-01-30 11:09:27 [INFO ]  Record sent: msg={"type":"MULTIPLE","status":"NEW","price":500,"relatedOrderId":0}, destination=orders-out, partition=1, offset=1
</pre>
<p>Here&#8217;s log from <em>single-order-processor</em>. It has processed only messages from partition 0.</p>
<pre class="brush: plain; title: ; notranslate" title="">
2018-01-30 11:08:48 [INFO ]  Processing: key=null, value={"type":"SINGLE","status":"NEW","price":200}, partition=0, offset=0
2018-01-30 11:08:57 [INFO ]  Processing: key=null, value={"type":"SINGLE","status":"NEW","price":300}, partition=0, offset=1
</pre>
<p>Here&#8217;s log from <em>multiple-order-processor</em>. It has processed only messages from partition 1.</p>
<pre class="brush: plain; title: ; notranslate" title="">
2018-01-30 11:09:08 [INFO ]  Processing: key=null, value={"type":"MULTIPLE","status":"NEW","price":400}, partition=1, offset=0
2018-01-30 11:09:27 [INFO ]  Processing: key=null, value={"type":"MULTIPLE","status":"NEW","price":500,"relatedOrderId":0}, partition=1, offset=1
</pre>
<p>Here&#8217;s log from first instance of <em>all-order-processor</em>.</p>
<pre class="brush: plain; title: ; notranslate" title="">
2018-01-30 11:08:48 [INFO ]  Processing: key=null, value={"type":"SINGLE","status":"NEW","price":200}, partition=0, offset=0
2018-01-30 11:08:57 [INFO ]  Processing: key=null, value={"type":"SINGLE","status":"NEW","price":300}, partition=0, offset=1
</pre>
<p>Here&#8217;s log from second instance of <em>all-order-processor</em>. It may be a little bit surprising for you. But, if you run two instances of consumer, which listens for the whole topic each instance would process message from the single partition.</p>
<pre class="brush: plain; title: ; notranslate" title="">
2018-01-30 11:09:08 [INFO ]  Processing: key=null, value={"type":"MULTIPLE","status":"NEW","price":400}, partition=1, offset=0
2018-01-30 11:09:27 [INFO ]  Processing: key=null, value={"type":"MULTIPLE","status":"NEW","price":500,"relatedOrderId":0}, partition=1, offset=1
</pre>
<h2>Summary</h2>
<p>In this article I was trying to give you a little bit of messaging with Apache Kafka. Such concepts like consumer groups or partitioning are something what makes it different from traditional messaging solutions. Kafka is widely adopted product, which can acts as storage, messaging system or stream processor. Together with popular JVM based toolkit Vert.x it may be really powerful, fast and lightweight solution for your applications that exchanges messages between each other. The key concepts introduced by Kafka has been adopted by Spring Cloud Stream, which makes them as an opinionated choice for creating messaging microservices.</p>
	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/apache-kafka/" rel="tag">Apache Kafka</a>, <a href="https://piotrminkowski.wordpress.com/tag/java/" rel="tag">Java</a>, <a href="https://piotrminkowski.wordpress.com/tag/messaging/" rel="tag">messaging</a>, <a href="https://piotrminkowski.wordpress.com/tag/publish-subscribe/" rel="tag">publish-subscribe</a>, <a href="https://piotrminkowski.wordpress.com/tag/vert-x/" rel="tag">Vert.x</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2018/01/30/partitioning-with-apache-kafka-and-vert-x/#comments">1 Comment</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-1190" class="post-1190 post type-post status-publish format-standard hentry category-message-brokers tag-amqp tag-clustering tag-high-availibility tag-rabbitmq tag-spring-amqp">
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/" rel="bookmark">RabbitMQ in cluster</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/" rel="bookmark"><time class="entry-date published" datetime="2017-02-28T23:23:53+00:00">February 28, 2017</time><time class="updated" datetime="2018-05-22T15:10:13+00:00">May 22, 2018</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>RabbitMQ grown into the most popular message broker software. It is written in Erlang and implements Advanced Message Queueing Protocol (AMQP). It is easy to use and configure even if we are talking about such mechanisms as clustering or high availibility. In this post I&#8217;m going to show you how to run some instances of RabbitMQ provided in docker containers in the cluster with highly available (HA) queues. Based on the sample Java application we&#8217;ll see how to send and receive messages from the RabbitMQ cluster and check how this message broker handles a large number of incoming messages. Sample Spring Boot application is available on <a href="https://github.com/piomin/sample-haclustered-rabbitmq-service.git">GitHub</a>. Here is picture ilustrating architecture of the presented solution.</p>
<p><img loading="lazy" data-attachment-id="1209" data-permalink="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/rabbitmq-cluster/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png" data-orig-size="858,595" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbitmq-cluster" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png?w=700" class="  wp-image-1209 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png?w=559&#038;h=388" alt="rabbitmq-cluster" width="559" height="388" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png?w=559&amp;h=388 559w, https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png?w=150&amp;h=104 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png?w=300&amp;h=208 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png?w=768&amp;h=533 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbitmq-cluster.png 858w" sizes="(max-width: 559px) 100vw, 559px" /></p>
<p>We use docker official repository of RabbitMQ. Here are commands for running three RabbitMQ nodes. First node is the master of cluster &#8211; two other nodes will join him. We use container <em>management</em> to enable an UI administration console for each node. Every node has default connection and UI management ports exposed. Important thing is to link rabbit2 and rabbit3 constainers to rabbit1, which is necessary while joining to cluster mastering by rabbit1.</p>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d --hostname rabbit1 --name rabbit1 -e RABBITMQ_ERLANG_COOKIE='rabbitcluster' -p 30000:5672 -p 30001:15672 rabbitmq:management
</pre>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d --hostname rabbit2 --name rabbit2 --link rabbit1:rabbit1 -e RABBITMQ_ERLANG_COOKIE='rabbitcluster' -p 30002:5672 -p 30003:15672 rabbitmq:management
</pre>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d --hostname rabbit3 --name rabbit3 --link rabbit1:rabbit1 -e RABBITMQ_ERLANG_COOKIE='rabbitcluster' -p 30004:5672 -p 30005:15672 rabbitmq:management
</pre>
<p>Ok, now there are three RabbitMQ running instances. We can go to the UI management console for all of those instances available as docker containers, for example <em><a href="http://192.168.99.100:30001" rel="nofollow">http://192.168.99.100:30001</a></em> (rabbitmq). Each instance is available on its independent cluster like we see in the pictures below. We would like to make all instances working in same cluster <em>rabbit@rabbit1</em>.</p>
<p><img loading="lazy" data-attachment-id="1249" data-permalink="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/rabbit_cluster/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png" data-orig-size="1920,164" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit_cluster" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=700" class="  wp-image-1249 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=609&#038;h=52" alt="rabbit_cluster" width="609" height="52" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=609&amp;h=52 609w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=1218&amp;h=104 1218w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=150&amp;h=13 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=300&amp;h=26 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=768&amp;h=66 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster.png?w=1024&amp;h=87 1024w" sizes="(max-width: 609px) 100vw, 609px" /></p>
<p><img loading="lazy" data-attachment-id="1252" data-permalink="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/rabbit_cluster2/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png" data-orig-size="1849,164" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit_cluster2" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=700" class="  wp-image-1252 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=613&#038;h=54" alt="rabbit_cluster2" width="613" height="54" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=613&amp;h=54 613w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=1218&amp;h=108 1218w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=150&amp;h=13 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=300&amp;h=27 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=768&amp;h=68 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster2.png?w=1024&amp;h=91 1024w" sizes="(max-width: 613px) 100vw, 613px" /></p>
<p>Here&#8217;s set of commands run on <em>rabbit2</em> instance for joining cluster <em>rabbit@rabbit1</em>. The same set should be run on <em>rabbit3</em> node. In the beginning we have to connect to docker container and run bash command. Before running rabbitmq <em>join_cluster</em> command we have to stop broker.</p>
<pre class="brush: bash; title: ; notranslate" title="">
docker exec -i -t rabbit2 \bash
root@rabbit2:/# rabbitmqctl stop_app
Stopping node rabbit@rabbit2 ...
root@rabbit2:/# rabbitmqctl join_cluster rabbit@rabbit1
Clustering node rabbit@rabbit2 with rabbit@rabbit1 ...
root@rabbit2:/# rabbitmqctl start_app
Starting node rabbit@rabbit2 ...
</pre>
<p>If everything was successful we should see cluster name <em>rabbit@rabbit1</em> in upper right corner of <em>rabbit2</em> management console. You should also see list of running nodes in the <em>Nodes</em> section. You can also check cluster status by running on every node command <i>rabbitmqctl cluster_status, </i>which should also display list of all cluster nodes.</p>
<p><img loading="lazy" data-attachment-id="1292" data-permalink="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/rabbit_cluster3/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png" data-orig-size="1238,200" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit_cluster3" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=700" class="  wp-image-1292 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=607&#038;h=98" alt="rabbit_cluster3" width="607" height="98" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=607&amp;h=98 607w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=1214&amp;h=196 1214w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=150&amp;h=24 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=300&amp;h=48 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=768&amp;h=124 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster3.png?w=1024&amp;h=165 1024w" sizes="(max-width: 607px) 100vw, 607px" /></p>
<p>After starting all nodes go to UI managent console on one of nodes. Now we are going to configure High Availibility for selected queue. It is not important which node you choose, because they are in one cluster. In the <em>Queues</em> tab create queue with name <em>q.example</em>. Then go to <em>Admin</em> tab and select <em>Policies</em> section and create new policy. In the picture below you can see policy I have created. I selected <em>ha-mode=all</em> which means that is mirrored across all nodes in the cluster and when new node is added to the cluster, the queue will be mirrored to that node. There are also available exactly, nodes modes &#8211; more about RabbitMQ High Availibility you can find <a href="https://www.rabbitmq.com/ha.html">here</a>. In pattern field enter your queue name and in apply to select <em>Queues</em>. If everything was succeded you should see <em>ha-all</em> feature in queue row.</p>
<p><img loading="lazy" data-attachment-id="1326" data-permalink="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/rabbit_cluster5/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png" data-orig-size="965,325" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit_cluster5" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png?w=700" class="  wp-image-1326 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png?w=567&#038;h=191" alt="rabbit_cluster5.png" width="567" height="191" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png?w=567&amp;h=191 567w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png?w=150&amp;h=51 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png?w=300&amp;h=101 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png?w=768&amp;h=259 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster5.png 965w" sizes="(max-width: 567px) 100vw, 567px" /></p>
<p>One of the greatest advantage of RabbitMQ is monitoring. You can see many statistics like memory, disk usage, I/O statistics, detailed message rates, graphs etc. Some of them you could see below.</p>
<p><img loading="lazy" data-attachment-id="1318" data-permalink="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/rabbit_cluster6/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png" data-orig-size="1043,885" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit_cluster6" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=700" class="  wp-image-1318 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=565&#038;h=479" alt="rabbit_cluster6" width="565" height="479" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=565&amp;h=479 565w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=150&amp;h=127 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=300&amp;h=255 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=768&amp;h=652 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png?w=1024&amp;h=869 1024w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster6.png 1043w" sizes="(max-width: 565px) 100vw, 565px" /></p>
<p><img loading="lazy" data-attachment-id="1321" data-permalink="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/rabbit_cluster7/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png" data-orig-size="1332,738" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit_cluster7" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=700" class="alignnone  wp-image-1321 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=578&#038;h=320" alt="rabbit_cluster7" width="578" height="320" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=578&amp;h=320 578w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=1156&amp;h=640 1156w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=150&amp;h=83 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=300&amp;h=166 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=768&amp;h=426 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit_cluster7.png?w=1024&amp;h=567 1024w" sizes="(max-width: 578px) 100vw, 578px" /></p>
<p>RabbitMQ has a great support in Spring framework. There many projects in which use RabbitMQ implementation by default, for example Spring Cloud Stream, Spring Cloud Sleuth. I&#8217;m going to show you sample Spring Boot application that sends messages to RabbitMQ cluster and receives them from HA queue. Application source code is available on GitHub. Here&#8217;s main class of application. We enable RabbitMQ listener by declaring @EnableRabbit on class and @RabbitListener on receiving method. We also have to declare listened queue, broker connection factory and listener container factory to allow listener concurrency. Inside CachingConnectionFactory we set all three addresses of RabbitMQ cluster instances: <em>192.168.99.100:30000</em>, <em>192.168.99.100:30002</em>, <em>192.168.99.100:30004</em>.</p>
<pre class="brush: java; title: ; notranslate" title="">
@SpringBootApplication
@EnableRabbit
public class Listener {

	private static Logger logger = Logger.getLogger(&quot;Listener&quot;);

	public static void main(String[] args) {
		SpringApplication.run(Listener.class, args);
	}

	@RabbitListener(queues = &quot;q.example&quot;)
	public void onMessage(Order order) {
		logger.info(order.toString());
	}

	@Bean
	public ConnectionFactory connectionFactory() {
		CachingConnectionFactory connectionFactory = new CachingConnectionFactory();
		connectionFactory.setUsername(&quot;guest&quot;);
		connectionFactory.setPassword(&quot;guest&quot;);
		connectionFactory.setAddresses(&quot;192.168.99.100:30000,192.168.99.100:30002,192.168.99.100:30004&quot;);
		connectionFactory.setChannelCacheSize(10);
		return connectionFactory;
	}

	@Bean
	public SimpleRabbitListenerContainerFactory rabbitListenerContainerFactory() {
		SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();
		factory.setConnectionFactory(connectionFactory());
		factory.setConcurrentConsumers(10);
		factory.setMaxConcurrentConsumers(20);
		return factory;
	}

	@Bean
	public Queue queue() {
		return new Queue(&quot;q.example&quot;);
	}

}
</pre>
<h2>Conclusion</h2>
<p>Clustering and High Availibility configuration with RabbitMQ is pretty simple. I like Rabbit MQ for support in the cluster monitoring process with UI management console. In my opinion it is user friendly and intuitive. In the sample application I send 100k messages into the sample queue. Using 20 concurrent consumers they were processed 65 seconds (~80/s per consumer thread) and memory usage at its peak was about 400MB on each node. Of cource our application is just receiving object message and logging it in console.</p>
	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/amqp/" rel="tag">AMQP</a>, <a href="https://piotrminkowski.wordpress.com/tag/clustering/" rel="tag">Clustering</a>, <a href="https://piotrminkowski.wordpress.com/tag/high-availibility/" rel="tag">High Availibility</a>, <a href="https://piotrminkowski.wordpress.com/tag/rabbitmq/" rel="tag">RabbitMQ</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring-amqp/" rel="tag">Spring AMQP</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2017/02/28/rabbitmq-in-cluster/#comments">4 Comments</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-723" class="post-723 post type-post status-publish format-standard hentry category-message-brokers category-spring-cloud">
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2017/02/13/event-driven-microservices-using-spring-cloud-stream-and-rabbitmq/" rel="bookmark">Event driven microservices using Spring Cloud Stream and&nbsp;RabbitMQ</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2017/02/13/event-driven-microservices-using-spring-cloud-stream-and-rabbitmq/" rel="bookmark"><time class="entry-date published" datetime="2017-02-13T16:34:30+00:00">February 13, 2017</time><time class="updated" datetime="2018-05-22T15:11:51+00:00">May 22, 2018</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p>Before we start let&#8217;s look at site <a href="http://projects.spring.io/spring-cloud/">Spring Cloud Quick Start</a>. There is a list of spring-cloud releases available grouped as release trains. We use the newest release Camden.SR5 with 1.4.4.RELEASE Spring Boot and Brooklyn.SR2 Spring Cloud Stream version.</p>
<pre class="brush: xml; title: ; notranslate" title="">
&lt;parent&gt;
	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
	&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
	&lt;version&gt;1.4.4.RELEASE&lt;/version&gt;
&lt;/parent&gt;
&lt;dependencyManagement&gt;
	&lt;dependencies&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
			&lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;
			&lt;version&gt;Camden.SR5&lt;/version&gt;
			&lt;type&gt;pom&lt;/type&gt;
			&lt;scope&gt;import&lt;/scope&gt;
		&lt;/dependency&gt;
	&lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
</pre>
<p>Here&#8217;s our architecture visualization. Order service sends message to RabbitMQ topic exchange. Product and shipment services listen on that topic for incoming order messages and then process them. After processing they send reply message to the topic on which payment service listens to. Payment service stores incoming messages aggregating reply from product and shipment services, then count prices and sends final response.</p>
<p><img data-attachment-id="756" data-permalink="https://piotrminkowski.wordpress.com/2017/02/13/event-driven-microservices-using-spring-cloud-stream-and-rabbitmq/sample1/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/sample1.png" data-orig-size="738,473" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="sample1" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/sample1.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/sample1.png?w=700" class="alignnone size-full wp-image-756" src="https://piotrminkowski.files.wordpress.com/2017/02/sample1.png?w=700" alt="sample1" srcset="https://piotrminkowski.files.wordpress.com/2017/02/sample1.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2017/02/sample1.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2017/02/sample1.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2017/02/sample1.png 738w" sizes="(max-width: 700px) 100vw, 700px"   /></p>
<p>Each service has the following dependencies. We have sample-common module where object for messages sent to topics are stored. They&#8217;re shared between all services. We&#8217;re also using Spring Cloud Sleuth for distributed tracing with one request id between all microservices.</p>
<pre class="brush: xml; title: ; notranslate" title="">
	&lt;dependencies&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
			&lt;artifactId&gt;spring-cloud-stream&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
			&lt;artifactId&gt;spring-cloud-stream-binder-rabbit&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
			&lt;artifactId&gt;spring-cloud-starter-sleuth&lt;/artifactId&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;pl.piomin.services&lt;/groupId&gt;
			&lt;artifactId&gt;sample-common&lt;/artifactId&gt;
			&lt;version&gt;${project.version}&lt;/version&gt;
		&lt;/dependency&gt;
	&lt;/dependencies&gt;
</pre>
<p>Let me start with a few words on the theoretical aspects of Spring Cloud stream. Here&#8217;s short reference of that framework <a href="http://docs.spring.io/spring-cloud-stream/docs/current/reference/htmlsingle/">Spring Cloud Stream Reference Guide</a>. It&#8217;s based on Spring Integration. It provides three predefined interfaces out of the box:</p>
<ul>
<li>Source  &#8211; can be used for an application which has a single outbound channel</li>
<li>Sink &#8211; can be used for an application which has a single inbound channel</li>
<li>Processor &#8211; can be used for an application which has both an inbound channel and an outbound channel</li>
</ul>
<p>I&#8217;m going to show you sample usage of all of these interfaces. In order service we&#8217;re using Source class. Using @InboundChannelAdapter and @Poller annotations we&#8217;are sending order message to output once per 10 seconds.</p>
<pre class="brush: java; title: ; notranslate" title="">
@SpringBootApplication
@EnableBinding(Source.class)
public class Application {

	protected Logger logger = Logger.getLogger(Application.class.getName());

	private int index = 0;

	public static void main(String[] args) {
		SpringApplication.run(Application.class, args);
	}

	@Bean
	@InboundChannelAdapter(value = Source.OUTPUT, poller = @Poller(fixedDelay = &quot;10000&quot;, maxMessagesPerPoll = &quot;1&quot;))
	public MessageSource&lt;Order&gt; orderSource() {
		return () -&gt; {
			Order o = new Order(index++, OrderType.PURCHASE, LocalDateTime.now(), OrderStatus.NEW, new Product(), new Shipment());
			logger.info(&quot;Sending order: &quot; + o);
			return new GenericMessage&lt;&gt;(o);
		};
	}

	@Bean
	public AlwaysSampler defaultSampler() {
	  return new AlwaysSampler();
	}

}
</pre>
<p>Here&#8217;s output configuration in application.yml file.</p>
<pre class="brush: plain; title: ; notranslate" title="">
spring:
  cloud:
    stream:
      bindings:
        input:
          destination: ex.stream.in
          binder: rabbit1
        output:
          destination: ex.stream.out
          binder: rabbit1
      binders:
        rabbit1:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: 192.168.99.100
                port: 30000
                username: guest
                password: guest
</pre>
<p>Product and shipment services use Processor interface. They listen on stream input and after processing send message to their outputs.</p>
<pre class="brush: java; title: ; notranslate" title="">
@SpringBootApplication
@EnableBinding(Processor.class)
public class Application {

	@Autowired
	private ProductService productService;

	protected Logger logger = Logger.getLogger(Application.class.getName());

	public static void main(String[] args) {
		SpringApplication.run(Application.class, args);
	}

	@StreamListener(Processor.INPUT)
	@SendTo(Processor.OUTPUT)
	public Order processOrder(Order order) {
		logger.info(&quot;Processing order: &quot; + order);
		return productService.processOrder(order);
	}

	@Bean
	public AlwaysSampler defaultSampler() {
		return new AlwaysSampler();
	}

}
</pre>
<p>Here&#8217;s service configuration. It listens on order service output exchange and also defines its group named product. That group name will be used for automatic queue creation and exchange binding on RabbitMQ. There is also output exchange defined.</p>
<pre class="brush: xml; title: ; notranslate" title="">
spring:
  cloud:
    stream:
      bindings:
        input:
          destination: ex.stream.out
          group: product
          binder: rabbit1
        output:
          destination: ex.stream.out2
          binder: rabbit1
      binders:
        rabbit1:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: 192.168.99.100
                port: 30000
                username: guest
                password: guest
</pre>
<p>We use docker container for running RabbitMQ instance.</p>
<pre>docker run -d --name rabbit1 -p 30001:15672 -p 30000:5672 rabbitmq:management</pre>
<p>Let&#8217;s look at the management console. It&#8217;s available on <a href="http://192.168.99.100:30001" rel="nofollow">http://192.168.99.100:30001</a>. Here&#8217;s ex.stream.out topic exchange configuration. Below we see the list of declared queues.</p>
<p><img data-attachment-id="818" data-permalink="https://piotrminkowski.wordpress.com/2017/02/13/event-driven-microservices-using-spring-cloud-stream-and-rabbitmq/rabbit1/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit11.png" data-orig-size="675,452" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit1" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit11.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit11.png?w=675" class="alignnone size-full wp-image-818" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit11.png?w=700" alt="rabbit1" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit11.png 675w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit11.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit11.png?w=300 300w" sizes="(max-width: 675px) 100vw, 675px"   /></p>
<p><img data-attachment-id="824" data-permalink="https://piotrminkowski.wordpress.com/2017/02/13/event-driven-microservices-using-spring-cloud-stream-and-rabbitmq/rabbit2/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit21.png" data-orig-size="575,107" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit2" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit21.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit21.png?w=575" class=" size-full wp-image-824 aligncenter" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit21.png?w=700" alt="rabbit2" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit21.png 575w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit21.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit21.png?w=300 300w" sizes="(max-width: 575px) 100vw, 575px"   /></p>
<p>Here&#8217;s main application class from payment service. We use Sink interface for listening on incoming messages. Input order is processed and we print final price of order sent by order service. Sample application source code is available on <a href="https://github.com/piomin/sample-spring-cloud-stream.git">GitHub</a>.</p>
<pre class="brush: java; title: ; notranslate" title="">
@SpringBootApplication
@EnableBinding(Sink.class)
public class Application {

	@Autowired
	private PaymentService paymentService;

	protected Logger logger = Logger.getLogger(Application.class.getName());

	public static void main(String[] args) {
		SpringApplication.run(Application.class, args);
	}

	@StreamListener(Sink.INPUT)
	public void processOrder(Order order) {
		logger.info(&quot;Processing order: &quot; + order);
		Order o = paymentService.processOrder(order);
		if (o != null)
			logger.info(&quot;Final response: &quot; + (o.getProduct().getPrice() + o.getShipment().getPrice()));
	}

	@Bean
	public AlwaysSampler defaultSampler() {
		return new AlwaysSampler();
	}

}
</pre>
<p>By using @Bean AlwaysSampler in every main class of our microservices we propagate one trace and span id between all calls of single order. Here&#8217;s fragment from our microservices logging console. And also I get the following warning message which is not understable for me: <em>&#8216;Deprecated trace headers detected. Please upgrade Sleuth to 1.1 or start sending headers present in the TraceMessageHeaders class&#8217;</em>. Version 1.1.2.RELEASE of Spring Cloud Sleuth is not applicable Camden.SR5 release?</p>
<p><img data-attachment-id="842" data-permalink="https://piotrminkowski.wordpress.com/2017/02/13/event-driven-microservices-using-spring-cloud-stream-and-rabbitmq/logs/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/logs.png" data-orig-size="764,319" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="logs" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/logs.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/logs.png?w=700" class="alignnone size-full wp-image-842" src="https://piotrminkowski.files.wordpress.com/2017/02/logs.png?w=700" alt="logs" srcset="https://piotrminkowski.files.wordpress.com/2017/02/logs.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2017/02/logs.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2017/02/logs.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2017/02/logs.png 764w" sizes="(max-width: 700px) 100vw, 700px"   /></p>
	</div>
	<footer class="entry-footer">
		<span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2017/02/13/event-driven-microservices-using-spring-cloud-stream-and-rabbitmq/#comments">8 Comments</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

<article id="post-18" class="post-18 post type-post status-publish format-standard hentry category-message-brokers category-spring-boot tag-docker tag-elk tag-java tag-kibana tag-microservices tag-rabbitmq tag-spring tag-spring-boot">
	
	<header class="entry-header">
		<h2 class="entry-title"><a href="https://piotrminkowski.wordpress.com/2017/02/03/how-to-ship-logs-with-logstash-elasticsearch-and-rabbitmq/" rel="bookmark">How to ship logs with Logstash, Elasticsearch and&nbsp;RabbitMQ</a></h2>				<div class="entry-meta">
					<span class="posted-on">Posted on <a href="https://piotrminkowski.wordpress.com/2017/02/03/how-to-ship-logs-with-logstash-elasticsearch-and-rabbitmq/" rel="bookmark"><time class="entry-date published" datetime="2017-02-03T09:01:18+00:00">February 3, 2017</time><time class="updated" datetime="2018-05-22T15:11:06+00:00">May 22, 2018</time></a></span><span class="byline"> <span class="byline-prefix">by</span> <span class="author vcard"><a class="url fn n" href="https://piotrminkowski.wordpress.com/author/piotrminkowski/">Piotr Mińkowski</a></span></span>				</div><!-- .entry-meta -->

				</header>
	<div class="entry-content">
		<p style="text-align:justify;">Here&#8217;s simple picture of our solution. We&#8217;ll start from sample Spring Boot application shipping logs to RabbitMQ exchange. Then using Docker, we&#8217;ll configure environment containing RabbitMQ, Logstash, Elasticsearch and Kibana &#8211; each running on separated Docker container.</p>
<p style="text-align:justify;"><img data-attachment-id="144" data-permalink="https://piotrminkowski.wordpress.com/2017/02/03/how-to-ship-logs-with-logstash-elasticsearch-and-rabbitmq/sscg9hyasgmdht1k46653/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png" data-orig-size="706,396" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="sscg9hyasgmdht1k46653" data-image-description="" data-image-caption="" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png?w=700" class="alignnone size-full wp-image-144" src="https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png?w=700" alt="sscg9hyasgmdht1k46653" srcset="https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2017/02/sscg9hyasgmdht1k46653.png 706w" sizes="(max-width: 700px) 100vw, 700px"   /></p>
<p>My sample Java application is available on <a href="https://github.com/piomin/sample-amqp-logging.git">https://github.com/piomin/sample-amqp-logging.git</a>.</p>
<p style="text-align:justify;">There are only two Spring Boot dependencies needed inside pom.xml. First for REST controller and second for AMQP dependencies.</p>
<pre class="brush: xml; title: ; notranslate" title="">
&lt;dependencies&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
		&lt;artifactId&gt;spring-boot-starter-data-rest&lt;/artifactId&gt;
	&lt;/dependency&gt;
	&lt;dependency&gt;
		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
		&lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;
	&lt;/dependency&gt;
&lt;/dependencies&gt;
</pre>
<p>Here&#8217;s simple controller with one logging message.</p>
<pre class="brush: java; title: ; notranslate" title="">
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class Controller {

 protected Logger logger = LoggerFactory.getLogger(Controller.class.getName());

 @RequestMapping(&quot;/hello/{param}&quot;)
 public String hello(@PathVariable(&quot;param&quot;) String param) {
  logger.info(&quot;Controller.hello(&quot; + param + &quot;)&quot;);
  return &quot;Hello&quot;;
 }

}
</pre>
<p style="text-align:justify;">I use logback as logger implementation and Spring AMQP appender for sending logs to RabbitMQ over AMQP protocol.</p>
<pre class="brush: xml; title: ; notranslate" title="">
&lt;appender name=&quot;AMQP&quot; class=&quot;org.springframework.amqp.rabbit.logback.AmqpAppender&quot;&gt;
	&lt;layout&gt;
		&lt;pattern&gt;
			{
			&quot;time&quot;: &quot;%date{ISO8601}&quot;,
			&quot;thread&quot;: &quot;%thread&quot;,
			&quot;level&quot;: &quot;%level&quot;,
			&quot;class&quot;: &quot;%logger{36}&quot;,
			&quot;message&quot;: &quot;%message&quot;
			}
		&lt;/pattern&gt;
	&lt;/layout&gt;

	&lt;!-- RabbitMQ connection --&gt;
	&lt;host&gt;192.168.99.100&lt;/host&gt;
	&lt;port&gt;30000&lt;/port&gt;
	&lt;username&gt;guest&lt;/username&gt;
	&lt;password&gt;guest&lt;/password&gt;

	&lt;applicationId&gt;api-service-4&lt;/applicationId&gt;
	&lt;routingKeyPattern&gt;api-service-4&lt;/routingKeyPattern&gt;
	&lt;declareExchange&gt;true&lt;/declareExchange&gt;
	&lt;exchangeType&gt;direct&lt;/exchangeType&gt;
	&lt;exchangeName&gt;ex_logstash&lt;/exchangeName&gt;

	&lt;generateId&gt;true&lt;/generateId&gt;
	&lt;charset&gt;UTF-8&lt;/charset&gt;
	&lt;durable&gt;true&lt;/durable&gt;
	&lt;deliveryMode&gt;PERSISTENT&lt;/deliveryMode&gt;
&lt;/appender&gt;
</pre>
<p style="text-align:justify;">I run RabbitMQ server using docker image <a href="https://hub.docker.com/_/rabbitmq/">https://hub.docker.com/_/rabbitmq/</a>. Here&#8217;s docker command for it. I choosed rabbitmq:management docker image to enable expose of RabbitMQ UI management console on port 30001. After running this command we can go to management console available on 192.168.99.100:30001. There we have to create queue named q_logstash and direct exchange named ex_logstach having routing set to q_logstash queue.</p>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d -it --name rabbit --hostname rabbit -p 30000:5672 -p 30001:15672
 rabbitmq:management
</pre>
<p> </p>
<figure data-shortcode="caption" id="attachment_151" aria-describedby="caption-attachment-151" style="width: 1889px" class="wp-caption aligncenter"><img data-attachment-id="151" data-permalink="https://piotrminkowski.wordpress.com/2017/02/03/how-to-ship-logs-with-logstash-elasticsearch-and-rabbitmq/rabbit/" data-orig-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png" data-orig-size="1889,850" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="rabbit" data-image-description="" data-image-caption="&lt;p&gt;RabbitMQ management console with exchange and queue binding&lt;/p&gt;
" data-medium-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=300" data-large-file="https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=700" class="alignnone size-full wp-image-151" src="https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=700" alt="rabbit" srcset="https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=700 700w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=1400 1400w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=150 150w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=300 300w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=768 768w, https://piotrminkowski.files.wordpress.com/2017/02/rabbit2.png?w=1024 1024w" sizes="(max-width: 700px) 100vw, 700px"   /><figcaption id="caption-attachment-151" class="wp-caption-text">RabbitMQ management console with exchange and queue binding</figcaption></figure>
<p style="text-align:justify;">Then we run Elasticsearch and Kibana docker images. Kibana container need to be linked to elasticsearch.</p>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d -it --name es -p 9200:9200 -p 9300:9300 elasticsearch
</pre>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d -it --name kibana --link es:elasticsearch -p 5601:5601 kibana
</pre>
<p style="text-align:justify;">Finally we can run Logstash docker image which get RabbitMQ queue as input and set Elasticsearch api as output. We have to change host to docker machine default address and port configured when running RabbitMQ container. Also we have durable queue so it has to be changed because default value for that is false following this reference:<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-rabbitmq.html">https://www.elastic.co/guide/en/logstash/current/plugins-inputs-rabbitmq.html</a></p>
<pre class="brush: bash; title: ; notranslate" title="">
docker run -d -it --name logstash logstash -e 'input { rabbitmq {
host =&gt; &quot;192.168.99.100&quot; port =&gt; 30000 durable =&gt; true } }
output { elasticsearch { hosts =&gt; [&quot;192.168.99.100&quot;] } }'
</pre>
<p style="text-align:justify;">After running all docker containers for RabbitMQ, Logstash, Elasticsearch and Kibana we can run our sample Spring Boot application and see logs on Kibana available on <a href="http://192.168.99.100:5601" rel="nofollow">http://192.168.99.100:5601</a>.</p>
	</div>
	<footer class="entry-footer">
		<span class="tags-links">Tagged <a href="https://piotrminkowski.wordpress.com/tag/docker/" rel="tag">Docker</a>, <a href="https://piotrminkowski.wordpress.com/tag/elk/" rel="tag">ELK</a>, <a href="https://piotrminkowski.wordpress.com/tag/java/" rel="tag">Java</a>, <a href="https://piotrminkowski.wordpress.com/tag/kibana/" rel="tag">Kibana</a>, <a href="https://piotrminkowski.wordpress.com/tag/microservices/" rel="tag">Microservices</a>, <a href="https://piotrminkowski.wordpress.com/tag/rabbitmq/" rel="tag">RabbitMQ</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring/" rel="tag">Spring</a>, <a href="https://piotrminkowski.wordpress.com/tag/spring-boot/" rel="tag">Spring Boot</a></span><span class="comments-link"><a href="https://piotrminkowski.wordpress.com/2017/02/03/how-to-ship-logs-with-logstash-elasticsearch-and-rabbitmq/#respond">Leave a comment</a></span>	</footer><!-- .entry-footer -->

	</article><!-- #post-## -->

		</main>
	</div><!-- #primary -->
	
<aside id="secondary" class="widget-area" role="complementary">
	<section id="jetpack_widget_social_icons-2" class="widget jetpack_widget_social_icons"><h2 class="widget-title">Follow Me</h2>
			<ul class="jetpack-social-widget-list size-medium">

				
											<li class="jetpack-social-widget-item">
							<a href="https://twitter.com/piotr_minkowski" target="_self">
								<span class="screen-reader-text">Twitter</span><svg class="icon icon-twitter" aria-hidden="true" role="presentation"> <use href="#icon-twitter" xlink:href="#icon-twitter"></use> </svg>							</a>
						</li>
					
				
											<li class="jetpack-social-widget-item">
							<a href="https://github.com/piomin" target="_self">
								<span class="screen-reader-text">GitHub</span><svg class="icon icon-github" aria-hidden="true" role="presentation"> <use href="#icon-github" xlink:href="#icon-github"></use> </svg>							</a>
						</li>
					
				
											<li class="jetpack-social-widget-item">
							<a href="https://www.linkedin.com/in/piotrminkowski/" target="_self">
								<span class="screen-reader-text">LinkedIn</span><svg class="icon icon-linkedin" aria-hidden="true" role="presentation"> <use href="#icon-linkedin" xlink:href="#icon-linkedin"></use> </svg>							</a>
						</li>
					
				
											<li class="jetpack-social-widget-item">
							<a href="https://www.youtube.com/channel/UCAieNgran7umupT_D50KaGw/" target="_self">
								<span class="screen-reader-text">YouTube</span><svg class="icon icon-youtube" aria-hidden="true" role="presentation"> <use href="#icon-youtube" xlink:href="#icon-youtube"></use> </svg>							</a>
						</li>
					
				
			</ul>

			</section><section id="blog_subscription-2" class="widget widget_blog_subscription jetpack_subscription_widget"><h2 class="widget-title"><label for="subscribe-field">Follow Blog via Email</label></h2>

			<form
				action="https://subscribe.wordpress.com"
				method="post"
				accept-charset="utf-8"
				id="subscribe-blog"
			>
				<p>Enter your email address to follow this blog and receive notifications of new posts by email.</p>
				<p id="subscribe-email">
					<label
						id="subscribe-field-label"
						for="subscribe-field"
						class="screen-reader-text"
					>
						Email Address:					</label>

					<input
							type="email"
							name="email"
							
							style="width: 95%; padding: 1px 10px"
							placeholder="Enter your email address"
							value=""
							id="subscribe-field"
						/>				</p>

				<p id="subscribe-submit"
									>
					<input type="hidden" name="action" value="subscribe"/>
					<input type="hidden" name="blog_id" value="123543283"/>
					<input type="hidden" name="source" value="https://piotrminkowski.wordpress.com/category/message-brokers/"/>
					<input type="hidden" name="sub-type" value="widget"/>
					<input type="hidden" name="redirect_fragment" value="subscribe-blog"/>
					<input type="hidden" id="_wpnonce" name="_wpnonce" value="78fc3053bc" />					<button type="submit"
													class="wp-block-button__link"
																	>
						Follow					</button>
				</p>
			</form>
			
</section><section id="wp_tag_cloud-3" class="widget wp_widget_tag_cloud"><h2 class="widget-title">Tags</h2><a href="https://piotrminkowski.wordpress.com/tag/consul/" class="tag-cloud-link tag-link-1804072 tag-link-position-1" style="font-size: 12.2pt;" aria-label="Consul (13 items)">Consul</a>
<a href="https://piotrminkowski.wordpress.com/tag/continuous-delivery/" class="tag-cloud-link tag-link-32361710 tag-link-position-2" style="font-size: 9.4pt;" aria-label="Continuous Delivery (8 items)">Continuous Delivery</a>
<a href="https://piotrminkowski.wordpress.com/tag/continuous-integration/" class="tag-cloud-link tag-link-163615 tag-link-position-3" style="font-size: 10.1pt;" aria-label="Continuous Integration (9 items)">Continuous Integration</a>
<a href="https://piotrminkowski.wordpress.com/tag/docker/" class="tag-cloud-link tag-link-4504191 tag-link-position-4" style="font-size: 13.74pt;" aria-label="Docker (17 items)">Docker</a>
<a href="https://piotrminkowski.wordpress.com/tag/eureka/" class="tag-cloud-link tag-link-7737 tag-link-position-5" style="font-size: 9.4pt;" aria-label="Eureka (8 items)">Eureka</a>
<a href="https://piotrminkowski.wordpress.com/tag/istio/" class="tag-cloud-link tag-link-48006724 tag-link-position-6" style="font-size: 9.4pt;" aria-label="Istio (8 items)">Istio</a>
<a href="https://piotrminkowski.wordpress.com/tag/java/" class="tag-cloud-link tag-link-1017 tag-link-position-7" style="font-size: 15.7pt;" aria-label="Java (24 items)">Java</a>
<a href="https://piotrminkowski.wordpress.com/tag/jenkins/" class="tag-cloud-link tag-link-351789 tag-link-position-8" style="font-size: 11.64pt;" aria-label="Jenkins (12 items)">Jenkins</a>
<a href="https://piotrminkowski.wordpress.com/tag/jib/" class="tag-cloud-link tag-link-904642 tag-link-position-9" style="font-size: 8.7pt;" aria-label="Jib (7 items)">Jib</a>
<a href="https://piotrminkowski.wordpress.com/tag/kotlin/" class="tag-cloud-link tag-link-33435750 tag-link-position-10" style="font-size: 11.22pt;" aria-label="Kotlin (11 items)">Kotlin</a>
<a href="https://piotrminkowski.wordpress.com/tag/kubernetes/" class="tag-cloud-link tag-link-46713213 tag-link-position-11" style="font-size: 14.58pt;" aria-label="Kubernetes (20 items)">Kubernetes</a>
<a href="https://piotrminkowski.wordpress.com/tag/maven/" class="tag-cloud-link tag-link-47862 tag-link-position-12" style="font-size: 8pt;" aria-label="Maven (6 items)">Maven</a>
<a href="https://piotrminkowski.wordpress.com/tag/micronaut/" class="tag-cloud-link tag-link-6409418 tag-link-position-13" style="font-size: 11.64pt;" aria-label="Micronaut (12 items)">Micronaut</a>
<a href="https://piotrminkowski.wordpress.com/tag/microservices/" class="tag-cloud-link tag-link-17060625 tag-link-position-14" style="font-size: 21.02pt;" aria-label="Microservices (59 items)">Microservices</a>
<a href="https://piotrminkowski.wordpress.com/tag/minikube/" class="tag-cloud-link tag-link-516091564 tag-link-position-15" style="font-size: 10.66pt;" aria-label="Minikube (10 items)">Minikube</a>
<a href="https://piotrminkowski.wordpress.com/tag/openshift/" class="tag-cloud-link tag-link-56495631 tag-link-position-16" style="font-size: 10.66pt;" aria-label="Openshift (10 items)">Openshift</a>
<a href="https://piotrminkowski.wordpress.com/tag/performance/" class="tag-cloud-link tag-link-1930 tag-link-position-17" style="font-size: 9.4pt;" aria-label="Performance (8 items)">Performance</a>
<a href="https://piotrminkowski.wordpress.com/tag/reactor/" class="tag-cloud-link tag-link-142854 tag-link-position-18" style="font-size: 8.7pt;" aria-label="Reactor (7 items)">Reactor</a>
<a href="https://piotrminkowski.wordpress.com/tag/security/" class="tag-cloud-link tag-link-801 tag-link-position-19" style="font-size: 8.7pt;" aria-label="security (7 items)">security</a>
<a href="https://piotrminkowski.wordpress.com/tag/service-discovery/" class="tag-cloud-link tag-link-15998088 tag-link-position-20" style="font-size: 8.7pt;" aria-label="service discovery (7 items)">service discovery</a>
<a href="https://piotrminkowski.wordpress.com/tag/skaffold/" class="tag-cloud-link tag-link-5488682 tag-link-position-21" style="font-size: 8.7pt;" aria-label="Skaffold (7 items)">Skaffold</a>
<a href="https://piotrminkowski.wordpress.com/tag/spring/" class="tag-cloud-link tag-link-9486 tag-link-position-22" style="font-size: 12.2pt;" aria-label="Spring (13 items)">Spring</a>
<a href="https://piotrminkowski.wordpress.com/tag/spring-boot/" class="tag-cloud-link tag-link-91482705 tag-link-position-23" style="font-size: 22pt;" aria-label="Spring Boot (70 items)">Spring Boot</a>
<a href="https://piotrminkowski.wordpress.com/tag/spring-boot-actuator/" class="tag-cloud-link tag-link-349823485 tag-link-position-24" style="font-size: 10.66pt;" aria-label="Spring Boot Actuator (10 items)">Spring Boot Actuator</a>
<a href="https://piotrminkowski.wordpress.com/tag/spring-cloud/" class="tag-cloud-link tag-link-33915275 tag-link-position-25" style="font-size: 18.5pt;" aria-label="Spring Cloud (39 items)">Spring Cloud</a>
<a href="https://piotrminkowski.wordpress.com/tag/spring-cloud-gateway/" class="tag-cloud-link tag-link-610648714 tag-link-position-26" style="font-size: 9.4pt;" aria-label="Spring Cloud Gateway (8 items)">Spring Cloud Gateway</a>
<a href="https://piotrminkowski.wordpress.com/tag/spring-cloud-kubernetes/" class="tag-cloud-link tag-link-634971719 tag-link-position-27" style="font-size: 8.7pt;" aria-label="Spring Cloud Kubernetes (7 items)">Spring Cloud Kubernetes</a>
<a href="https://piotrminkowski.wordpress.com/tag/spring-data/" class="tag-cloud-link tag-link-51694791 tag-link-position-28" style="font-size: 11.64pt;" aria-label="Spring Data (12 items)">Spring Data</a>
<a href="https://piotrminkowski.wordpress.com/tag/testcontainers/" class="tag-cloud-link tag-link-572192572 tag-link-position-29" style="font-size: 8.7pt;" aria-label="testcontainers (7 items)">testcontainers</a>
<a href="https://piotrminkowski.wordpress.com/tag/testing/" class="tag-cloud-link tag-link-12 tag-link-position-30" style="font-size: 11.22pt;" aria-label="testing (11 items)">testing</a></section><section id="search-1" class="widget widget_search"><form role="search" method="get" class="search-form" action="https://piotrminkowski.wordpress.com/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form></section><section id="top-posts-2" class="widget widget_top-posts"><h2 class="widget-title">Top Posts &amp; Pages</h2><ul><li><a href="https://piotrminkowski.wordpress.com/2018/06/22/introduction-to-blockchain-with-java-using-ethereum-web3j-and-spring-boot/" class="bump-view" data-bump-view="tp">Introduction to Blockchain with Java using Ethereum, web3j and Spring Boot</a></li><li><a href="https://piotrminkowski.wordpress.com/2019/10/25/reactive-elasticsearch-with-spring-boot/" class="bump-view" data-bump-view="tp">Reactive Elasticsearch With Spring Boot</a></li><li><a href="https://piotrminkowski.wordpress.com/2018/05/21/secure-discovery-with-spring-cloud-netflix-eureka/" class="bump-view" data-bump-view="tp">Secure Discovery with Spring Cloud Netflix Eureka</a></li><li><a href="https://piotrminkowski.wordpress.com/2017/04/04/advanced-microservices-with-apache-camel/" class="bump-view" data-bump-view="tp">Advanced Microservices with Apache Camel</a></li><li><a href="https://piotrminkowski.wordpress.com/2017/04/14/microservices-api-documentation-with-swagger2/" class="bump-view" data-bump-view="tp">Microservices API Documentation with Swagger2</a></li><li><a href="https://piotrminkowski.wordpress.com/2017/02/05/part-1-creating-microservice-using-spring-cloud-eureka-and-zuul/" class="bump-view" data-bump-view="tp">Part 1: Creating microservice using Spring Cloud, Eureka and Zuul</a></li><li><a href="https://piotrminkowski.wordpress.com/2019/01/25/quick-guide-to-microservices-with-micronaut-framework/" class="bump-view" data-bump-view="tp">Quick Guide to Microservices with Micronaut Framework</a></li><li><a href="https://piotrminkowski.wordpress.com/2019/05/07/logging-with-spring-boot-and-elastic-stack/" class="bump-view" data-bump-view="tp">Logging with Spring Boot and Elastic Stack</a></li><li><a href="https://piotrminkowski.wordpress.com/2017/02/03/how-to-ship-logs-with-logstash-elasticsearch-and-rabbitmq/" class="bump-view" data-bump-view="tp">How to ship logs with Logstash, Elasticsearch and RabbitMQ</a></li><li><a href="https://piotrminkowski.wordpress.com/2020/03/10/best-practices-for-microservices-on-kubernetes/" class="bump-view" data-bump-view="tp">Best Practices For Microservices on Kubernetes</a></li></ul></section><section id="categories-2" class="widget widget_categories"><h2 class="widget-title">Categories</h2>
			<ul>
					<li class="cat-item cat-item-182564"><a href="https://piotrminkowski.wordpress.com/category/containers/">Containers</a> (38)
</li>
	<li class="cat-item cat-item-163615"><a href="https://piotrminkowski.wordpress.com/category/continuous-integration/">Continuous Integration</a> (17)
</li>
	<li class="cat-item cat-item-1002883"><a href="https://piotrminkowski.wordpress.com/category/data-grids/">Data Grids</a> (6)
</li>
	<li class="cat-item cat-item-307053"><a href="https://piotrminkowski.wordpress.com/category/jpa/">JPA</a> (5)
</li>
	<li class="cat-item cat-item-33435750"><a href="https://piotrminkowski.wordpress.com/category/kotlin/" title="kotlin">Kotlin</a> (8)
</li>
	<li class="cat-item cat-item-110665517 current-cat"><a aria-current="page" href="https://piotrminkowski.wordpress.com/category/message-brokers/">Message Brokers</a> (9)
</li>
	<li class="cat-item cat-item-6409418"><a href="https://piotrminkowski.wordpress.com/category/micronaut/" title="micronaut">Micronaut</a> (11)
</li>
	<li class="cat-item cat-item-17060625"><a href="https://piotrminkowski.wordpress.com/category/microservices/">Microservices</a> (52)
</li>
	<li class="cat-item cat-item-1035"><a href="https://piotrminkowski.wordpress.com/category/other/">Other</a> (9)
</li>
	<li class="cat-item cat-item-1930"><a href="https://piotrminkowski.wordpress.com/category/performance/">Performance</a> (12)
</li>
	<li class="cat-item cat-item-801"><a href="https://piotrminkowski.wordpress.com/category/security/">security</a> (8)
</li>
	<li class="cat-item cat-item-2092318"><a href="https://piotrminkowski.wordpress.com/category/serverless/">Serverless</a> (2)
</li>
	<li class="cat-item cat-item-91482705"><a href="https://piotrminkowski.wordpress.com/category/spring-boot/">Spring Boot</a> (54)
</li>
	<li class="cat-item cat-item-33915275"><a href="https://piotrminkowski.wordpress.com/category/spring-cloud/">Spring Cloud</a> (40)
</li>
			</ul>

			</section><section id="archives-3" class="widget widget_archive"><h2 class="widget-title">Archives</h2>
			<ul>
					<li><a href='https://piotrminkowski.wordpress.com/2020/08/'>August 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2020/07/'>July 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2020/06/'>June 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2020/05/'>May 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2020/04/'>April 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2020/03/'>March 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2020/02/'>February 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2020/01/'>January 2020</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/12/'>December 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/11/'>November 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/10/'>October 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/08/'>August 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/07/'>July 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/05/'>May 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/04/'>April 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/03/'>March 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/02/'>February 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2019/01/'>January 2019</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/12/'>December 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/11/'>November 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/10/'>October 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/09/'>September 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/08/'>August 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/07/'>July 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/06/'>June 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/05/'>May 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/04/'>April 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/03/'>March 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/02/'>February 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2018/01/'>January 2018</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/12/'>December 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/11/'>November 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/10/'>October 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/09/'>September 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/08/'>August 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/07/'>July 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/06/'>June 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/05/'>May 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/04/'>April 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/03/'>March 2017</a></li>
	<li><a href='https://piotrminkowski.wordpress.com/2017/02/'>February 2017</a></li>
			</ul>

			</section></aside><!-- #secondary -->
</div><!-- .wrap -->

	</div>

	
	<footer id="colophon" class="site-footer" role="contentinfo">
				<nav class="jetpack-social-navigation jetpack-social-navigation-svg" aria-label="Social Links Menu">
			<div class="menu-social-links-container"><ul id="menu-social-links" class="menu"><li id="menu-item-11" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11"><a href="https://twitter.com/"><span class="screen-reader-text">Twitter</span><svg class="icon icon-twitter" aria-hidden="true" role="img"> <use href="#icon-twitter" xlink:href="#icon-twitter"></use> </svg></a></li>
<li id="menu-item-12" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12"><a href="https://www.facebook.com/"><span class="screen-reader-text">Facebook</span><svg class="icon icon-facebook" aria-hidden="true" role="img"> <use href="#icon-facebook" xlink:href="#icon-facebook"></use> </svg></a></li>
<li id="menu-item-13" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-13"><a href="http://plus.google.com"><span class="screen-reader-text">Google+</span><svg class="icon icon-google" aria-hidden="true" role="img"> <use href="#icon-google" xlink:href="#icon-google"></use> </svg></a></li>
<li id="menu-item-14" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-14"><a href="http://github.com"><span class="screen-reader-text">GitHub</span><svg class="icon icon-github" aria-hidden="true" role="img"> <use href="#icon-github" xlink:href="#icon-github"></use> </svg></a></li>
<li id="menu-item-15" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-15"><a href="http://wordpress.com"><span class="screen-reader-text">WordPress.com</span><svg class="icon icon-wordpress" aria-hidden="true" role="img"> <use href="#icon-wordpress" xlink:href="#icon-wordpress"></use> </svg></a></li>
</ul></div>		</nav><!-- .jetpack-social-navigation -->
		


	<aside class="widget-area" role="complementary">
		<div class="wrap">
							<div class="widget-column">
					<section id="follow_button_widget-2" class="widget widget_follow_button_widget">
		<a class="wordpress-follow-button" href="https://piotrminkowski.wordpress.com" data-blog="123543283" data-lang="en" >Follow Piotr&#039;s TechBlog on WordPress.com</a>
		<script type="text/javascript">(function(d){var f = d.getElementsByTagName('SCRIPT')[0], p = d.createElement('SCRIPT');p.type = 'text/javascript';p.async = true;p.src = '//widgets.wp.com/platform.js';f.parentNode.insertBefore(p,f);}(document));</script>

		</section>
		<section id="recent-posts-1" class="widget widget_recent_entries">
		<h2 class="widget-title">Recent Posts</h2>
		<ul>
											<li>
					<a href="https://piotrminkowski.wordpress.com/2020/08/18/quick-guide-to-microservices-with-quarkus-on-openshift/">Quick Guide to Microservices with Quarkus on&nbsp;Openshift</a>
											<span class="post-date">August 18, 2020</span>
									</li>
											<li>
					<a href="https://piotrminkowski.wordpress.com/2020/08/10/guide-to-quarkus-on-kubernetes/">Guide to Quarkus on&nbsp;Kubernetes</a>
											<span class="post-date">August 10, 2020</span>
									</li>
											<li>
					<a href="https://piotrminkowski.wordpress.com/2020/08/09/guide-to-quarkus-with-kotlin/">Guide to Quarkus with&nbsp;Kotlin</a>
											<span class="post-date">August 9, 2020</span>
									</li>
											<li>
					<a href="https://piotrminkowski.wordpress.com/2020/08/06/intro-to-openshift-service-mesh/">Intro to OpenShift Service&nbsp;Mesh</a>
											<span class="post-date">August 6, 2020</span>
									</li>
											<li>
					<a href="https://piotrminkowski.wordpress.com/2020/08/05/development-on-kubernetes-choose-a-platform/">Development on Kubernetes: Choose a&nbsp;platform</a>
											<span class="post-date">August 5, 2020</span>
									</li>
					</ul>

		</section>				</div>
					</div>
	</aside><!-- .widget-area -->

<div class="site-info">
	<div class="wrap">
		<a href="https://wordpress.com/?ref=footer_blog" rel="nofollow">Blog at WordPress.com.</a>
		
			</div><!-- .wrap -->
</div><!-- .site-info -->
	</footer>
</div><!-- #page -->
<!--  -->
<script src='//0.gravatar.com/js/gprofiles.js?ver=202221z' id='grofiles-cards-js'></script>
<script id='wpgroho-js-extra'>
var WPGroHo = {"my_hash":""};
</script>
<script crossorigin='anonymous' type='text/javascript' src='https://s0.wp.com/wp-content/mu-plugins/gravatar-hovercards/wpgroho.js?m=1610363240h'></script>

	<script>
		// Initialize and attach hovercards to all gravatars
		( function() {
			function init() {
				if ( typeof Gravatar === 'undefined' ) {
					return;
				}

				if ( typeof Gravatar.init !== 'function' ) {
					return;
				}

				Gravatar.profile_cb = function ( hash, id ) {
					WPGroHo.syncProfileData( hash, id );
				};

				Gravatar.my_hash = WPGroHo.my_hash;
				Gravatar.init( 'body', '#wp-admin-bar-my-account' );
			}

			if ( document.readyState !== 'loading' ) {
				init();
			} else {
				document.addEventListener( 'DOMContentLoaded', init );
			}
		} )();
	</script>

		<div style="display:none">
	</div>
		<!-- CCPA [start] -->
		<script type="text/javascript">
			( function () {

				var setupPrivacy = function() {

					// Minimal Mozilla Cookie library
					// https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework
					var cookieLib = window.cookieLib = {getItem:function(e){return e&&decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*"+encodeURIComponent(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*([^;]*).*$)|^.*$"),"$1"))||null},setItem:function(e,o,n,t,r,i){if(!e||/^(?:expires|max\-age|path|domain|secure)$/i.test(e))return!1;var c="";if(n)switch(n.constructor){case Number:c=n===1/0?"; expires=Fri, 31 Dec 9999 23:59:59 GMT":"; max-age="+n;break;case String:c="; expires="+n;break;case Date:c="; expires="+n.toUTCString()}return"rootDomain"!==r&&".rootDomain"!==r||(r=(".rootDomain"===r?".":"")+document.location.hostname.split(".").slice(-2).join(".")),document.cookie=encodeURIComponent(e)+"="+encodeURIComponent(o)+c+(r?"; domain="+r:"")+(t?"; path="+t:"")+(i?"; secure":""),!0}};

					// Implement IAB USP API.
					window.__uspapi = function( command, version, callback ) {

						// Validate callback.
						if ( typeof callback !== 'function' ) {
							return;
						}

						// Validate the given command.
						if ( command !== 'getUSPData' || version !== 1 ) {
							callback( null, false );
							return;
						}

						// Check for GPC. If set, override any stored cookie.
						if ( navigator.globalPrivacyControl ) {
							callback( { version: 1, uspString: '1YYN' }, true );
							return;
						}

						// Check for cookie.
						var consent = cookieLib.getItem( 'usprivacy' );

						// Invalid cookie.
						if ( null === consent ) {
							callback( null, false );
							return;
						}

						// Everything checks out. Fire the provided callback with the consent data.
						callback( { version: 1, uspString: consent }, true );
					};

					// Initialization.
					document.addEventListener( 'DOMContentLoaded', function() {

						// Internal functions.
						var setDefaultOptInCookie = function() {
							var value = '1YNN';
							var domain = '.wordpress.com' === location.hostname.slice( -14 ) ? '.rootDomain' : location.hostname;
							cookieLib.setItem( 'usprivacy', value, 365 * 24 * 60 * 60, '/', domain );
						};

						var setDefaultOptOutCookie = function() {
							var value = '1YYN';
							var domain = '.wordpress.com' === location.hostname.slice( -14 ) ? '.rootDomain' : location.hostname;
							cookieLib.setItem( 'usprivacy', value, 24 * 60 * 60, '/', domain );
						};

						var setDefaultNotApplicableCookie = function() {
							var value = '1---';
							var domain = '.wordpress.com' === location.hostname.slice( -14 ) ? '.rootDomain' : location.hostname;
							cookieLib.setItem( 'usprivacy', value, 24 * 60 * 60, '/', domain );
						};

						var setCcpaAppliesCookie = function( applies ) {
							var domain = '.wordpress.com' === location.hostname.slice( -14 ) ? '.rootDomain' : location.hostname;
							cookieLib.setItem( 'ccpa_applies', applies, 24 * 60 * 60, '/', domain );
						}

						var maybeCallDoNotSellCallback = function() {
							if ( 'function' === typeof window.doNotSellCallback ) {
								return window.doNotSellCallback();
							}

							return false;
						}

						// Look for usprivacy cookie first.
						var usprivacyCookie = cookieLib.getItem( 'usprivacy' );

						// Found a usprivacy cookie.
						if ( null !== usprivacyCookie ) {

							// If the cookie indicates that CCPA does not apply, then bail.
							if ( '1---' === usprivacyCookie ) {
								return;
							}

							// CCPA applies, so call our callback to add Do Not Sell link to the page.
							maybeCallDoNotSellCallback();

							// We're all done, no more processing needed.
							return;
						}

						// We don't have a usprivacy cookie, so check to see if we have a CCPA applies cookie.
						var ccpaCookie = cookieLib.getItem( 'ccpa_applies' );

						// No CCPA applies cookie found, so we'll need to geolocate if this visitor is from California.
						// This needs to happen client side because we do not have region geo data in our $SERVER headers,
						// only country data -- therefore we can't vary cache on the region.
						if ( null === ccpaCookie ) {

							var request = new XMLHttpRequest();
							request.open( 'GET', 'https://public-api.wordpress.com/geo/', true );

							request.onreadystatechange = function () {
								if ( 4 === this.readyState ) {
									if ( 200 === this.status ) {

										// Got a geo response. Parse out the region data.
										var data = JSON.parse( this.response );
										var ccpa_applies = data['region'] && data['region'].toLowerCase() === 'california';

										// Set CCPA applies cookie. This keeps us from having to make a geo request too frequently.
										setCcpaAppliesCookie( ccpa_applies );

										// Check if CCPA applies to set the proper usprivacy cookie.
										if ( ccpa_applies ) {
											if ( maybeCallDoNotSellCallback() ) {
												// Do Not Sell link added, so set default opt-in.
												setDefaultOptInCookie();
											} else {
												// Failed showing Do Not Sell link as required, so default to opt-OUT just to be safe.
												setDefaultOptOutCookie();
											}
										} else {
											// CCPA does not apply.
											setDefaultNotApplicableCookie();
										}
									} else {
										// Could not geo, so let's assume for now that CCPA applies to be safe.
										setCcpaAppliesCookie( true );
										if ( maybeCallDoNotSellCallback() ) {
											// Do Not Sell link added, so set default opt-in.
											setDefaultOptInCookie();
										} else {
											// Failed showing Do Not Sell link as required, so default to opt-OUT just to be safe.
											setDefaultOptOutCookie();
										}
									}
								}
							};

							// Send the geo request.
							request.send();
						} else {
							// We found a CCPA applies cookie.
							if ( ccpaCookie === 'true' ) {
								if ( maybeCallDoNotSellCallback() ) {
									// Do Not Sell link added, so set default opt-in.
									setDefaultOptInCookie();
								} else {
									// Failed showing Do Not Sell link as required, so default to opt-OUT just to be safe.
									setDefaultOptOutCookie();
								}
							} else {
								// CCPA does not apply.
								setDefaultNotApplicableCookie();
							}
						}
					} );
				};

				// Kickoff initialization.
				if ( window.defQueue && defQueue.isLOHP && defQueue.isLOHP === 2020 ) {
					defQueue.items.push( setupPrivacy );
				} else {
					setupPrivacy();
				}

			} )();
		</script>

		<!-- CCPA [end] -->
				<script type="text/javascript">
		( function() {
			function init() {
				document.body.addEventListener( 'is.post-load', function() {
					if ( typeof __ATA.insertInlineAds === 'function' ) {
						__ATA.insertInlineAds();
					}
				} );
			}

			if ( document.readyState !== 'loading' ) {
				init();
			} else {
				document.addEventListener( 'DOMContentLoaded', init );
			}
		} )();
		</script>	<div id="actionbar" style="display: none;"
			class="actnbr-pub-lodestar actnbr-has-follow">
		<ul>
								<li class="actnbr-btn actnbr-hidden">
								<a class="actnbr-action actnbr-actn-follow " href="">
			<svg class="gridicon gridicons-reader-follow" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 16v2h-3v3h-2v-3h-3v-2h3v-3h2v3h3zM20 2v9h-4v3h-3v4H4c-1.1 0-2-.9-2-2V2h18zM8 13v-1H4v1h4zm3-3H4v1h7v-1zm0-2H4v1h7V8zm7-4H4v2h14V4z"/></g></svg><span>Follow</span>
		</a>
		<a class="actnbr-action actnbr-actn-following  no-display" href="">
			<svg class="gridicon gridicons-reader-following" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 13.482L15.508 21 12 17.4l1.412-1.388 2.106 2.188 6.094-6.094L23 13.482zm-7.455 1.862L20 10.89V2H2v14c0 1.1.9 2 2 2h4.538l4.913-4.832 2.095 2.176zM8 13H4v-1h4v1zm3-2H4v-1h7v1zm0-2H4V8h7v1zm7-3H4V4h14v2z"/></g></svg><span>Following</span>
		</a>
							<div class="actnbr-popover tip tip-top-left actnbr-notice" id="follow-bubble">
							<div class="tip-arrow"></div>
							<div class="tip-inner actnbr-follow-bubble">
															<ul>
											<li class="actnbr-sitename">
			<a href="https://piotrminkowski.wordpress.com">
				<img alt='' src='https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=50' class='avatar avatar-50' height='50' width='50' />				Piotr&#039;s TechBlog			</a>
		</li>
										<form method="post" action="https://subscribe.wordpress.com" accept-charset="utf-8" style="display: none;">
																						<div class="actnbr-follow-count">Join 1,158 other followers</div>
																					<div>
										<input type="email" name="email" placeholder="Enter your email address" class="actnbr-email-field" aria-label="Enter your email address" />
										</div>
										<input type="hidden" name="action" value="subscribe" />
										<input type="hidden" name="blog_id" value="123543283" />
										<input type="hidden" name="source" value="https://piotrminkowski.wordpress.com/category/message-brokers/" />
										<input type="hidden" name="sub-type" value="actionbar-follow" />
										<input type="hidden" id="_wpnonce" name="_wpnonce" value="78fc3053bc" />										<div class="actnbr-button-wrap">
											<button type="submit" value="Sign me up">
												Sign me up											</button>
										</div>
									</form>
									<li class="actnbr-login-nudge">
										<div>
											Already have a WordPress.com account? <a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fpiotrminkowski.wordpress.com%2F2020%2F01%2F17%2Fkubernetes-messaging-with-java-and-kubemq%2F&#038;signup_flow=account">Log in now.</a>										</div>
									</li>
								</ul>
															</div>
						</div>
					</li>
							<li class="actnbr-ellipsis actnbr-hidden">
				<svg class="gridicon gridicons-ellipsis" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M7 12c0 1.104-.896 2-2 2s-2-.896-2-2 .896-2 2-2 2 .896 2 2zm12-2c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2zm-7 0c-1.104 0-2 .896-2 2s.896 2 2 2 2-.896 2-2-.896-2-2-2z"/></g></svg>				<div class="actnbr-popover tip tip-top-left actnbr-more">
					<div class="tip-arrow"></div>
					<div class="tip-inner">
						<ul>
									<li class="actnbr-sitename">
			<a href="https://piotrminkowski.wordpress.com">
				<img alt='' src='https://piotrminkowski.files.wordpress.com/2019/11/me.jpeg?w=50' class='avatar avatar-50' height='50' width='50' />				Piotr&#039;s TechBlog			</a>
		</li>
								<li class="actnbr-folded-customize">
								<a href="https://piotrminkowski.wordpress.com/wp-admin/customize.php?url=https%3A%2F%2Fpiotrminkowski.wordpress.com%2Fcategory%2Fmessage-brokers%2F">
									<svg class="gridicon gridicons-customize" height="20" width="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M2 6c0-1.505.78-3.08 2-4 0 .845.69 2 2 2 1.657 0 3 1.343 3 3 0 .386-.08.752-.212 1.09.74.594 1.476 1.19 2.19 1.81L8.9 11.98c-.62-.716-1.214-1.454-1.807-2.192C6.753 9.92 6.387 10 6 10c-2.21 0-4-1.79-4-4zm12.152 6.848l1.34-1.34c.607.304 1.283.492 2.008.492 2.485 0 4.5-2.015 4.5-4.5 0-.725-.188-1.4-.493-2.007L18 9l-2-2 3.507-3.507C18.9 3.188 18.225 3 17.5 3 15.015 3 13 5.015 13 7.5c0 .725.188 1.4.493 2.007L3 20l2 2 6.848-6.848c1.885 1.928 3.874 3.753 5.977 5.45l1.425 1.148 1.5-1.5-1.15-1.425c-1.695-2.103-3.52-4.092-5.448-5.977z"/></g></svg>									<span>Customize</span>
								</a>
							</li>
																<li class="actnbr-folded-follow">
												<a class="actnbr-action actnbr-actn-follow " href="">
			<svg class="gridicon gridicons-reader-follow" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 16v2h-3v3h-2v-3h-3v-2h3v-3h2v3h3zM20 2v9h-4v3h-3v4H4c-1.1 0-2-.9-2-2V2h18zM8 13v-1H4v1h4zm3-3H4v1h7v-1zm0-2H4v1h7V8zm7-4H4v2h14V4z"/></g></svg><span>Follow</span>
		</a>
		<a class="actnbr-action actnbr-actn-following  no-display" href="">
			<svg class="gridicon gridicons-reader-following" height="24" width="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g><path d="M23 13.482L15.508 21 12 17.4l1.412-1.388 2.106 2.188 6.094-6.094L23 13.482zm-7.455 1.862L20 10.89V2H2v14c0 1.1.9 2 2 2h4.538l4.913-4.832 2.095 2.176zM8 13H4v-1h4v1zm3-2H4v-1h7v1zm0-2H4V8h7v1zm7-3H4V4h14v2z"/></g></svg><span>Following</span>
		</a>
										</li>
																	<li class="actnbr-signup"><a href="https://wordpress.com/start/">Sign up</a></li>
									<li class="actnbr-login"><a href="https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fpiotrminkowski.wordpress.com%2F2020%2F01%2F17%2Fkubernetes-messaging-with-java-and-kubemq%2F&#038;signup_flow=account">Log in</a></li>
																	<li class="flb-report"><a href="http://en.wordpress.com/abuse/">Report this content</a></li>
																	<li class="actnbr-reader">
										<a href="https://wordpress.com/read/feeds/108320085">
											View site in Reader										</a>
									</li>
																	<li class="actnbr-subs">
										<a href="https://subscribe.wordpress.com/">Manage subscriptions</a>
									</li>
																		<li class="actnbr-fold"><a href="">Collapse this bar</a></li>
															</ul>
					</div>
				</div>
			</li>
		</ul>
	</div>
	
<script>
window.addEventListener( "load", function( event ) {
	var link = document.createElement( "link" );
	link.href = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.css?v=20210915";
	link.type = "text/css";
	link.rel = "stylesheet";
	document.head.appendChild( link );

	var script = document.createElement( "script" );
	script.src = "https://s0.wp.com/wp-content/mu-plugins/actionbar/actionbar.js?v=20220329";
	script.defer = true;
	document.body.appendChild( script );
} );
</script>

			<div id="jp-carousel-loading-overlay">
			<div id="jp-carousel-loading-wrapper">
				<span id="jp-carousel-library-loading">&nbsp;</span>
			</div>
		</div>
		<div class="jp-carousel-overlay" style="display: none;">

		<div class="jp-carousel-container">
			<!-- The Carousel Swiper -->
			<div
				class="jp-carousel-wrap swiper-container jp-carousel-swiper-container jp-carousel-transitions"
				itemscope
				itemtype="https://schema.org/ImageGallery">
				<div class="jp-carousel swiper-wrapper"></div>
				<div class="jp-swiper-button-prev swiper-button-prev">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskPrev" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="9" height="12">
							<path d="M16.2072 16.59L11.6496 12L16.2072 7.41L14.8041 6L8.8335 12L14.8041 18L16.2072 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskPrev)">
							<rect x="0.579102" width="23.8823" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
				<div class="jp-swiper-button-next swiper-button-next">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskNext" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="8" height="12">
							<path d="M8.59814 16.59L13.1557 12L8.59814 7.41L10.0012 6L15.9718 12L10.0012 18L8.59814 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskNext)">
							<rect x="0.34375" width="23.8822" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
			</div>
			<!-- The main close buton -->
			<div class="jp-carousel-close-hint">
				<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<mask id="maskClose" mask-type="alpha" maskUnits="userSpaceOnUse" x="5" y="5" width="15" height="14">
						<path d="M19.3166 6.41L17.9135 5L12.3509 10.59L6.78834 5L5.38525 6.41L10.9478 12L5.38525 17.59L6.78834 19L12.3509 13.41L17.9135 19L19.3166 17.59L13.754 12L19.3166 6.41Z" fill="white"/>
					</mask>
					<g mask="url(#maskClose)">
						<rect x="0.409668" width="23.8823" height="24" fill="#FFFFFF"/>
					</g>
				</svg>
			</div>
			<!-- Image info, comments and meta -->
			<div class="jp-carousel-info">
				<div class="jp-carousel-info-footer">
					<div class="jp-carousel-pagination-container">
						<div class="jp-swiper-pagination swiper-pagination"></div>
						<div class="jp-carousel-pagination"></div>
					</div>
					<div class="jp-carousel-photo-title-container">
						<h2 class="jp-carousel-photo-caption"></h2>
					</div>
					<div class="jp-carousel-photo-icons-container">
						<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-info" aria-label="Toggle photo metadata visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskInfo" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7537 2C7.26076 2 2.80273 6.48 2.80273 12C2.80273 17.52 7.26076 22 12.7537 22C18.2466 22 22.7046 17.52 22.7046 12C22.7046 6.48 18.2466 2 12.7537 2ZM11.7586 7V9H13.7488V7H11.7586ZM11.7586 11V17H13.7488V11H11.7586ZM4.79292 12C4.79292 16.41 8.36531 20 12.7537 20C17.142 20 20.7144 16.41 20.7144 12C20.7144 7.59 17.142 4 12.7537 4C8.36531 4 4.79292 7.59 4.79292 12Z" fill="white"/>
									</mask>
									<g mask="url(#maskInfo)">
										<rect x="0.8125" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
							</span>
						</a>
												<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-comments" aria-label="Toggle photo comments visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskComments" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M4.3271 2H20.2486C21.3432 2 22.2388 2.9 22.2388 4V16C22.2388 17.1 21.3432 18 20.2486 18H6.31729L2.33691 22V4C2.33691 2.9 3.2325 2 4.3271 2ZM6.31729 16H20.2486V4H4.3271V18L6.31729 16Z" fill="white"/>
									</mask>
									<g mask="url(#maskComments)">
										<rect x="0.34668" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>

								<span class="jp-carousel-has-comments-indicator" aria-label="This image has comments."></span>
							</span>
						</a>
											</div>
				</div>
				<div class="jp-carousel-info-extra">
					<div class="jp-carousel-info-content-wrapper">
						<div class="jp-carousel-photo-title-container">
							<h2 class="jp-carousel-photo-title"></h2>
						</div>
						<div class="jp-carousel-comments-wrapper">
															<div id="jp-carousel-comments-loading">
									<span>Loading Comments...</span>
								</div>
								<div class="jp-carousel-comments"></div>
								<div id="jp-carousel-comment-form-container">
									<span id="jp-carousel-comment-form-spinner">&nbsp;</span>
									<div id="jp-carousel-comment-post-results"></div>
																														<form id="jp-carousel-comment-form">
												<label for="jp-carousel-comment-form-comment-field" class="screen-reader-text">Write a Comment...</label>
												<textarea
													name="comment"
													class="jp-carousel-comment-form-field jp-carousel-comment-form-textarea"
													id="jp-carousel-comment-form-comment-field"
													placeholder="Write a Comment..."
												></textarea>
												<div id="jp-carousel-comment-form-submit-and-info-wrapper">
													<div id="jp-carousel-comment-form-commenting-as">
																													<fieldset>
																<label for="jp-carousel-comment-form-email-field">Email (Required)</label>
																<input type="text" name="email" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-email-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-author-field">Name (Required)</label>
																<input type="text" name="author" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-author-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-url-field">Website</label>
																<input type="text" name="url" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-url-field" />
															</fieldset>
																											</div>
													<input
														type="submit"
														name="submit"
														class="jp-carousel-comment-form-button"
														id="jp-carousel-comment-form-button-submit"
														value="Post Comment" />
												</div>
											</form>
																											</div>
													</div>
						<div class="jp-carousel-image-meta">
							<div class="jp-carousel-title-and-caption">
								<div class="jp-carousel-photo-info">
									<h3 class="jp-carousel-caption" itemprop="caption description"></h3>
								</div>

								<div class="jp-carousel-photo-description"></div>
							</div>
							<ul class="jp-carousel-image-exif" style="display: none;"></ul>
							<a class="jp-carousel-image-download" target="_blank" style="display: none;">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="3" y="3" width="19" height="18">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M5.84615 5V19H19.7775V12H21.7677V19C21.7677 20.1 20.8721 21 19.7775 21H5.84615C4.74159 21 3.85596 20.1 3.85596 19V5C3.85596 3.9 4.74159 3 5.84615 3H12.8118V5H5.84615ZM14.802 5V3H21.7677V10H19.7775V6.41L9.99569 16.24L8.59261 14.83L18.3744 5H14.802Z" fill="white"/>
									</mask>
									<g mask="url(#mask0)">
										<rect x="0.870605" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
								<span class="jp-carousel-download-text"></span>
							</a>
							<div class="jp-carousel-image-map" style="display: none;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		</div>
		<script crossorigin='anonymous' type='text/javascript' src='https://s0.wp.com/_static/??-eJzTLy/QTc7PK0nNK9EvyClNz8wr1i+uzCtJrMjITM/IAeKS1CJMEWP94uSizIISoOIM5/yiVL2sYh19yo1yKiotzojIzaGmcV6JZYnUNM8psTiDmuYF5CRm5gENtM+1NTQ1NzAyMLG0MM0CAEDknmM='></script>
<script type='text/javascript'>
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.head.appendChild( corecss );
		var themecssurl = "https://s0.wp.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?m=1363304414h&amp;ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		document.head.appendChild( themecss );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();

	// Infinite scroll support
	if ( typeof( jQuery ) !== 'undefined' ) {
		jQuery( function( $ ) {
			$( document.body ).on( 'post-load', function() {
				SyntaxHighlighter.highlight();
			} );
		} );
	}
</script>
<link rel='stylesheet' id='all-css-0-2' href='https://s0.wp.com/_static/??/wp-content/mu-plugins/carousel/swiper-bundle.css,/wp-content/mu-plugins/carousel/jetpack-carousel.css?m=1630955947j&cssminify=yes' type='text/css' media='all' />
<script id='jetpack-carousel-js-extra'>
var jetpackSwiperLibraryPath = {"url":"\/wp-content\/mu-plugins\/carousel\/swiper-bundle.js"};
var jetpackCarouselStrings = {"widths":[370,700,1000,1200,1400,2000],"is_logged_in":"","lang":"en","ajaxurl":"https:\/\/piotrminkowski.wordpress.com\/wp-admin\/admin-ajax.php","nonce":"c241372b51","display_exif":"1","display_comments":"1","single_image_gallery":"1","single_image_gallery_media_file":"","background_color":"black","comment":"Comment","post_comment":"Post Comment","write_comment":"Write a Comment...","loading_comments":"Loading Comments...","download_original":"View full size <span class=\"photo-size\">{0}<span class=\"photo-size-times\">\u00d7<\/span>{1}<\/span>","no_comment_text":"Please be sure to submit some text with your comment.","no_comment_email":"Please provide an email address to comment.","no_comment_author":"Please provide your name to comment.","comment_post_error":"Sorry, but there was an error posting your comment. Please try again later.","comment_approved":"Your comment was approved.","comment_unapproved":"Your comment is in moderation.","camera":"Camera","aperture":"Aperture","shutter_speed":"Shutter Speed","focal_length":"Focal Length","copyright":"Copyright","comment_registration":"0","require_name_email":"1","login_url":"https:\/\/piotrminkowski.wordpress.com\/wp-login.php?redirect_to=https%3A%2F%2Fpiotrminkowski.wordpress.com%2F2018%2F06%2F15%2Fbuilding-and-testing-message-driven-microservices-using-spring-cloud-stream%2F","blog_id":"123543283","meta_data":["camera","aperture","shutter_speed","focal_length","copyright"],"stats_query_args":"blog=123543283&v=wpcom&tz=0&user_id=0&subd=piotrminkowski","is_public":"1"};
</script>
<script crossorigin='anonymous' type='text/javascript' src='https://s0.wp.com/_static/??-eJyVzl1OwzAMAOAL4ZlKDMQD4ixO4pW0ThzFzsrx6ZBAaEiIvfnvs41bg6jVuTouhonPOXJ7Pyx2hz9a/saFDdsIKJrYnDqSGbtdVKVznsmz1tvcLBpIbjO25gaS6wonjcPglH89G0RnaDLmXA037YmSQZTLjs8VsbRDGDUJX8syvh2lkiuE/XYhc+57BN4prvYHitR1GAsu7G2fha/CPwxsLWq5Snf3Wl6mx+N0/3x8mJ6WDwa2ocg='></script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script><script src="//stats.wp.com/w.js?63" defer></script> <script type="text/javascript">
_tkq = window._tkq || [];
_stq = window._stq || [];
_tkq.push(['storeContext', {'blog_id':'123543283','blog_tz':'0','user_lang':'en','blog_lang':'en','user_id':'0'}]);
_stq.push(['view', {'blog':'123543283','v':'wpcom','tz':'0','user_id':'0','subd':'piotrminkowski'}]);
_stq.push(['extra', {'crypt':'UE5XaGUuOTlwaD85flAmcm1mcmZsaDhkV11YdWtpP0NsWnVkPS9sL0ViLndld3BmSkpSVUctWTNGWUpjLj8wczZDMXRiWi9STF82RjNxaV9hL0NbTGRCJXQrNWthL2otTmErSV9zdixfZTFqTlVZUUQzNXB0TGItJml6WHUzTktbbVprZiZGVVNvSVd2bUsvWSsmUUk3WFR6P3hLT3MwNnlWeUE5MCw0X3NjTEw2RiZEV1tyM1pCS3lSXWUwQzksVSZDJXFiVjVMMSxQbkJ3QV9WJl1DQTRtUXcwLTJwdjlNbSwxMHMwY0xQVlNfbEFRS2U/eUljWWtBXVVFMSx2JWJ2aGwwSVhpX3xQZmxaZl9DR3ZFTkd4PXwwVU5zYWpLRmw1XTNoaFVOJXM2JWRa'}]);
_stq.push([ 'clickTrackerInit', '123543283', '0' ]);
	</script>
<noscript><img src="https://pixel.wp.com/b.gif?v=noscript" style="height:1px;width:1px;overflow:hidden;position:absolute;bottom:1px;" alt="" /></noscript>
<script>
if ( 'object' === typeof wpcom_mobile_user_agent_info ) {

	wpcom_mobile_user_agent_info.init();
	var mobileStatsQueryString = "";
	
	if( false !== wpcom_mobile_user_agent_info.matchedPlatformName )
		mobileStatsQueryString += "&x_" + 'mobile_platforms' + '=' + wpcom_mobile_user_agent_info.matchedPlatformName;
	
	if( false !== wpcom_mobile_user_agent_info.matchedUserAgentName )
		mobileStatsQueryString += "&x_" + 'mobile_devices' + '=' + wpcom_mobile_user_agent_info.matchedUserAgentName;
	
	if( wpcom_mobile_user_agent_info.isIPad() )
		mobileStatsQueryString += "&x_" + 'ipad_views' + '=' + 'views';

	if( "" != mobileStatsQueryString ) {
		new Image().src = document.location.protocol + '//pixel.wp.com/g.gif?v=wpcom-no-pv' + mobileStatsQueryString + '&baba=' + Math.random();
	}
	
}
</script><svg style="position: absolute; width: 0; height: 0; overflow: hidden;" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<defs>
<symbol id="icon-500px" viewBox="0 0 24 24">
<path d="M6.94026,15.1412c.00437.01213.108.29862.168.44064a6.55008,6.55008,0,1,0,6.03191-9.09557,6.68654,6.68654,0,0,0-2.58357.51467A8.53914,8.53914,0,0,0,8.21268,8.61344L8.209,8.61725V3.22948l9.0504-.00008c.32934-.0036.32934-.46353.32934-.61466s0-.61091-.33035-.61467L7.47248,2a.43.43,0,0,0-.43131.42692v7.58355c0,.24466.30476.42131.58793.4819.553.11812.68074-.05864.81617-.2457l.018-.02481A10.52673,10.52673,0,0,1,9.32258,9.258a5.35268,5.35268,0,1,1,7.58985,7.54976,5.417,5.417,0,0,1-3.80867,1.56365,5.17483,5.17483,0,0,1-2.69822-.74478l.00342-4.61111a2.79372,2.79372,0,0,1,.71372-1.78792,2.61611,2.61611,0,0,1,1.98282-.89477,2.75683,2.75683,0,0,1,1.95525.79477,2.66867,2.66867,0,0,1,.79656,1.909,2.724,2.724,0,0,1-2.75849,2.748,4.94651,4.94651,0,0,1-.86254-.13719c-.31234-.093-.44519.34058-.48892.48349-.16811.54966.08453.65862.13687.67489a3.75751,3.75751,0,0,0,1.25234.18375,3.94634,3.94634,0,1,0-2.82444-6.742,3.67478,3.67478,0,0,0-1.13028,2.584l-.00041.02323c-.0035.11667-.00579,2.881-.00644,3.78811l-.00407-.00451a6.18521,6.18521,0,0,1-1.0851-1.86092c-.10544-.27856-.34358-.22925-.66857-.12917-.14192.04372-.57386.17677-.47833.489Zm4.65165-1.08338a.51346.51346,0,0,0,.19513.31818l.02276.022a.52945.52945,0,0,0,.3517.18416.24242.24242,0,0,0,.16577-.0611c.05473-.05082.67382-.67812.73287-.738l.69041.68819a.28978.28978,0,0,0,.21437.11032.53239.53239,0,0,0,.35708-.19486c.29792-.30419.14885-.46821.07676-.54751l-.69954-.69975.72952-.73469c.16-.17311.01874-.35708-.12218-.498-.20461-.20461-.402-.25742-.52855-.14083l-.7254.72665-.73354-.73375a.20128.20128,0,0,0-.14179-.05695.54135.54135,0,0,0-.34379.19648c-.22561.22555-.274.38149-.15656.5059l.73374.7315-.72942.73072A.26589.26589,0,0,0,11.59191,14.05782Zm1.59866-9.915A8.86081,8.86081,0,0,0,9.854,4.776a.26169.26169,0,0,0-.16938.22759.92978.92978,0,0,0,.08619.42094c.05682.14524.20779.531.50006.41955a8.40969,8.40969,0,0,1,2.91968-.55484,7.87875,7.87875,0,0,1,3.086.62286,8.61817,8.61817,0,0,1,2.30562,1.49315.2781.2781,0,0,0,.18318.07586c.15529,0,.30425-.15253.43167-.29551.21268-.23861.35873-.4369.1492-.63538a8.50425,8.50425,0,0,0-2.62312-1.694A9.0177,9.0177,0,0,0,13.19058,4.14283ZM19.50945,18.6236h0a.93171.93171,0,0,0-.36642-.25406.26589.26589,0,0,0-.27613.06613l-.06943.06929A7.90606,7.90606,0,0,1,7.60639,18.505a7.57284,7.57284,0,0,1-1.696-2.51537,8.58715,8.58715,0,0,1-.5147-1.77754l-.00871-.04864c-.04939-.25873-.28755-.27684-.62981-.22448-.14234.02178-.5755.088-.53426.39969l.001.00712a9.08807,9.08807,0,0,0,15.406,4.99094c.00193-.00192.04753-.04718.0725-.07436C19.79425,19.16234,19.87422,18.98728,19.50945,18.6236Z"/>
</symbol>
<symbol id="icon-amazon" viewBox="0 0 24 24">
<path d="M13.582,8.182C11.934,8.367,9.78,8.49,8.238,9.166c-1.781,0.769-3.03,2.337-3.03,4.644 c0,2.953,1.86,4.429,4.253,4.429c2.02,0,3.125-0.477,4.685-2.065c0.516,0.747,0.685,1.109,1.629,1.894 c0.212,0.114,0.483,0.103,0.672-0.066l0.006,0.006c0.567-0.505,1.599-1.401,2.18-1.888c0.231-0.188,0.19-0.496,0.009-0.754 c-0.52-0.718-1.072-1.303-1.072-2.634V8.305c0-1.876,0.133-3.599-1.249-4.891C15.23,2.369,13.422,2,12.04,2 C9.336,2,6.318,3.01,5.686,6.351C5.618,6.706,5.877,6.893,6.109,6.945l2.754,0.298C9.121,7.23,9.308,6.977,9.357,6.72 c0.236-1.151,1.2-1.706,2.284-1.706c0.584,0,1.249,0.215,1.595,0.738c0.398,0.584,0.346,1.384,0.346,2.061V8.182z M13.049,14.088 c-0.451,0.8-1.169,1.291-1.967,1.291c-1.09,0-1.728-0.83-1.728-2.061c0-2.42,2.171-2.86,4.227-2.86v0.615 C13.582,12.181,13.608,13.104,13.049,14.088z M20.683,19.339C18.329,21.076,14.917,22,11.979,22c-4.118,0-7.826-1.522-10.632-4.057 c-0.22-0.199-0.024-0.471,0.241-0.317c3.027,1.762,6.771,2.823,10.639,2.823c2.608,0,5.476-0.541,8.115-1.66 C20.739,18.62,21.072,19.051,20.683,19.339z M21.336,21.043c-0.194,0.163-0.379,0.076-0.293-0.139 c0.284-0.71,0.92-2.298,0.619-2.684c-0.301-0.386-1.99-0.183-2.749-0.092c-0.23,0.027-0.266-0.173-0.059-0.319 c1.348-0.946,3.555-0.673,3.811-0.356C22.925,17.773,22.599,19.986,21.336,21.043z"/>
</symbol>
<symbol id="icon-apple" viewBox="0 0 24 24">
<path d="M20.07,17.586a10.874,10.874,0,0,1-1.075,1.933,9.822,9.822,0,0,1-1.385,1.674,2.687,2.687,0,0,1-1.78.784,4.462,4.462,0,0,1-1.644-.393,4.718,4.718,0,0,0-1.77-.391,4.878,4.878,0,0,0-1.82.391A4.9,4.9,0,0,1,9.021,22a2.53,2.53,0,0,1-1.82-.8A10.314,10.314,0,0,1,5.752,19.46,11.987,11.987,0,0,1,4.22,16.417a11.143,11.143,0,0,1-.643-3.627,6.623,6.623,0,0,1,.87-3.465A5.1,5.1,0,0,1,6.268,7.483a4.9,4.9,0,0,1,2.463-.695,5.8,5.8,0,0,1,1.9.443,6.123,6.123,0,0,0,1.511.444,9.04,9.04,0,0,0,1.675-.523,5.537,5.537,0,0,1,2.277-.4,4.835,4.835,0,0,1,3.788,1.994,4.213,4.213,0,0,0-2.235,3.827,4.222,4.222,0,0,0,1.386,3.181,4.556,4.556,0,0,0,1.385.909q-.167.483-.353.927ZM16.211,2.4a4.267,4.267,0,0,1-1.094,2.8,3.726,3.726,0,0,1-3.1,1.528A3.114,3.114,0,0,1,12,6.347a4.384,4.384,0,0,1,1.16-2.828,4.467,4.467,0,0,1,1.414-1.061A4.215,4.215,0,0,1,16.19,2a3.633,3.633,0,0,1,.021.4Z"/>
</symbol>
<symbol id="icon-bandcamp" viewBox="0 0 24 24">
<path d="M15.27 17.289 3 17.289 8.73 6.711 21 6.711 15.27 17.289"/>
</symbol>
<symbol id="icon-behance" viewBox="0 0 24 24">
<path d="M7.799,5.698c0.589,0,1.12,0.051,1.606,0.156c0.482,0.102,0.894,0.273,1.241,0.507c0.344,0.235,0.612,0.546,0.804,0.938 c0.188,0.387,0.281,0.871,0.281,1.443c0,0.619-0.141,1.137-0.421,1.551c-0.284,0.413-0.7,0.751-1.255,1.014 c0.756,0.218,1.317,0.601,1.689,1.146c0.374,0.549,0.557,1.205,0.557,1.975c0,0.623-0.12,1.161-0.359,1.612 c-0.241,0.457-0.569,0.828-0.973,1.114c-0.408,0.288-0.876,0.5-1.399,0.637C9.052,17.931,8.514,18,7.963,18H2V5.698H7.799 M7.449,10.668c0.481,0,0.878-0.114,1.192-0.345c0.311-0.228,0.463-0.603,0.463-1.119c0-0.286-0.051-0.523-0.152-0.707 C8.848,8.315,8.711,8.171,8.536,8.07C8.362,7.966,8.166,7.894,7.94,7.854c-0.224-0.044-0.457-0.06-0.697-0.06H4.709v2.874H7.449z M7.6,15.905c0.267,0,0.521-0.024,0.759-0.077c0.243-0.053,0.457-0.137,0.637-0.261c0.182-0.12,0.332-0.283,0.441-0.491 C9.547,14.87,9.6,14.602,9.6,14.278c0-0.633-0.18-1.084-0.533-1.357c-0.356-0.27-0.83-0.404-1.413-0.404H4.709v3.388L7.6,15.905z M16.162,15.864c0.367,0.358,0.897,0.538,1.583,0.538c0.493,0,0.92-0.125,1.277-0.374c0.354-0.248,0.571-0.514,0.654-0.79h2.155 c-0.347,1.072-0.872,1.838-1.589,2.299C19.534,18,18.67,18.23,17.662,18.23c-0.701,0-1.332-0.113-1.899-0.337 c-0.567-0.227-1.041-0.544-1.439-0.958c-0.389-0.415-0.689-0.907-0.904-1.484c-0.213-0.574-0.32-1.21-0.32-1.899 c0-0.666,0.11-1.288,0.329-1.863c0.222-0.577,0.529-1.075,0.933-1.492c0.406-0.42,0.885-0.751,1.444-0.994 c0.558-0.241,1.175-0.363,1.857-0.363c0.754,0,1.414,0.145,1.98,0.44c0.563,0.291,1.026,0.686,1.389,1.181 c0.363,0.493,0.622,1.057,0.783,1.69c0.16,0.632,0.217,1.292,0.171,1.983h-6.428C15.557,14.84,15.795,15.506,16.162,15.864 M18.973,11.184c-0.291-0.321-0.783-0.496-1.384-0.496c-0.39,0-0.714,0.066-0.973,0.2c-0.254,0.132-0.461,0.297-0.621,0.491 c-0.157,0.197-0.265,0.405-0.328,0.628c-0.063,0.217-0.101,0.413-0.111,0.587h3.98C19.478,11.969,19.265,11.509,18.973,11.184z M15.057,7.738h4.985V6.524h-4.985L15.057,7.738z"/>
</symbol>
<symbol id="icon-blogger" viewBox="0 0 24 24">
<path d="M14.722,14.019c0,0.361-0.293,0.654-0.654,0.654H9.977c-0.361,0-0.654-0.293-0.654-0.654s0.293-0.654,0.654-0.654h4.091C14.429,13.365,14.722,13.658,14.722,14.019z M9.981,10.698h2.038c0.382,0,0.692-0.31,0.692-0.692c0-0.382-0.31-0.692-0.692-0.692H9.981c-0.382,0-0.692,0.31-0.692,0.692C9.289,10.388,9.599,10.698,9.981,10.698z M21,5v14c0,1.105-0.895,2-2,2H5c-1.105,0-2-0.895-2-2V5c0-1.105,0.895-2,2-2h14C20.105,3,21,3.895,21,5z M17.544,11.39c0-0.398-0.322-0.72-0.72-0.72h-0.607l-0.013,0.001c-0.38,0-0.692-0.295-0.718-0.668l-0.001-0.008c0-1.988-1.611-3.599-3.599-3.599h-1.816c-1.988,0-3.599,1.611-3.599,3.599v3.947c0,1.987,1.611,3.599,3.599,3.599h3.874c1.988,0,3.599-1.611,3.599-3.599L17.544,11.39z"/>
</symbol>
<symbol id="icon-chain" viewBox="0 0 24 24">
<path d="M19.647,16.706a1.134,1.134,0,0,0-.343-.833l-2.549-2.549a1.134,1.134,0,0,0-.833-.343,1.168,1.168,0,0,0-.883.392l.233.226q.2.189.264.264a2.922,2.922,0,0,1,.184.233.986.986,0,0,1,.159.312,1.242,1.242,0,0,1,.043.337,1.172,1.172,0,0,1-1.176,1.176,1.237,1.237,0,0,1-.337-.043,1,1,0,0,1-.312-.159,2.76,2.76,0,0,1-.233-.184q-.073-.068-.264-.264l-.226-.233a1.19,1.19,0,0,0-.4.895,1.134,1.134,0,0,0,.343.833L15.837,19.3a1.13,1.13,0,0,0,.833.331,1.18,1.18,0,0,0,.833-.318l1.8-1.789a1.12,1.12,0,0,0,.343-.821Zm-8.615-8.64a1.134,1.134,0,0,0-.343-.833L8.163,4.7a1.134,1.134,0,0,0-.833-.343,1.184,1.184,0,0,0-.833.331L4.7,6.473a1.12,1.12,0,0,0-.343.821,1.134,1.134,0,0,0,.343.833l2.549,2.549a1.13,1.13,0,0,0,.833.331,1.184,1.184,0,0,0,.883-.38L8.728,10.4q-.2-.189-.264-.264A2.922,2.922,0,0,1,8.28,9.9a.986.986,0,0,1-.159-.312,1.242,1.242,0,0,1-.043-.337A1.172,1.172,0,0,1,9.254,8.079a1.237,1.237,0,0,1,.337.043,1,1,0,0,1,.312.159,2.761,2.761,0,0,1,.233.184q.073.068.264.264l.226.233a1.19,1.19,0,0,0,.4-.895ZM22,16.706a3.343,3.343,0,0,1-1.042,2.488l-1.8,1.789a3.536,3.536,0,0,1-4.988-.025l-2.525-2.537a3.384,3.384,0,0,1-1.017-2.488,3.448,3.448,0,0,1,1.078-2.561l-1.078-1.078a3.434,3.434,0,0,1-2.549,1.078,3.4,3.4,0,0,1-2.5-1.029L3.029,9.794A3.4,3.4,0,0,1,2,7.294,3.343,3.343,0,0,1,3.042,4.806l1.8-1.789A3.384,3.384,0,0,1,7.331,2a3.357,3.357,0,0,1,2.5,1.042l2.525,2.537a3.384,3.384,0,0,1,1.017,2.488,3.448,3.448,0,0,1-1.078,2.561l1.078,1.078a3.551,3.551,0,0,1,5.049-.049l2.549,2.549A3.4,3.4,0,0,1,22,16.706Z"/>
</symbol>
<symbol id="icon-codepen" viewBox="0 0 24 24">
<path d="M22.016,8.84c-0.002-0.013-0.005-0.025-0.007-0.037c-0.005-0.025-0.008-0.048-0.015-0.072 c-0.003-0.015-0.01-0.028-0.013-0.042c-0.008-0.02-0.015-0.04-0.023-0.062c-0.007-0.015-0.013-0.028-0.02-0.042 c-0.008-0.02-0.018-0.037-0.03-0.057c-0.007-0.013-0.017-0.027-0.025-0.038c-0.012-0.018-0.023-0.035-0.035-0.052 c-0.01-0.013-0.02-0.025-0.03-0.037c-0.015-0.017-0.028-0.032-0.043-0.045c-0.01-0.012-0.022-0.023-0.035-0.035 c-0.015-0.015-0.032-0.028-0.048-0.04c-0.012-0.01-0.025-0.02-0.037-0.03c-0.005-0.003-0.01-0.008-0.015-0.012l-9.161-6.096 c-0.289-0.192-0.666-0.192-0.955,0L2.359,8.237C2.354,8.24,2.349,8.245,2.344,8.249L2.306,8.277 c-0.017,0.013-0.033,0.027-0.048,0.04C2.246,8.331,2.234,8.342,2.222,8.352c-0.015,0.015-0.028,0.03-0.042,0.047 c-0.012,0.013-0.022,0.023-0.03,0.037C2.139,8.453,2.125,8.471,2.115,8.488C2.107,8.501,2.099,8.514,2.09,8.526 C2.079,8.548,2.069,8.565,2.06,8.585C2.054,8.6,2.047,8.613,2.04,8.626C2.032,8.648,2.025,8.67,2.019,8.69 c-0.005,0.013-0.01,0.027-0.013,0.042C1.999,8.755,1.995,8.778,1.99,8.803C1.989,8.817,1.985,8.828,1.984,8.84 C1.978,8.879,1.975,8.915,1.975,8.954v6.093c0,0.037,0.003,0.075,0.008,0.112c0.002,0.012,0.005,0.025,0.007,0.038 c0.005,0.023,0.008,0.047,0.015,0.072c0.003,0.015,0.008,0.028,0.013,0.04c0.007,0.022,0.013,0.042,0.022,0.063 c0.007,0.015,0.013,0.028,0.02,0.04c0.008,0.02,0.018,0.038,0.03,0.058c0.007,0.013,0.015,0.027,0.025,0.038 c0.012,0.018,0.023,0.035,0.035,0.052c0.01,0.013,0.02,0.025,0.03,0.037c0.013,0.015,0.028,0.032,0.042,0.045 c0.012,0.012,0.023,0.023,0.035,0.035c0.015,0.013,0.032,0.028,0.048,0.04l0.038,0.03c0.005,0.003,0.01,0.007,0.013,0.01 l9.163,6.095C11.668,21.953,11.833,22,12,22c0.167,0,0.332-0.047,0.478-0.144l9.163-6.095l0.015-0.01 c0.013-0.01,0.027-0.02,0.037-0.03c0.018-0.013,0.035-0.028,0.048-0.04c0.013-0.012,0.025-0.023,0.035-0.035 c0.017-0.015,0.03-0.032,0.043-0.045c0.01-0.013,0.02-0.025,0.03-0.037c0.013-0.018,0.025-0.035,0.035-0.052 c0.008-0.013,0.018-0.027,0.025-0.038c0.012-0.02,0.022-0.038,0.03-0.058c0.007-0.013,0.013-0.027,0.02-0.04 c0.008-0.022,0.015-0.042,0.023-0.063c0.003-0.013,0.01-0.027,0.013-0.04c0.007-0.025,0.01-0.048,0.015-0.072 c0.002-0.013,0.005-0.027,0.007-0.037c0.003-0.042,0.007-0.079,0.007-0.117V8.954C22.025,8.915,22.022,8.879,22.016,8.84z M12.862,4.464l6.751,4.49l-3.016,2.013l-3.735-2.492V4.464z M11.138,4.464v4.009l-3.735,2.494L4.389,8.954L11.138,4.464z M3.699,10.562L5.853,12l-2.155,1.438V10.562z M11.138,19.536l-6.749-4.491l3.015-2.011l3.735,2.492V19.536z M12,14.035L8.953,12 L12,9.966L15.047,12L12,14.035z M12.862,19.536v-4.009l3.735-2.492l3.016,2.011L12.862,19.536z M20.303,13.438L18.147,12 l2.156-1.438L20.303,13.438z"/>
</symbol>
<symbol id="icon-deviantart" viewBox="0 0 24 24">
<path d="M 18.19 5.636 18.19 2 18.188 2 14.553 2 14.19 2.366 12.474 5.636 11.935 6 5.81 6 5.81 10.994 9.177 10.994 9.477 11.357 5.81 18.363 5.81 22 5.811 22 9.447 22 9.81 21.634 11.526 18.364 12.065 18 18.19 18 18.19 13.006 14.823 13.006 14.523 12.641 18.19 5.636z"/>
</symbol>
<symbol id="icon-digg" viewBox="0 0 24 24">
<path d="M4.5,5.4h2.2V16H1V8.5h3.5V5.4L4.5,5.4z M4.5,14.2v-4H3.2v4H4.5z M7.6,8.5V16h2.2V8.5C9.8,8.5,7.6,8.5,7.6,8.5z M7.6,5.4 v2.2h2.2V5.4C9.8,5.4,7.6,5.4,7.6,5.4z M10.7,8.5h5.7v10.1h-5.7v-1.8h3.5V16h-3.5C10.7,16,10.7,8.5,10.7,8.5z M14.2,14.2v-4h-1.3v4 H14.2z M17.3,8.5H23v10.1h-5.7v-1.8h3.5V16h-3.5C17.3,16,17.3,8.5,17.3,8.5z M20.8,14.2v-4h-1.3v4H20.8z"/>
</symbol>
<symbol id="icon-discord" viewBox="0 0 24 24">
<path d="M10.227 9.957c-.559 0-1 .48-1 1.063 0 .585.453 1.066 1 1.066.558 0 1-.48 1-1.066.007-.582-.442-1.063-1-1.063zm3.574 0c-.559 0-.996.48-.996 1.063 0 .585.449 1.066.996 1.066.558 0 1-.48 1-1.066 0-.582-.442-1.063-1-1.063zm0 0 M18.563 1.918H5.438c-1.11 0-2.008.879-2.008 1.973v12.957c0 1.093.898 1.972 2.007 1.972h11.11l-.52-1.773 1.254 1.14 1.184 1.075 2.105 1.82V3.891c0-1.094-.898-1.973-2.008-1.973zM14.78 14.434s-.351-.414-.644-.778c1.281-.355 1.773-1.14 1.773-1.14a5.745 5.745 0 0 1-1.129.566c-.488.2-.96.336-1.418.41a7.07 7.07 0 0 1-2.539-.008 8.133 8.133 0 0 1-1.441-.414 6.219 6.219 0 0 1-.715-.324c-.027-.02-.059-.027-.086-.047a.113.113 0 0 1-.039-.031c-.176-.094-.273-.16-.273-.16s.468.765 1.71 1.129c-.293.363-.656.797-.656.797-2.164-.067-2.984-1.457-2.984-1.457 0-3.086 1.41-5.586 1.41-5.586 1.41-1.036 2.75-1.008 2.75-1.008l.098.113c-1.762.5-2.575 1.258-2.575 1.258s.215-.117.579-.277c1.046-.454 1.878-.579 2.222-.606.059-.008.11-.02.168-.02a8.728 8.728 0 0 1 1.977-.019c.933.106 1.93.375 2.949.922 0 0-.773-.719-2.438-1.219l.137-.152s1.34-.028 2.75 1.008c0 0 1.414 2.5 1.414 5.586 0 0-.836 1.39-3 1.457zm0 0"/>
</symbol>
<symbol id="icon-dribbble" viewBox="0 0 24 24">
<path d="M12,22C6.486,22,2,17.514,2,12S6.486,2,12,2c5.514,0,10,4.486,10,10S17.514,22,12,22z M20.434,13.369 c-0.292-0.092-2.644-0.794-5.32-0.365c1.117,3.07,1.572,5.57,1.659,6.09C18.689,17.798,20.053,15.745,20.434,13.369z M15.336,19.876c-0.127-0.749-0.623-3.361-1.822-6.477c-0.019,0.006-0.038,0.013-0.056,0.019c-4.818,1.679-6.547,5.02-6.701,5.334 c1.448,1.129,3.268,1.803,5.243,1.803C13.183,20.555,14.311,20.313,15.336,19.876z M5.654,17.724 c0.193-0.331,2.538-4.213,6.943-5.637c0.111-0.036,0.224-0.07,0.337-0.102c-0.214-0.485-0.448-0.971-0.692-1.45 c-4.266,1.277-8.405,1.223-8.778,1.216c-0.003,0.087-0.004,0.174-0.004,0.261C3.458,14.207,4.29,16.21,5.654,17.724z M3.639,10.264 c0.382,0.005,3.901,0.02,7.897-1.041c-1.415-2.516-2.942-4.631-3.167-4.94C5.979,5.41,4.193,7.613,3.639,10.264z M9.998,3.709 c0.236,0.316,1.787,2.429,3.187,5c3.037-1.138,4.323-2.867,4.477-3.085C16.154,4.286,14.17,3.471,12,3.471 C11.311,3.471,10.641,3.554,9.998,3.709z M18.612,6.612C18.432,6.855,17,8.69,13.842,9.979c0.199,0.407,0.389,0.821,0.567,1.237 c0.063,0.148,0.124,0.295,0.184,0.441c2.842-0.357,5.666,0.215,5.948,0.275C20.522,9.916,19.801,8.065,18.612,6.612z"/>
</symbol>
<symbol id="icon-dropbox" viewBox="0 0 24 24">
<path d="M12,6.134L6.069,9.797L2,6.54l5.883-3.843L12,6.134z M2,13.054l5.883,3.843L12,13.459L6.069,9.797L2,13.054z M12,13.459 l4.116,3.439L22,13.054l-4.069-3.257L12,13.459z M22,6.54l-5.884-3.843L12,6.134l5.931,3.663L22,6.54z M12.011,14.2l-4.129,3.426 l-1.767-1.153v1.291l5.896,3.539l5.897-3.539v-1.291l-1.769,1.153L12.011,14.2z"/>
</symbol>
<symbol id="icon-etsy" viewBox="0 0 24 24">
<path d="M9.16033,4.038c0-.27174.02717-.43478.48913-.43478h6.22283c1.087,0,1.68478.92391,2.11957,2.663l.35326,1.38587h1.05978C19.59511,3.712,19.75815,2,19.75815,2s-2.663.29891-4.23913.29891h-7.962L3.29076,2.163v1.1413L4.731,3.57609c1.00543.19022,1.25.40761,1.33152,1.33152,0,0,.08152,2.71739.08152,7.20109s-.08152,7.17391-.08152,7.17391c0,.81522-.32609,1.11413-1.33152,1.30435l-1.44022.27174V22l4.2663-.13587h7.11957c1.60326,0,5.32609.13587,5.32609.13587.08152-.97826.625-5.40761.70652-5.89674H19.7038L18.644,18.52174c-.84239,1.90217-2.06522,2.038-3.42391,2.038H11.1712c-1.3587,0-2.01087-.54348-2.01087-1.712V12.65217s3.0163,0,3.99457.08152c.76087.05435,1.22283.27174,1.46739,1.33152l.32609,1.413h1.16848l-.08152-3.55978.163-3.587H15.02989l-.38043,1.57609c-.24457,1.03261-.40761,1.22283-1.46739,1.33152-1.38587.13587-4.02174.1087-4.02174.1087Z"/>
</symbol>
<symbol id="icon-eventbrite" viewBox="0 0 24 24">
<path style="fill-rule:evenodd;clip-rule:evenodd;" d="M18.041,3.931L5.959,3C4.325,3,3,4.325,3,5.959v12.083C3,19.675,4.325,21,5.959,21l12.083-0.931C19.699,19.983,21,18.744,21,17.11V6.89C21,5.256,19.741,4.027,18.041,3.931zM16.933,8.17c-0.082,0.215-0.192,0.432-0.378,0.551c-0.188,0.122-0.489,0.132-0.799,0.132c-1.521,0-3.062-0.048-4.607-0.048c-0.152,0.708-0.304,1.416-0.451,2.128c0.932-0.004,1.873,0.005,2.81,0.005c0.726,0,1.462-0.069,1.586,0.525c0.04,0.189-0.001,0.426-0.052,0.615c-0.105,0.38-0.258,0.676-0.625,0.783c-0.185,0.054-0.408,0.058-0.646,0.058c-1.145,0-2.345,0.017-3.493,0.02c-0.169,0.772-0.328,1.553-0.489,2.333c1.57-0.005,3.067-0.041,4.633-0.058c0.627-0.007,1.085,0.194,1.009,0.85c-0.031,0.262-0.098,0.497-0.211,0.725c-0.102,0.208-0.248,0.376-0.488,0.452c-0.237,0.075-0.541,0.064-0.862,0.078c-0.304,0.014-0.614,0.008-0.924,0.016c-0.309,0.009-0.619,0.022-0.919,0.022c-1.253,0-2.429,0.08-3.683,0.073c-0.603-0.004-1.014-0.249-1.124-0.757c-0.059-0.273-0.018-0.58,0.036-0.841c0.541-2.592,1.083-5.176,1.629-7.763c0.056-0.265,0.114-0.511,0.225-0.714C9.279,7.051,9.534,6.834,9.9,6.735c0.368-0.099,0.883-0.047,1.344-0.047c0.305,0,0.612,0.008,0.914,0.016c0.925,0.026,1.817,0.03,2.747,0.053c0.304,0.007,0.615,0.016,0.915,0.016c0.621,0,1.17,0.073,1.245,0.614C17.104,7.675,17.014,7.954,16.933,8.17z"/>
</symbol>
<symbol id="icon-facebook" viewBox="0 0 24 24">
<path d="M12,2C6.5,2,2,6.5,2,12c0,5,3.7,9.1,8.4,9.9v-7H7.9V12h2.5V9.8c0-2.5,1.5-3.9,3.8-3.9c1.1,0,2.2,0.2,2.2,0.2v2.5h-1.3 c-1.2,0-1.6,0.8-1.6,1.6V12h2.8l-0.4,2.9h-2.3v7C18.3,21.1,22,17,22,12C22,6.5,17.5,2,12,2z"/>
</symbol>
<symbol id="icon-feed" viewBox="0 0 24 24">
<path d="M2,8.667V12c5.515,0,10,4.485,10,10h3.333C15.333,14.637,9.363,8.667,2,8.667z M2,2v3.333 c9.19,0,16.667,7.477,16.667,16.667H22C22,10.955,13.045,2,2,2z M4.5,17C3.118,17,2,18.12,2,19.5S3.118,22,4.5,22S7,20.88,7,19.5 S5.882,17,4.5,17z"/>
</symbol>
<symbol id="icon-flickr" viewBox="0 0 24 24">
<path d="M6.5,7c-2.75,0-5,2.25-5,5s2.25,5,5,5s5-2.25,5-5S9.25,7,6.5,7z M17.5,7c-2.75,0-5,2.25-5,5s2.25,5,5,5s5-2.25,5-5 S20.25,7,17.5,7z"/>
</symbol>
<symbol id="icon-foursquare" viewBox="0 0 24 24">
<path d="M17.573,2c0,0-9.197,0-10.668,0S5,3.107,5,3.805s0,16.948,0,16.948c0,0.785,0.422,1.077,0.66,1.172 c0.238,0.097,0.892,0.177,1.285-0.275c0,0,5.035-5.843,5.122-5.93c0.132-0.132,0.132-0.132,0.262-0.132h3.26 c1.368,0,1.588-0.977,1.732-1.552c0.078-0.318,0.692-3.428,1.225-6.122l0.675-3.368C19.56,2.893,19.14,2,17.573,2z M16.495,7.22 c-0.053,0.252-0.372,0.518-0.665,0.518c-0.293,0-4.157,0-4.157,0c-0.467,0-0.802,0.318-0.802,0.787v0.508 c0,0.467,0.337,0.798,0.805,0.798c0,0,3.197,0,3.528,0s0.655,0.362,0.583,0.715c-0.072,0.353-0.407,2.102-0.448,2.295 c-0.04,0.193-0.262,0.523-0.655,0.523c-0.33,0-2.88,0-2.88,0c-0.523,0-0.683,0.068-1.033,0.503 c-0.35,0.437-3.505,4.223-3.505,4.223c-0.032,0.035-0.063,0.027-0.063-0.015V4.852c0-0.298,0.26-0.648,0.648-0.648 c0,0,8.228,0,8.562,0c0.315,0,0.61,0.297,0.528,0.683L16.495,7.22z"/>
</symbol>
<symbol id="icon-ghost" viewBox="0 0 24 24">
<path d="M10.203,20.997H3.005v-3.599h7.198V20.997z M20.995,17.398h-7.193v3.599h7.193V17.398z M20.998,10.2H3v3.599h17.998V10.2zM13.803,3.003H3.005v3.599h10.798V3.003z M21,3.003h-3.599v3.599H21V3.003z"/>
</symbol>
<symbol id="icon-goodreads" viewBox="0 0 24 24">
<path d="M17.3,17.5c-0.2,0.8-0.5,1.4-1,1.9c-0.4,0.5-1,0.9-1.7,1.2C13.9,20.9,13.1,21,12,21c-0.6,0-1.3-0.1-1.9-0.2 c-0.6-0.1-1.1-0.4-1.6-0.7c-0.5-0.3-0.9-0.7-1.2-1.2c-0.3-0.5-0.5-1.1-0.5-1.7h1.5c0.1,0.5,0.2,0.9,0.5,1.2 c0.2,0.3,0.5,0.6,0.9,0.8c0.3,0.2,0.7,0.3,1.1,0.4c0.4,0.1,0.8,0.1,1.2,0.1c1.4,0,2.5-0.4,3.1-1.2c0.6-0.8,1-2,1-3.5v-1.7h0 c-0.4,0.8-0.9,1.4-1.6,1.9c-0.7,0.5-1.5,0.7-2.4,0.7c-1,0-1.9-0.2-2.6-0.5C8.7,15,8.1,14.5,7.7,14c-0.5-0.6-0.8-1.3-1-2.1 c-0.2-0.8-0.3-1.6-0.3-2.5c0-0.9,0.1-1.7,0.4-2.5c0.3-0.8,0.6-1.5,1.1-2c0.5-0.6,1.1-1,1.8-1.4C10.3,3.2,11.1,3,12,3 c0.5,0,0.9,0.1,1.3,0.2c0.4,0.1,0.8,0.3,1.1,0.5c0.3,0.2,0.6,0.5,0.9,0.8c0.3,0.3,0.5,0.6,0.6,1h0V3.4h1.5V15 C17.6,15.9,17.5,16.7,17.3,17.5z M13.8,14.1c0.5-0.3,0.9-0.7,1.3-1.1c0.3-0.5,0.6-1,0.8-1.6c0.2-0.6,0.3-1.2,0.3-1.9 c0-0.6-0.1-1.2-0.2-1.9c-0.1-0.6-0.4-1.2-0.7-1.7c-0.3-0.5-0.7-0.9-1.3-1.2c-0.5-0.3-1.1-0.5-1.9-0.5s-1.4,0.2-1.9,0.5 c-0.5,0.3-1,0.7-1.3,1.2C8.5,6.4,8.3,7,8.1,7.6C8,8.2,7.9,8.9,7.9,9.5c0,0.6,0.1,1.3,0.2,1.9C8.3,12,8.6,12.5,8.9,13 c0.3,0.5,0.8,0.8,1.3,1.1c0.5,0.3,1.1,0.4,1.9,0.4C12.7,14.5,13.3,14.4,13.8,14.1z"/>
</symbol>
<symbol id="icon-google" viewBox="0 0 24 24">
<path d="M12.02,10.18v3.72v0.01h5.51c-0.26,1.57-1.67,4.22-5.5,4.22c-3.31,0-6.01-2.75-6.01-6.12s2.7-6.12,6.01-6.12 c1.87,0,3.13,0.8,3.85,1.48l2.84-2.76C16.99,2.99,14.73,2,12.03,2c-5.52,0-10,4.48-10,10s4.48,10,10,10c5.77,0,9.6-4.06,9.6-9.77 c0-0.83-0.11-1.42-0.25-2.05H12.02z"/>
</symbol>
<symbol id="icon-github" viewBox="0 0 24 24">
<path d="M12,2C6.477,2,2,6.477,2,12c0,4.419,2.865,8.166,6.839,9.489c0.5,0.09,0.682-0.218,0.682-0.484 c0-0.236-0.009-0.866-0.014-1.699c-2.782,0.602-3.369-1.34-3.369-1.34c-0.455-1.157-1.11-1.465-1.11-1.465 c-0.909-0.62,0.069-0.608,0.069-0.608c1.004,0.071,1.532,1.03,1.532,1.03c0.891,1.529,2.341,1.089,2.91,0.833
c0.091-0.647,0.349-1.086,0.635-1.337c-2.22-0.251-4.555-1.111-4.555-4.943c0-1.091,0.39-1.984,1.03-2.682 C6.546,8.54,6.202,7.524,6.746,6.148c0,0,0.84-0.269,2.75,1.025C10.295,6.95,11.15,6.84,12,6.836 c0.85,0.004,1.705,0.114,2.504,0.336c1.909-1.294,2.748-1.025,2.748-1.025c0.546,1.376,0.202,2.394,0.1,2.646 c0.64,0.699,1.026,1.591,1.026,2.682c0,3.841-2.337,4.687-4.565,4.935c0.359,0.307,0.679,0.917,0.679,1.852 c0,1.335-0.012,2.415-0.012,2.741c0,0.269,0.18,0.579,0.688,0.481C19.138,20.161,22,16.416,22,12C22,6.477,17.523,2,12,2z"/>
</symbol>
<symbol id="icon-instagram" viewBox="0 0 24 24">
<path d="M12,4.622c2.403,0,2.688,0.009,3.637,0.052c0.877,0.04,1.354,0.187,1.671,0.31c0.42,0.163,0.72,0.358,1.035,0.673 c0.315,0.315,0.51,0.615,0.673,1.035c0.123,0.317,0.27,0.794,0.31,1.671c0.043,0.949,0.052,1.234,0.052,3.637 s-0.009,2.688-0.052,3.637c-0.04,0.877-0.187,1.354-0.31,1.671c-0.163,0.42-0.358,0.72-0.673,1.035 c-0.315,0.315-0.615,0.51-1.035,0.673c-0.317,0.123-0.794,0.27-1.671,0.31c-0.949,0.043-1.233,0.052-3.637,0.052 s-2.688-0.009-3.637-0.052c-0.877-0.04-1.354-0.187-1.671-0.31c-0.42-0.163-0.72-0.358-1.035-0.673 c-0.315-0.315-0.51-0.615-0.673-1.035c-0.123-0.317-0.27-0.794-0.31-1.671C4.631,14.688,4.622,14.403,4.622,12 s0.009-2.688,0.052-3.637c0.04-0.877,0.187-1.354,0.31-1.671c0.163-0.42,0.358-0.72,0.673-1.035 c0.315-0.315,0.615-0.51,1.035-0.673c0.317-0.123,0.794-0.27,1.671-0.31C9.312,4.631,9.597,4.622,12,4.622 M12,3 C9.556,3,9.249,3.01,8.289,3.054C7.331,3.098,6.677,3.25,6.105,3.472C5.513,3.702,5.011,4.01,4.511,4.511 c-0.5,0.5-0.808,1.002-1.038,1.594C3.25,6.677,3.098,7.331,3.054,8.289C3.01,9.249,3,9.556,3,12c0,2.444,0.01,2.751,0.054,3.711 c0.044,0.958,0.196,1.612,0.418,2.185c0.23,0.592,0.538,1.094,1.038,1.594c0.5,0.5,1.002,0.808,1.594,1.038 c0.572,0.222,1.227,0.375,2.185,0.418C9.249,20.99,9.556,21,12,21s2.751-0.01,3.711-0.054c0.958-0.044,1.612-0.196,2.185-0.418 c0.592-0.23,1.094-0.538,1.594-1.038c0.5-0.5,0.808-1.002,1.038-1.594c0.222-0.572,0.375-1.227,0.418-2.185 C20.99,14.751,21,14.444,21,12s-0.01-2.751-0.054-3.711c-0.044-0.958-0.196-1.612-0.418-2.185c-0.23-0.592-0.538-1.094-1.038-1.594 c-0.5-0.5-1.002-0.808-1.594-1.038c-0.572-0.222-1.227-0.375-2.185-0.418C14.751,3.01,14.444,3,12,3L12,3z M12,7.378 c-2.552,0-4.622,2.069-4.622,4.622S9.448,16.622,12,16.622s4.622-2.069,4.622-4.622S14.552,7.378,12,7.378z M12,15 c-1.657,0-3-1.343-3-3s1.343-3,3-3s3,1.343,3,3S13.657,15,12,15z M16.804,6.116c-0.596,0-1.08,0.484-1.08,1.08 s0.484,1.08,1.08,1.08c0.596,0,1.08-0.484,1.08-1.08S17.401,6.116,16.804,6.116z"/>
</symbol>
<symbol id="icon-linkedin" viewBox="0 0 24 24">
<path d="M19.7,3H4.3C3.582,3,3,3.582,3,4.3v15.4C3,20.418,3.582,21,4.3,21h15.4c0.718,0,1.3-0.582,1.3-1.3V4.3 C21,3.582,20.418,3,19.7,3z M8.339,18.338H5.667v-8.59h2.672V18.338z M7.004,8.574c-0.857,0-1.549-0.694-1.549-1.548 c0-0.855,0.691-1.548,1.549-1.548c0.854,0,1.547,0.694,1.547,1.548C8.551,7.881,7.858,8.574,7.004,8.574z M18.339,18.338h-2.669 v-4.177c0-0.996-0.017-2.278-1.387-2.278c-1.389,0-1.601,1.086-1.601,2.206v4.249h-2.667v-8.59h2.559v1.174h0.037 c0.356-0.675,1.227-1.387,2.526-1.387c2.703,0,3.203,1.779,3.203,4.092V18.338z"/>
</symbol>
<symbol id="icon-mail" viewBox="0 0 24 24">
<path d="M20,4H4C2.895,4,2,4.895,2,6v12c0,1.105,0.895,2,2,2h16c1.105,0,2-0.895,2-2V6C22,4.895,21.105,4,20,4z M20,8.236l-8,4.882 L4,8.236V6h16V8.236z"/>
</symbol>
<symbol id="icon-meetup" viewBox="0 0 24 24">
<path d="M19.24775,14.722a3.57032,3.57032,0,0,1-2.94457,3.52073,3.61886,3.61886,0,0,1-.64652.05634c-.07314-.0008-.10187.02846-.12507.09547A2.38881,2.38881,0,0,1,13.49453,20.094a2.33092,2.33092,0,0,1-1.827-.50716.13635.13635,0,0,0-.19878-.00408,3.191,3.191,0,0,1-2.104.60248,3.26309,3.26309,0,0,1-3.00324-2.71993,2.19076,2.19076,0,0,1-.03512-.30865c-.00156-.08579-.03413-.1189-.11608-.13493a2.86421,2.86421,0,0,1-1.23189-.56111,2.945,2.945,0,0,1-1.166-2.05749,2.97484,2.97484,0,0,1,.87524-2.50774.112.112,0,0,0,.02091-.16107,2.7213,2.7213,0,0,1-.36648-1.48A2.81256,2.81256,0,0,1,6.57673,7.58838a.35764.35764,0,0,0,.28869-.22819,4.2208,4.2208,0,0,1,6.02892-1.90111.25161.25161,0,0,0,.22023.0243,3.65608,3.65608,0,0,1,3.76031.90678A3.57244,3.57244,0,0,1,17.95918,8.626a2.97339,2.97339,0,0,1,.01829.57356.10637.10637,0,0,0,.0853.12792,1.97669,1.97669,0,0,1,1.27939,1.33733,2.00266,2.00266,0,0,1-.57112,2.12652c-.05284.05166-.04168.08328-.01173.13489A3.51189,3.51189,0,0,1,19.24775,14.722Zm-6.35959-.27836a1.6984,1.6984,0,0,0,1.14556,1.61113,3.82039,3.82039,0,0,0,1.036.17935,1.46888,1.46888,0,0,0,.73509-.12255.44082.44082,0,0,0,.26057-.44274.45312.45312,0,0,0-.29211-.43375.97191.97191,0,0,0-.20678-.063c-.21326-.03806-.42754-.0701-.63973-.11215a.54787.54787,0,0,1-.50172-.60926,2.75864,2.75864,0,0,1,.1773-.901c.1763-.535.414-1.045.64183-1.55913A12.686,12.686,0,0,0,15.85,10.47863a1.58461,1.58461,0,0,0,.04861-.87208,1.04531,1.04531,0,0,0-.85432-.83981,1.60658,1.60658,0,0,0-1.23654.16594.27593.27593,0,0,1-.36286-.03413c-.085-.0747-.16594-.15379-.24918-.23055a.98682.98682,0,0,0-1.33577-.04933,6.1468,6.1468,0,0,1-.4989.41615.47762.47762,0,0,1-.51535.03566c-.17448-.09307-.35512-.175-.53531-.25665a1.74949,1.74949,0,0,0-.56476-.2016,1.69943,1.69943,0,0,0-1.61654.91787,8.05815,8.05815,0,0,0-.32952.80126c-.45471,1.2557-.82507,2.53825-1.20838,3.81639a1.24151,1.24151,0,0,0,.51532,1.44389,1.42659,1.42659,0,0,0,1.22008.17166,1.09728,1.09728,0,0,0,.66994-.69764c.44145-1.04111.839-2.09989,1.25981-3.14926.11581-.28876.22792-.57874.35078-.86438a.44548.44548,0,0,1,.69189-.19539.50521.50521,0,0,1,.15044.43836,1.75625,1.75625,0,0,1-.14731.50453c-.27379.69219-.55265,1.38236-.82766,2.074a2.0836,2.0836,0,0,0-.14038.42876.50719.50719,0,0,0,.27082.57722.87236.87236,0,0,0,.66145.02739.99137.99137,0,0,0,.53406-.532q.61571-1.20914,1.228-2.42031.28423-.55863.57585-1.1133a.87189.87189,0,0,1,.29055-.35253.34987.34987,0,0,1,.37634-.01265.30291.30291,0,0,1,.12434.31459.56716.56716,0,0,1-.04655.1915c-.05318.12739-.10286.25669-.16183.38156-.34118.71775-.68754,1.43273-1.02568,2.152A2.00213,2.00213,0,0,0,12.88816,14.44366Zm4.78568,5.28972a.88573.88573,0,0,0-1.77139.00465.8857.8857,0,0,0,1.77139-.00465Zm-14.83838-7.296a.84329.84329,0,1,0,.00827-1.68655.8433.8433,0,0,0-.00827,1.68655Zm10.366-9.43673a.83506.83506,0,1,0-.0091,1.67.83505.83505,0,0,0,.0091-1.67Zm6.85014,5.22a.71651.71651,0,0,0-1.433.0093.71656.71656,0,0,0,1.433-.0093ZM5.37528,6.17908A.63823.63823,0,1,0,6.015,5.54483.62292.62292,0,0,0,5.37528,6.17908Zm6.68214,14.80843a.54949.54949,0,1,0-.55052.541A.54556.54556,0,0,0,12.05742,20.98752Zm8.53235-8.49689a.54777.54777,0,0,0-.54027.54023.53327.53327,0,0,0,.532.52293.51548.51548,0,0,0,.53272-.5237A.53187.53187,0,0,0,20.58977,12.49063ZM7.82846,2.4715a.44927.44927,0,1,0,.44484.44766A.43821.43821,0,0,0,7.82846,2.4715Zm13.775,7.60492a.41186.41186,0,0,0-.40065.39623.40178.40178,0,0,0,.40168.40168A.38994.38994,0,0,0,22,10.48172.39946.39946,0,0,0,21.60349,10.07642ZM5.79193,17.96207a.40469.40469,0,0,0-.397-.39646.399.399,0,0,0-.396.405.39234.39234,0,0,0,.39939.389A.39857.39857,0,0,0,5.79193,17.96207Z"/>
</symbol>
<symbol id="icon-medium" viewBox="0 0 24 24">
<path d="M5.727 8.027a.623.623 0 0 0-.204-.527L4.02 5.687v-.273H8.69l3.614 7.926 3.175-7.926h4.457v.274l-1.285 1.234a.367.367 0 0 0-.144.36v9.066a.374.374 0 0 0 .144.363l1.258 1.234v.27h-6.324v-.27l1.3-1.265c.13-.13.13-.164.13-.36V8.988l-3.621 9.196h-.489L6.691 8.988v6.164c-.035.258.051.52.235.707l1.691 2.055v.27h-4.8v-.27l1.69-2.055a.814.814 0 0 0 .22-.707zm0 0"/>
</symbol>
<symbol id="icon-patreon" viewBox="0 0 24 24">
<path d="M13.975 5a5.05 5.05 0 00-5.041 5.046c0 2.774 2.261 5.03 5.04 5.03A5.034 5.034 0 0019 10.047C19 7.264 16.746 5 13.975 5zM5 18.44h2.461V5H5v13.44z"/>
</symbol>
<symbol id="icon-pinterest" viewBox="0 0 24 24">
<path d="M12.289,2C6.617,2,3.606,5.648,3.606,9.622c0,1.846,1.025,4.146,2.666,4.878c0.25,0.111,0.381,0.063,0.439-0.169 c0.044-0.175,0.267-1.029,0.365-1.428c0.032-0.128,0.017-0.237-0.091-0.362C6.445,11.911,6.01,10.75,6.01,9.668 c0-2.777,2.194-5.464,5.933-5.464c3.23,0,5.49,2.108,5.49,5.122c0,3.407-1.794,5.768-4.13,5.768c-1.291,0-2.257-1.021-1.948-2.277 c0.372-1.495,1.089-3.112,1.089-4.191c0-0.967-0.542-1.775-1.663-1.775c-1.319,0-2.379,1.309-2.379,3.059 c0,1.115,0.394,1.869,0.394,1.869s-1.302,5.279-1.54,6.261c-0.405,1.666,0.053,4.368,0.094,4.604 c0.021,0.126,0.167,0.169,0.25,0.063c0.129-0.165,1.699-2.419,2.142-4.051c0.158-0.59,0.817-2.995,0.817-2.995 c0.43,0.784,1.681,1.446,3.013,1.446c3.963,0,6.822-3.494,6.822-7.833C20.394,5.112,16.849,2,12.289,2"/>
</symbol>
<symbol id="icon-pocket" viewBox="0 0 24 24">
<path d="M21.927,4.194C21.667,3.48,20.982,3,20.222,3h-0.01h-1.721H3.839C3.092,3,2.411,3.47,2.145,4.17 C2.066,4.378,2.026,4.594,2.026,4.814v6.035l0.069,1.2c0.29,2.73,1.707,5.115,3.899,6.778c0.039,0.03,0.079,0.059,0.119,0.089 l0.025,0.018c1.175,0.859,2.491,1.441,3.91,1.727c0.655,0.132,1.325,0.2,1.991,0.2c0.615,0,1.232-0.057,1.839-0.17 c0.073-0.014,0.145-0.028,0.219-0.044c0.02-0.004,0.042-0.012,0.064-0.023c1.359-0.297,2.621-0.864,3.753-1.691l0.025-0.018 c0.04-0.029,0.08-0.058,0.119-0.089c2.192-1.664,3.609-4.049,3.898-6.778l0.069-1.2V4.814C22.026,4.605,22,4.398,21.927,4.194z M17.692,10.481l-4.704,4.512c-0.266,0.254-0.608,0.382-0.949,0.382c-0.342,0-0.684-0.128-0.949-0.382l-4.705-4.512 C5.838,9.957,5.82,9.089,6.344,8.542c0.524-0.547,1.392-0.565,1.939-0.04l3.756,3.601l3.755-3.601 c0.547-0.524,1.415-0.506,1.939,0.04C18.256,9.089,18.238,9.956,17.692,10.481z"/>
</symbol>
<symbol id="icon-ravelry" viewBox="0 0 23 20">
<path d="M12.098 19.34a.25.25 0 01-.118-.043 13.986 13.986 0 01-.394-.258c-.164-.11-.477-.352-.934-.723-.46-.375-.882-.761-1.27-1.168-.39-.406-.796-.925-1.218-1.562a8.521 8.521 0 01-.976-1.926c-.125-.023-.758-.16-1.907-.414A8.785 8.785 0 007.84 17.29a8.152 8.152 0 004.258 2.05zm-6.98-6.762l1.831.313A13.424 13.424 0 016.5 11.02a16.216 16.216 0 01-.207-1.622l-.043-.593c-.61.61-1.047 1.445-1.316 2.5.035.484.097.91.183 1.273zm1.198-6.797a9.064 9.064 0 00-.84 1.653c.32-.344.59-.598.81-.758zm15.649 4.844a8.8 8.8 0 00-.676-3.426 8.85 8.85 0 00-1.824-2.812 8.614 8.614 0 00-2.727-1.883 8.115 8.115 0 00-3.312-.695 8.131 8.131 0 00-3.059.586A8.412 8.412 0 007.754 4.05c-.219.433-.383 1.027-.488 1.785a5.407 5.407 0 011.554-.93 7.481 7.481 0 011.727-.48 16.642 16.642 0 011.558-.153c.489-.02.883-.015 1.18.012l.438.035c.238.008.43.063.574.172a.66.66 0 01.27.367c.03.141.054.278.07.414a.8.8 0 01-.012.317 12.781 12.781 0 00-2.477-.004 7.093 7.093 0 00-1.992.484 9.6 9.6 0 00-1.554.801A12.46 12.46 0 007.176 7.97c.031.27.07.613.125 1.031.054.422.183 1.082.386 1.988.204.903.43 1.57.676 2.004.895.043 1.793-.012 2.696-.164.902-.152 1.683-.351 2.336-.598a20.681 20.681 0 001.77-.746c.526-.254.925-.472 1.19-.66l.407-.265c.156-.121.3-.196.43-.23a.367.367 0 01.331.058c.094.07.157.199.184.383.102.722-.039 1.171-.426 1.351-1.508.723-3.203 1.219-5.086 1.496-.976.149-2.129.207-3.449.176a7.673 7.673 0 001.195 1.973c.504.597 1 1.07 1.493 1.418.496.343.968.636 1.421.878.454.243.825.407 1.106.489l.426.133c1.039.171 1.992.113 2.863-.168 1.414-.739 2.555-1.813 3.418-3.227.867-1.414 1.297-2.969 1.297-4.664zm.805-.414c-.102 1.004-.247 1.793-.434 2.367-.508 1.547-1.168 2.836-1.977 3.867-.808 1.032-1.964 1.973-3.468 2.828-.348.247-.645.41-.895.493-.52.195-1.113.254-1.773.18-.262.019-.528.03-.797.03-2.055 0-3.883-.64-5.492-1.93-1.61-1.288-2.68-2.929-3.22-4.933-.007 0-.019 0-.042-.004-.024-.004-.04-.007-.055-.007-.043.375-.035.793.028 1.257.062.465.156.891.285 1.282.125.39.254.757.39 1.093.133.34.25.606.344.801l.152.29c.059.09.254.394.586.913a4.327 4.327 0 01-1.355-1.187 5.669 5.669 0 01-.856-1.563 14.087 14.087 0 01-.43-1.531 9.012 9.012 0 01-.19-1.2l-.02-.468c-.035-.016-.16-.059-.367-.137-.207-.078-.383-.148-.528-.203-.144-.054-.336-.133-.578-.226a9.221 9.221 0 01-.625-.282c-.176-.09-.36-.183-.543-.285-.187-.097-.34-.199-.465-.3a1.27 1.27 0 01-.27-.286c.138.075.321.172.548.285.23.118.64.286 1.23.508.594.223 1.121.364 1.586.426l.023-.36c.079-1.109.418-2.187 1.024-3.234A9.226 9.226 0 016.5 4.621c.203-.855.5-1.652.883-2.39.11-.208.226-.376.347-.5.125-.13.305-.247.536-.36 1.148-.55 2.25-.937 3.304-1.16A9.935 9.935 0 0114.86.09c1.136.14 2.25.5 3.34 1.082 1.593.855 2.804 2.105 3.624 3.75.82 1.644 1.137 3.406.946 5.289zm0 0"/>
</symbol>
<symbol id="icon-reddit" viewBox="0 0 24 24">
<path d="M22,11.816c0-1.256-1.021-2.277-2.277-2.277c-0.593,0-1.122,0.24-1.526,0.614c-1.481-0.965-3.455-1.594-5.647-1.69 l1.171-3.702l3.18,0.748c0.008,1.028,0.846,1.862,1.876,1.862c1.035,0,1.877-0.842,1.877-1.878c0-1.035-0.842-1.877-1.877-1.877 c-0.769,0-1.431,0.466-1.72,1.13l-3.508-0.826c-0.203-0.047-0.399,0.067-0.46,0.261l-1.35,4.268 c-2.316,0.038-4.411,0.67-5.97,1.671C5.368,9.765,4.853,9.539,4.277,9.539C3.021,9.539,2,10.56,2,11.816 c0,0.814,0.433,1.523,1.078,1.925c-0.037,0.221-0.061,0.444-0.061,0.672c0,3.292,4.011,5.97,8.941,5.97s8.941-2.678,8.941-5.97 c0-0.214-0.02-0.424-0.053-0.632C21.533,13.39,22,12.661,22,11.816z M18.776,4.394c0.606,0,1.1,0.493,1.1,1.1s-0.493,1.1-1.1,1.1 s-1.1-0.494-1.1-1.1S18.169,4.394,18.776,4.394z M2.777,11.816c0-0.827,0.672-1.5,1.499-1.5c0.313,0,0.598,0.103,0.838,0.269 c-0.851,0.676-1.477,1.479-1.812,2.36C2.983,12.672,2.777,12.27,2.777,11.816z M11.959,19.606c-4.501,0-8.164-2.329-8.164-5.193 S7.457,9.22,11.959,9.22s8.164,2.329,8.164,5.193S16.46,19.606,11.959,19.606z M20.636,13.001c-0.326-0.89-0.948-1.701-1.797-2.384 c0.248-0.186,0.55-0.301,0.883-0.301c0.827,0,1.5,0.673,1.5,1.5C21.223,12.299,20.992,12.727,20.636,13.001z M8.996,14.704 c-0.76,0-1.397-0.616-1.397-1.376c0-0.76,0.637-1.397,1.397-1.397c0.76,0,1.376,0.637,1.376,1.397 C10.372,14.088,9.756,14.704,8.996,14.704z M16.401,13.328c0,0.76-0.616,1.376-1.376,1.376c-0.76,0-1.399-0.616-1.399-1.376 c0-0.76,0.639-1.397,1.399-1.397C15.785,11.931,16.401,12.568,16.401,13.328z M15.229,16.708c0.152,0.152,0.152,0.398,0,0.55 c-0.674,0.674-1.727,1.002-3.219,1.002c-0.004,0-0.007-0.002-0.011-0.002c-0.004,0-0.007,0.002-0.011,0.002 c-1.492,0-2.544-0.328-3.218-1.002c-0.152-0.152-0.152-0.398,0-0.55c0.152-0.152,0.399-0.151,0.55,0 c0.521,0.521,1.394,0.775,2.669,0.775c0.004,0,0.007,0.002,0.011,0.002c0.004,0,0.007-0.002,0.011-0.002 c1.275,0,2.148-0.253,2.669-0.775C14.831,16.556,15.078,16.556,15.229,16.708z"/>
</symbol>
<symbol id="icon-skype" viewBox="0 0 24 24">
<path d="M10.113,2.699c0.033-0.006,0.067-0.013,0.1-0.02c0.033,0.017,0.066,0.033,0.098,0.051L10.113,2.699z M2.72,10.223 c-0.006,0.034-0.011,0.069-0.017,0.103c0.018,0.032,0.033,0.064,0.051,0.095L2.72,10.223z M21.275,13.771 c0.007-0.035,0.011-0.071,0.018-0.106c-0.018-0.031-0.033-0.064-0.052-0.095L21.275,13.771z M13.563,21.199 c0.032,0.019,0.065,0.035,0.096,0.053c0.036-0.006,0.071-0.011,0.105-0.017L13.563,21.199z M22,16.386 c0,1.494-0.581,2.898-1.637,3.953c-1.056,1.057-2.459,1.637-3.953,1.637c-0.967,0-1.914-0.251-2.75-0.725 c0.036-0.006,0.071-0.011,0.105-0.017l-0.202-0.035c0.032,0.019,0.065,0.035,0.096,0.053c-0.543,0.096-1.099,0.147-1.654,0.147 c-1.275,0-2.512-0.25-3.676-0.743c-1.125-0.474-2.135-1.156-3.002-2.023c-0.867-0.867-1.548-1.877-2.023-3.002 c-0.493-1.164-0.743-2.401-0.743-3.676c0-0.546,0.049-1.093,0.142-1.628c0.018,0.032,0.033,0.064,0.051,0.095L2.72,10.223 c-0.006,0.034-0.011,0.069-0.017,0.103C2.244,9.5,2,8.566,2,7.615c0-1.493,0.582-2.898,1.637-3.953 c1.056-1.056,2.46-1.638,3.953-1.638c0.915,0,1.818,0.228,2.622,0.655c-0.033,0.007-0.067,0.013-0.1,0.02l0.199,0.031 c-0.032-0.018-0.066-0.034-0.098-0.051c0.002,0,0.003-0.001,0.004-0.001c0.586-0.112,1.187-0.169,1.788-0.169 c1.275,0,2.512,0.249,3.676,0.742c1.124,0.476,2.135,1.156,3.002,2.024c0.868,0.867,1.548,1.877,2.024,3.002 c0.493,1.164,0.743,2.401,0.743,3.676c0,0.575-0.054,1.15-0.157,1.712c-0.018-0.031-0.033-0.064-0.052-0.095l0.034,0.201 c0.007-0.035,0.011-0.071,0.018-0.106C21.754,14.494,22,15.432,22,16.386z M16.817,14.138c0-1.331-0.613-2.743-3.033-3.282 l-2.209-0.49c-0.84-0.192-1.807-0.444-1.807-1.237c0-0.794,0.679-1.348,1.903-1.348c2.468,0,2.243,1.696,3.468,1.696 c0.645,0,1.209-0.379,1.209-1.031c0-1.521-2.435-2.663-4.5-2.663c-2.242,0-4.63,0.952-4.63,3.488c0,1.221,0.436,2.521,2.839,3.123 l2.984,0.745c0.903,0.223,1.129,0.731,1.129,1.189c0,0.762-0.758,1.507-2.129,1.507c-2.679,0-2.307-2.062-3.743-2.062 c-0.645,0-1.113,0.444-1.113,1.078c0,1.236,1.501,2.886,4.856,2.886C15.236,17.737,16.817,16.199,16.817,14.138z"/>
</symbol>
<symbol id="icon-slideshare" viewBox="0 0 24 24">
<path d="M11.738,10.232a2.142,2.142,0,0,1-.721,1.619,2.556,2.556,0,0,1-3.464,0,2.183,2.183,0,0,1,0-3.243,2.572,2.572,0,0,1,3.464,0A2.136,2.136,0,0,1,11.738,10.232Zm5.7,0a2.15,2.15,0,0,1-.715,1.619,2.563,2.563,0,0,1-3.469,0,2.183,2.183,0,0,1,0-3.243,2.58,2.58,0,0,1,3.469,0A2.144,2.144,0,0,1,17.439,10.232Zm2.555,2.045V4.7a2.128,2.128,0,0,0-.363-1.4,1.614,1.614,0,0,0-1.261-.415H5.742a1.656,1.656,0,0,0-1.278.386A2.246,2.246,0,0,0,4.129,4.7v7.643a8.212,8.212,0,0,0,1,.454q.516.193.92.318a6.847,6.847,0,0,0,.92.21q.516.085.806.125a6.615,6.615,0,0,0,.795.045l.665.006q.16,0,.642-.023t.506-.023a1.438,1.438,0,0,1,1.079.307,1.134,1.134,0,0,0,.114.1,7.215,7.215,0,0,0,.693.579q.079-1.033,1.34-.988.057,0,.415.017l.488.023q.13.006.517.011t.6-.011l.619-.051a5.419,5.419,0,0,0,.693-.1l.7-.153a5.353,5.353,0,0,0,.761-.221q.345-.131.766-.307a8.727,8.727,0,0,0,.818-.392Zm1.851-.057a10.4,10.4,0,0,1-4.225,2.862,6.5,6.5,0,0,1-.261,5.281,3.524,3.524,0,0,1-2.078,1.681,2.452,2.452,0,0,1-2.067-.17,1.915,1.915,0,0,1-.931-1.863l-.011-3.7V16.3l-.279-.068q-.188-.045-.267-.057l-.011,3.839a1.9,1.9,0,0,1-.943,1.863,2.481,2.481,0,0,1-2.078.17,3.519,3.519,0,0,1-2.067-1.7,6.546,6.546,0,0,1-.25-5.258A10.4,10.4,0,0,1,2.152,12.22a.56.56,0,0,1-.045-.715q.238-.3.681.011l.125.079a.767.767,0,0,1,.125.091V3.8a1.987,1.987,0,0,1,.534-1.4,1.7,1.7,0,0,1,1.295-.579H19.141a1.7,1.7,0,0,1,1.295.579,1.985,1.985,0,0,1,.534,1.4v7.882l.238-.17q.443-.307.681-.011a.56.56,0,0,1-.045.715Z"/>
</symbol>
<symbol id="icon-snapchat" viewBox="0 0 24 24">
<path d="M12.065,2a5.526,5.526,0,0,1,3.132.892A5.854,5.854,0,0,1,17.326,5.4a5.821,5.821,0,0,1,.351,2.33q0,.612-.117,2.487a.809.809,0,0,0,.365.091,1.93,1.93,0,0,0,.664-.176,1.93,1.93,0,0,1,.664-.176,1.3,1.3,0,0,1,.729.234.7.7,0,0,1,.351.6.839.839,0,0,1-.41.7,2.732,2.732,0,0,1-.9.41,3.192,3.192,0,0,0-.9.378.728.728,0,0,0-.41.618,1.575,1.575,0,0,0,.156.56,6.9,6.9,0,0,0,1.334,1.953,5.6,5.6,0,0,0,1.881,1.315,5.875,5.875,0,0,0,1.042.3.42.42,0,0,1,.365.456q0,.911-2.852,1.341a1.379,1.379,0,0,0-.143.507,1.8,1.8,0,0,1-.182.605.451.451,0,0,1-.429.241,5.878,5.878,0,0,1-.807-.085,5.917,5.917,0,0,0-.833-.085,4.217,4.217,0,0,0-.807.065,2.42,2.42,0,0,0-.82.293,6.682,6.682,0,0,0-.755.5q-.351.267-.755.527a3.886,3.886,0,0,1-.989.436A4.471,4.471,0,0,1,11.831,22a4.307,4.307,0,0,1-1.256-.176,3.784,3.784,0,0,1-.976-.436q-.4-.26-.749-.527a6.682,6.682,0,0,0-.755-.5,2.422,2.422,0,0,0-.807-.293,4.432,4.432,0,0,0-.82-.065,5.089,5.089,0,0,0-.853.1,5,5,0,0,1-.762.1.474.474,0,0,1-.456-.241,1.819,1.819,0,0,1-.182-.618,1.411,1.411,0,0,0-.143-.521q-2.852-.429-2.852-1.341a.42.42,0,0,1,.365-.456,5.793,5.793,0,0,0,1.042-.3,5.524,5.524,0,0,0,1.881-1.315,6.789,6.789,0,0,0,1.334-1.953A1.575,1.575,0,0,0,6,12.9a.728.728,0,0,0-.41-.618,3.323,3.323,0,0,0-.9-.384,2.912,2.912,0,0,1-.9-.41.814.814,0,0,1-.41-.684.71.71,0,0,1,.338-.593,1.208,1.208,0,0,1,.716-.241,1.976,1.976,0,0,1,.625.169,2.008,2.008,0,0,0,.69.169.919.919,0,0,0,.416-.091q-.117-1.849-.117-2.474A5.861,5.861,0,0,1,6.385,5.4,5.516,5.516,0,0,1,8.625,2.819,7.075,7.075,0,0,1,12.062,2Z"/>
</symbol>
<symbol id="icon-soundcloud" viewBox="0 0 24 24">
<path d="M8.9,16.1L9,14L8.9,9.5c0-0.1,0-0.1-0.1-0.1c0,0-0.1-0.1-0.1-0.1c-0.1,0-0.1,0-0.1,0.1c0,0-0.1,0.1-0.1,0.1L8.3,14l0.1,2.1 c0,0.1,0,0.1,0.1,0.1c0,0,0.1,0.1,0.1,0.1C8.8,16.3,8.9,16.3,8.9,16.1z M11.4,15.9l0.1-1.8L11.4,9c0-0.1,0-0.2-0.1-0.2 c0,0-0.1,0-0.1,0s-0.1,0-0.1,0c-0.1,0-0.1,0.1-0.1,0.2l0,0.1l-0.1,5c0,0,0,0.7,0.1,2v0c0,0.1,0,0.1,0.1,0.1c0.1,0.1,0.1,0.1,0.2,0.1 c0.1,0,0.1,0,0.2-0.1c0.1,0,0.1-0.1,0.1-0.2L11.4,15.9z M2.4,12.9L2.5,14l-0.2,1.1c0,0.1,0,0.1-0.1,0.1c0,0-0.1,0-0.1-0.1L2.1,14 l0.1-1.1C2.2,12.9,2.3,12.9,2.4,12.9C2.3,12.9,2.4,12.9,2.4,12.9z M3.1,12.2L3.3,14l-0.2,1.8c0,0.1,0,0.1-0.1,0.1 c-0.1,0-0.1,0-0.1-0.1L2.8,14L3,12.2C3,12.2,3,12.2,3.1,12.2C3.1,12.2,3.1,12.2,3.1,12.2z M3.9,11.9L4.1,14l-0.2,2.1 c0,0.1,0,0.1-0.1,0.1c-0.1,0-0.1,0-0.1-0.1L3.5,14l0.2-2.1c0-0.1,0-0.1,0.1-0.1C3.9,11.8,3.9,11.8,3.9,11.9z M4.7,11.9L4.9,14 l-0.2,2.1c0,0.1-0.1,0.1-0.1,0.1c-0.1,0-0.1,0-0.1-0.1L4.3,14l0.2-2.2c0-0.1,0-0.1,0.1-0.1C4.7,11.7,4.7,11.8,4.7,11.9z M5.6,12 l0.2,2l-0.2,2.1c0,0.1-0.1,0.1-0.1,0.1c0,0-0.1,0-0.1,0c0,0,0-0.1,0-0.1L5.1,14l0.2-2c0,0,0-0.1,0-0.1s0.1,0,0.1,0 C5.5,11.9,5.5,11.9,5.6,12L5.6,12z M6.4,10.7L6.6,14l-0.2,2.1c0,0,0,0.1,0,0.1c0,0-0.1,0-0.1,0c-0.1,0-0.1-0.1-0.2-0.2L5.9,14 l0.2-3.3c0-0.1,0.1-0.2,0.2-0.2c0,0,0.1,0,0.1,0C6.4,10.7,6.4,10.7,6.4,10.7z M7.2,10l0.2,4.1l-0.2,2.1c0,0,0,0.1,0,0.1 c0,0-0.1,0-0.1,0c-0.1,0-0.2-0.1-0.2-0.2l-0.1-2.1L6.8,10c0-0.1,0.1-0.2,0.2-0.2c0,0,0.1,0,0.1,0S7.2,9.9,7.2,10z M8,9.6L8.2,14 L8,16.1c0,0.1-0.1,0.2-0.2,0.2c-0.1,0-0.2-0.1-0.2-0.2L7.5,14l0.1-4.4c0-0.1,0-0.1,0.1-0.1c0,0,0.1-0.1,0.1-0.1c0.1,0,0.1,0,0.1,0.1 C8,9.6,8,9.6,8,9.6z M11.4,16.1L11.4,16.1L11.4,16.1z M9.7,9.6L9.8,14l-0.1,2.1c0,0.1,0,0.1-0.1,0.2s-0.1,0.1-0.2,0.1 c-0.1,0-0.1,0-0.1-0.1s-0.1-0.1-0.1-0.2L9.2,14l0.1-4.4c0-0.1,0-0.1,0.1-0.2s0.1-0.1,0.2-0.1c0.1,0,0.1,0,0.2,0.1S9.7,9.5,9.7,9.6 L9.7,9.6z M10.6,9.8l0.1,4.3l-0.1,2c0,0.1,0,0.1-0.1,0.2c0,0-0.1,0.1-0.2,0.1c-0.1,0-0.1,0-0.2-0.1c0,0-0.1-0.1-0.1-0.2L10,14 l0.1-4.3c0-0.1,0-0.1,0.1-0.2c0,0,0.1-0.1,0.2-0.1c0.1,0,0.1,0,0.2,0.1S10.6,9.7,10.6,9.8z M12.4,14l-0.1,2c0,0.1,0,0.1-0.1,0.2 c-0.1,0.1-0.1,0.1-0.2,0.1c-0.1,0-0.1,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.2l-0.1-1l-0.1-1l0.1-5.5v0c0-0.1,0-0.2,0.1-0.2 c0.1,0,0.1-0.1,0.2-0.1c0,0,0.1,0,0.1,0c0.1,0,0.1,0.1,0.1,0.2L12.4,14z M22.1,13.9c0,0.7-0.2,1.3-0.7,1.7c-0.5,0.5-1.1,0.7-1.7,0.7 h-6.8c-0.1,0-0.1,0-0.2-0.1c-0.1-0.1-0.1-0.1-0.1-0.2V8.2c0-0.1,0.1-0.2,0.2-0.3c0.5-0.2,1-0.3,1.6-0.3c1.1,0,2.1,0.4,2.9,1.1 c0.8,0.8,1.3,1.7,1.4,2.8c0.3-0.1,0.6-0.2,1-0.2c0.7,0,1.3,0.2,1.7,0.7C21.8,12.6,22.1,13.2,22.1,13.9L22.1,13.9z"/>
</symbol>
<symbol id="icon-spotify" viewBox="0 0 24 24">
<path d="M12,2C6.477,2,2,6.477,2,12c0,5.523,4.477,10,10,10c5.523,0,10-4.477,10-10C22,6.477,17.523,2,12,2 M16.586,16.424 c-0.18,0.295-0.563,0.387-0.857,0.207c-2.348-1.435-5.304-1.76-8.785-0.964c-0.335,0.077-0.67-0.133-0.746-0.469 c-0.077-0.335,0.132-0.67,0.469-0.746c3.809-0.871,7.077-0.496,9.713,1.115C16.673,15.746,16.766,16.13,16.586,16.424 M17.81,13.7 c-0.226,0.367-0.706,0.482-1.072,0.257c-2.687-1.652-6.785-2.131-9.965-1.166C6.36,12.917,5.925,12.684,5.8,12.273 C5.675,11.86,5.908,11.425,6.32,11.3c3.632-1.102,8.147-0.568,11.234,1.328C17.92,12.854,18.035,13.335,17.81,13.7 M17.915,10.865 c-3.223-1.914-8.54-2.09-11.618-1.156C5.804,9.859,5.281,9.58,5.131,9.086C4.982,8.591,5.26,8.069,5.755,7.919 c3.532-1.072,9.404-0.865,13.115,1.338c0.445,0.264,0.59,0.838,0.327,1.282C18.933,10.983,18.359,11.129,17.915,10.865"/>
</symbol>
<symbol id="icon-stackoverflow" viewBox="0 0 24 24">
<path d="m 17.817128,20.228605 v -5.337217 h 1.771431 V 22 H 3.6 v -7.108612 h 1.771401 v 5.337217 z" />
<path d="m 7.3267845,14.385359 8.6959295,1.817316 0.368168,-1.748385 -8.6959318,-1.817319 z m 1.1503197,-4.140944 8.0517968,3.749872 0.73617,-1.610385 -8.0518344,-3.7728517 z m 2.2315078,-3.9569154 6.832405,5.6822664 1.12738,-1.357316 -6.832576,-5.6822636 z m 4.417,-4.2099019 -1.426448,1.0581864 5.291191,7.1316119 1.426412,-1.0582745 z M 7.1427296,18.434189 h 8.8799844 v -1.7713 H 7.1427296 Z" />
<path d="m 17.817128,20.228605 v -5.337217 h 1.771431 V 22 H 3.6 v -7.108612 h 1.771401 v 5.337217 z" />
<path d="m 7.3267845,14.385359 8.6959295,1.817316 0.368168,-1.748385 -8.6959318,-1.817319 z m 1.1503197,-4.140944 8.0517968,3.749872 0.73617,-1.610385 -8.0518344,-3.7728517 z m 2.2315078,-3.9569154 6.832405,5.6822664 1.12738,-1.357316 -6.832576,-5.6822636 z m 4.417,-4.2099019 -1.426448,1.0581864 5.291191,7.1316119 1.426412,-1.0582745 z M 7.1427296,18.434189 h 8.8799844 v -1.7713 H 7.1427296 Z" />
</symbol>
<symbol id="icon-strava" viewBox="0 0 24 24">
<path d="M15.387 17.944l-2.089-4.116h-3.065L15.387 24l5.15-10.172h-3.066m-7.008-5.599l2.836 5.598h4.172L10.463 0l-7 13.828h4.169"/>
</symbol>
<symbol id="icon-stumbleupon" viewBox="0 0 24 24">
<path d="M12,4.294c-2.469,0-4.471,2.002-4.471,4.471v6.353c0,0.585-0.474,1.059-1.059,1.059c-0.585,0-1.059-0.474-1.059-1.059 v-2.824H2v2.941c0,2.469,2.002,4.471,4.471,4.471c2.469,0,4.471-2.002,4.471-4.471V8.765c0-0.585,0.474-1.059,1.059-1.059 s1.059,0.474,1.059,1.059v1.294l1.412,0.647l2-0.647V8.765C16.471,6.296,14.469,4.294,12,4.294z M13.059,12.353v2.882 c0,2.469,2.002,4.471,4.471,4.471S22,17.704,22,15.235v-2.824h-3.412v2.824c0,0.585-0.474,1.059-1.059,1.059 c-0.585,0-1.059-0.474-1.059-1.059v-2.882l-2,0.647L13.059,12.353z"/>
</symbol>
<symbol id="icon-telegram" viewBox="0 0 24 24">
<path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zm3.08 14.757s-.25.625-.936.325l-2.541-1.949-1.63 1.486s-.127.096-.266.036c0 0-.12-.011-.27-.486-.15-.475-.911-2.972-.911-2.972L6 12.349s-.387-.137-.425-.438c-.037-.3.437-.462.437-.462l10.03-3.934s.824-.362.824.238l-1.786 9.004z"/>
</symbol>
<symbol id="icon-tiktok" viewBox="0 0 24 24">
<path d="M12.22 2H15.64C15.64 2 15.4502 6.39351 20.3898 6.70186V10.0981C20.3898 10.0981 17.7537 10.2636 15.64 8.64957L15.6769 15.6615C15.6769 16.9151 15.3052 18.1406 14.6087 19.1829C13.9123 20.2253 12.9224 21.0377 11.7642 21.5175C10.606 21.9972 9.33162 22.1228 8.10209 21.8782C6.87257 21.6337 5.74316 21.0301 4.85669 20.1437C3.97022 19.2573 3.3665 18.1279 3.12186 16.8984C2.87723 15.6689 3.00267 14.3945 3.48233 13.2363C3.96199 12.0781 4.77432 11.0881 5.8166 10.3916C6.85888 9.69502 8.0843 9.32318 9.33791 9.32307H10.2271V12.7231V12.7954C9.64757 12.6147 9.02578 12.6217 8.45043 12.8152C7.87508 13.0088 7.37556 13.3792 7.02314 13.8734C6.67071 14.3677 6.48338 14.9606 6.48786 15.5677C6.49235 16.1747 6.68842 16.7648 7.04811 17.2538C7.40781 17.7428 7.91274 18.1057 8.49089 18.2908C9.06903 18.4758 9.69086 18.4736 10.2676 18.2843C10.8444 18.0951 11.3467 17.7285 11.7029 17.2369C12.059 16.7454 12.2508 16.1538 12.2509 15.5468L12.22 2Z"/>
</symbol>
<symbol id="icon-tumblr" viewBox="0 0 24 24">
<path d="M16.749,17.396c-0.357,0.17-1.041,0.319-1.551,0.332c-1.539,0.041-1.837-1.081-1.85-1.896V9.847h3.861V6.937h-3.847V2.039 c0,0-2.77,0-2.817,0c-0.046,0-0.127,0.041-0.138,0.144c-0.165,1.499-0.867,4.13-3.783,5.181v2.484h1.945v6.282 c0,2.151,1.587,5.206,5.775,5.135c1.413-0.024,2.982-0.616,3.329-1.126L16.749,17.396z"/>
</symbol>
<symbol id="icon-twitch" viewBox="0 0 24 24">
<path d="M16.499,8.089h-1.636v4.91h1.636V8.089z M12,8.089h-1.637v4.91H12V8.089z M4.228,3.178L3,6.451v13.092h4.499V22h2.456 l2.454-2.456h3.681L21,14.636V3.178H4.228z M19.364,13.816l-2.864,2.865H12l-2.453,2.453V16.68H5.863V4.814h13.501V13.816z"/>
</symbol>
<symbol id="icon-twitter" viewBox="0 0 24 24">
<path d="M22.23,5.924c-0.736,0.326-1.527,0.547-2.357,0.646c0.847-0.508,1.498-1.312,1.804-2.27 c-0.793,0.47-1.671,0.812-2.606,0.996C18.324,4.498,17.257,4,16.077,4c-2.266,0-4.103,1.837-4.103,4.103 c0,0.322,0.036,0.635,0.106,0.935C8.67,8.867,5.647,7.234,3.623,4.751C3.27,5.357,3.067,6.062,3.067,6.814 c0,1.424,0.724,2.679,1.825,3.415c-0.673-0.021-1.305-0.206-1.859-0.513c0,0.017,0,0.034,0,0.052c0,1.988,1.414,3.647,3.292,4.023 c-0.344,0.094-0.707,0.144-1.081,0.144c-0.264,0-0.521-0.026-0.772-0.074c0.522,1.63,2.038,2.816,3.833,2.85 c-1.404,1.1-3.174,1.756-5.096,1.756c-0.331,0-0.658-0.019-0.979-0.057c1.816,1.164,3.973,1.843,6.29,1.843 c7.547,0,11.675-6.252,11.675-11.675c0-0.178-0.004-0.355-0.012-0.531C20.985,7.47,21.68,6.747,22.23,5.924z"/>
</symbol>
<symbol id="icon-vimeo" viewBox="0 0 24 24">
<path d="M22.396,7.164c-0.093,2.026-1.507,4.799-4.245,8.32C15.322,19.161,12.928,21,10.97,21c-1.214,0-2.24-1.119-3.079-3.359 c-0.56-2.053-1.119-4.106-1.68-6.159C5.588,9.243,4.921,8.122,4.206,8.122c-0.156,0-0.701,0.328-1.634,0.98L1.594,7.841 c1.027-0.902,2.04-1.805,3.037-2.708C6.001,3.95,7.03,3.327,7.715,3.264c1.619-0.156,2.616,0.951,2.99,3.321 c0.404,2.557,0.685,4.147,0.841,4.769c0.467,2.121,0.981,3.181,1.542,3.181c0.435,0,1.09-0.688,1.963-2.065 c0.871-1.376,1.338-2.422,1.401-3.142c0.125-1.187-0.343-1.782-1.401-1.782c-0.498,0-1.012,0.115-1.541,0.341 c1.023-3.35,2.977-4.977,5.862-4.884C21.511,3.066,22.52,4.453,22.396,7.164z"/>
</symbol>
<symbol id="icon-vk" viewBox="0 0 24 24">
<path d="M22,7.1c0.2,0.4-0.4,1.5-1.6,3.1c-0.2,0.2-0.4,0.5-0.7,0.9c-0.5,0.7-0.9,1.1-0.9,1.4c-0.1,0.3-0.1,0.6,0.1,0.8 c0.1,0.1,0.4,0.4,0.8,0.9h0l0,0c1,0.9,1.6,1.7,2,2.3c0,0,0,0.1,0.1,0.1c0,0.1,0,0.1,0.1,0.3c0,0.1,0,0.2,0,0.4 c0,0.1-0.1,0.2-0.3,0.3c-0.1,0.1-0.4,0.1-0.6,0.1l-2.7,0c-0.2,0-0.4,0-0.6-0.1c-0.2-0.1-0.4-0.1-0.5-0.2l-0.2-0.1 c-0.2-0.1-0.5-0.4-0.7-0.7s-0.5-0.6-0.7-0.8c-0.2-0.2-0.4-0.4-0.6-0.6C14.8,15,14.6,15,14.4,15c0,0,0,0-0.1,0c0,0-0.1,0.1-0.2,0.2 c-0.1,0.1-0.2,0.2-0.2,0.3c-0.1,0.1-0.1,0.3-0.2,0.5c-0.1,0.2-0.1,0.5-0.1,0.8c0,0.1,0,0.2,0,0.3c0,0.1-0.1,0.2-0.1,0.2l0,0.1 c-0.1,0.1-0.3,0.2-0.6,0.2h-1.2c-0.5,0-1,0-1.5-0.2c-0.5-0.1-1-0.3-1.4-0.6s-0.7-0.5-1.1-0.7s-0.6-0.4-0.7-0.6l-0.3-0.3 c-0.1-0.1-0.2-0.2-0.3-0.3s-0.4-0.5-0.7-0.9s-0.7-1-1.1-1.6c-0.4-0.6-0.8-1.3-1.3-2.2C2.9,9.4,2.5,8.5,2.1,7.5C2,7.4,2,7.3,2,7.2 c0-0.1,0-0.1,0-0.2l0-0.1c0.1-0.1,0.3-0.2,0.6-0.2l2.9,0c0.1,0,0.2,0,0.2,0.1S5.9,6.9,5.9,7L6,7c0.1,0.1,0.2,0.2,0.3,0.3 C6.4,7.7,6.5,8,6.7,8.4C6.9,8.8,7,9,7.1,9.2l0.2,0.3c0.2,0.4,0.4,0.8,0.6,1.1c0.2,0.3,0.4,0.5,0.5,0.7s0.3,0.3,0.4,0.4 c0.1,0.1,0.3,0.1,0.4,0.1c0.1,0,0.2,0,0.3-0.1c0,0,0,0,0.1-0.1c0,0,0.1-0.1,0.1-0.2c0.1-0.1,0.1-0.3,0.1-0.5c0-0.2,0.1-0.5,0.1-0.8 c0-0.4,0-0.8,0-1.3c0-0.3,0-0.5-0.1-0.8c0-0.2-0.1-0.4-0.1-0.5L9.6,7.6C9.4,7.3,9.1,7.2,8.7,7.1C8.6,7.1,8.6,7,8.7,6.9 C8.9,6.7,9,6.6,9.1,6.5c0.4-0.2,1.2-0.3,2.5-0.3c0.6,0,1,0.1,1.4,0.1c0.1,0,0.3,0.1,0.3,0.1c0.1,0.1,0.2,0.1,0.2,0.3 c0,0.1,0.1,0.2,0.1,0.3s0,0.3,0,0.5c0,0.2,0,0.4,0,0.6c0,0.2,0,0.4,0,0.7c0,0.3,0,0.6,0,0.9c0,0.1,0,0.2,0,0.4c0,0.2,0,0.4,0,0.5 c0,0.1,0,0.3,0,0.4s0.1,0.3,0.1,0.4c0.1,0.1,0.1,0.2,0.2,0.3c0.1,0,0.1,0,0.2,0c0.1,0,0.2,0,0.3-0.1c0.1-0.1,0.2-0.2,0.4-0.4 s0.3-0.4,0.5-0.7c0.2-0.3,0.5-0.7,0.7-1.1c0.4-0.7,0.8-1.5,1.1-2.3c0-0.1,0.1-0.1,0.1-0.2c0-0.1,0.1-0.1,0.1-0.1l0,0l0.1,0 c0,0,0,0,0.1,0s0.2,0,0.2,0l3,0c0.3,0,0.5,0,0.7,0S21.9,7,21.9,7L22,7.1z"/>
</symbol>
<symbol id="icon-whatsapp" viewBox="0 0 24 24">
<path d="M2.048,22l1.406-5.136c-0.867-1.503-1.324-3.208-1.323-4.955C2.133,6.446,6.579,2,12.042,2c2.651,0.001,5.14,1.033,7.011,2.906c1.871,1.873,2.901,4.363,2.9,7.011c-0.002,5.464-4.448,9.91-9.91,9.91c0,0,0,0,0,0h-0.004c-1.659-0.001-3.288-0.417-4.736-1.206L2.048,22z M7.545,18.828l0.301,0.179c1.265,0.751,2.714,1.148,4.193,1.148h0.003c4.54,0,8.235-3.695,8.237-8.237c0.001-2.201-0.855-4.271-2.41-5.828c-1.555-1.557-3.623-2.415-5.824-2.416c-4.544,0-8.239,3.695-8.241,8.237c-0.001,1.556,0.435,3.072,1.259,4.384l0.196,0.312l-0.832,3.04L7.545,18.828z M17.035,14.274c-0.062-0.103-0.227-0.165-0.475-0.289c-0.248-0.124-1.465-0.723-1.692-0.806c-0.227-0.083-0.392-0.124-0.557,0.124c-0.165,0.248-0.64,0.806-0.784,0.971c-0.144,0.165-0.289,0.186-0.536,0.062c-0.248-0.124-1.046-0.385-1.991-1.229c-0.736-0.657-1.233-1.468-1.378-1.715c-0.144-0.248-0.015-0.382,0.109-0.505c0.111-0.111,0.248-0.289,0.371-0.434c0.124-0.145,0.165-0.248,0.248-0.413c0.083-0.165,0.041-0.31-0.021-0.434c-0.062-0.124-0.557-1.343-0.763-1.839C9.364,7.284,9.159,7.35,9.007,7.342c-0.144-0.007-0.31-0.009-0.475-0.009c-0.165,0-0.433,0.062-0.66,0.31C7.646,7.891,7.006,8.49,7.006,9.709c0,1.219,0.887,2.396,1.011,2.562c0.124,0.165,1.746,2.666,4.23,3.739c0.591,0.255,1.052,0.408,1.412,0.522c0.593,0.189,1.133,0.162,1.56,0.098c0.476-0.071,1.465-0.599,1.671-1.177C17.096,14.873,17.096,14.378,17.035,14.274z"/>
</symbol>
<symbol id="icon-woocommerce" viewBox="0 0 24 24">
<path d="M19,2H5C3.3,2,2,3.3,2,5v11c0,1.7,1.3,3,3,3h4l6,3l-1-3h5c1.7,0,3-1.3,3-3V5C22,3.3,20.7,2,19,2z M17.4,6.5c-0.4,0.8-0.8,2.1-1,3.9c-0.3,1.8-0.4,3.1-0.3,4.1c0,0.3,0,0.5-0.1,0.7s-0.3,0.4-0.6,0.4s-0.6-0.1-0.9-0.4c-1-1-1.8-2.6-2.4-4.6c-0.7,1.4-1.2,2.4-1.6,3.1c-0.6,1.2-1.2,1.8-1.6,1.9c-0.3,0-0.5-0.2-0.8-0.7C7.6,13.5,7,10.7,6.4,6.7c0-0.3,0-0.5,0.2-0.7C6.7,5.8,7,5.7,7.3,5.6c0.5,0,0.9,0.2,0.9,0.8c0.3,2.3,0.7,4.2,1.1,5.7l2.4-4.5C11.9,7.2,12.1,7,12.5,7c0.5,0,0.8,0.3,0.9,0.9c0.3,1.4,0.6,2.6,1,3.7c0.3-2.7,0.8-4.7,1.4-5.9c0.2-0.3,0.4-0.5,0.7-0.5c0.2,0,0.5,0.1,0.7,0.2c0.2,0.2,0.3,0.4,0.3,0.6S17.5,6.4,17.4,6.5z"/>
</symbol>
<symbol id="icon-wordpress" viewBox="0 0 24 24">
<path d="M12.158,12.786L9.46,20.625c0.806,0.237,1.657,0.366,2.54,0.366c1.047,0,2.051-0.181,2.986-0.51 c-0.024-0.038-0.046-0.079-0.065-0.124L12.158,12.786z M3.009,12c0,3.559,2.068,6.634,5.067,8.092L3.788,8.341 C3.289,9.459,3.009,10.696,3.009,12z M18.069,11.546c0-1.112-0.399-1.881-0.741-2.48c-0.456-0.741-0.883-1.368-0.883-2.109 c0-0.826,0.627-1.596,1.51-1.596c0.04,0,0.078,0.005,0.116,0.007C16.472,3.904,14.34,3.009,12,3.009 c-3.141,0-5.904,1.612-7.512,4.052c0.211,0.007,0.41,0.011,0.579,0.011c0.94,0,2.396-0.114,2.396-0.114 C7.947,6.93,8.004,7.642,7.52,7.699c0,0-0.487,0.057-1.029,0.085l3.274,9.739l1.968-5.901l-1.401-3.838 C9.848,7.756,9.389,7.699,9.389,7.699C8.904,7.67,8.961,6.93,9.446,6.958c0,0,1.484,0.114,2.368,0.114 c0.94,0,2.397-0.114,2.397-0.114c0.485-0.028,0.542,0.684,0.057,0.741c0,0-0.488,0.057-1.029,0.085l3.249,9.665l0.897-2.996 C17.841,13.284,18.069,12.316,18.069,11.546z M19.889,7.686c0.039,0.286,0.06,0.593,0.06,0.924c0,0.912-0.171,1.938-0.684,3.22 l-2.746,7.94c2.673-1.558,4.47-4.454,4.47-7.771C20.991,10.436,20.591,8.967,19.889,7.686z M12,22C6.486,22,2,17.514,2,12 C2,6.486,6.486,2,12,2c5.514,0,10,4.486,10,10C22,17.514,17.514,22,12,22z"/>
</symbol>
<symbol id="icon-yelp" viewBox="0 0 24 24">
<path d="M12.271,16.718v1.417q-.011,3.257-.067,3.4a.707.707,0,0,1-.569.446,4.637,4.637,0,0,1-2.024-.424A4.609,4.609,0,0,1,7.8,20.565a.844.844,0,0,1-.19-.4.692.692,0,0,1,.044-.29,3.181,3.181,0,0,1,.379-.524q.335-.412,2.019-2.409.011,0,.669-.781a.757.757,0,0,1,.44-.274.965.965,0,0,1,.552.039.945.945,0,0,1,.418.324.732.732,0,0,1,.139.468Zm-1.662-2.8a.783.783,0,0,1-.58.781l-1.339.435q-3.067.981-3.257.981a.711.711,0,0,1-.6-.4,2.636,2.636,0,0,1-.19-.836,9.134,9.134,0,0,1,.011-1.857,3.559,3.559,0,0,1,.335-1.389.659.659,0,0,1,.625-.357,22.629,22.629,0,0,1,2.253.859q.781.324,1.283.524l.937.379a.771.771,0,0,1,.4.34A.982.982,0,0,1,10.609,13.917Zm9.213,3.313a4.467,4.467,0,0,1-1.021,1.8,4.559,4.559,0,0,1-1.512,1.417.671.671,0,0,1-.7-.078q-.156-.112-2.052-3.2l-.524-.859a.761.761,0,0,1-.128-.513.957.957,0,0,1,.217-.513.774.774,0,0,1,.926-.29q.011.011,1.327.446,2.264.736,2.7.887a2.082,2.082,0,0,1,.524.229.673.673,0,0,1,.245.68Zm-7.5-7.049q.056,1.137-.6,1.361-.647.19-1.272-.792L6.237,4.08a.7.7,0,0,1,.212-.691,5.788,5.788,0,0,1,2.314-1,5.928,5.928,0,0,1,2.5-.352.681.681,0,0,1,.547.5q.034.2.245,3.407T12.327,10.181Zm7.384,1.2a.679.679,0,0,1-.29.658q-.167.112-3.67.959-.747.167-1.015.257l.011-.022a.769.769,0,0,1-.513-.044.914.914,0,0,1-.413-.357.786.786,0,0,1,0-.971q.011-.011.836-1.137,1.394-1.908,1.673-2.275a2.423,2.423,0,0,1,.379-.435A.7.7,0,0,1,17.435,8a4.482,4.482,0,0,1,1.372,1.489,4.81,4.81,0,0,1,.9,1.868v.034Z"/>
</symbol>
<symbol id="icon-xanga" viewBox="0 0 24 24">
<path d="M9,9h6v6H9V9z M3,9h6V3H3V9z M15,9h6V3h-6V9z M15,21h6v-6h-6V21z M3,21h6v-6H3V21z"/>
</symbol>
<symbol id="icon-youtube" viewBox="0 0 24 24">
<path d="M21.8,8.001c0,0-0.195-1.378-0.795-1.985c-0.76-0.797-1.613-0.801-2.004-0.847c-2.799-0.202-6.997-0.202-6.997-0.202 h-0.009c0,0-4.198,0-6.997,0.202C4.608,5.216,3.756,5.22,2.995,6.016C2.395,6.623,2.2,8.001,2.2,8.001S2,9.62,2,11.238v1.517 c0,1.618,0.2,3.237,0.2,3.237s0.195,1.378,0.795,1.985c0.761,0.797,1.76,0.771,2.205,0.855c1.6,0.153,6.8,0.201,6.8,0.201 s4.203-0.006,7.001-0.209c0.391-0.047,1.243-0.051,2.004-0.847c0.6-0.607,0.795-1.985,0.795-1.985s0.2-1.618,0.2-3.237v-1.517 C22,9.62,21.8,8.001,21.8,8.001z M9.935,14.594l-0.001-5.62l5.404,2.82L9.935,14.594z"/>
</symbol>
</defs>
</svg>

</body>
</html>
