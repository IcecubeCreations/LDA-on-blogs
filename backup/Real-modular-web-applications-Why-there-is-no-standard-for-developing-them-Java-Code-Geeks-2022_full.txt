Real modular web applications: Why there is no standard for developing them? - Java Code Geeks - 2022      

     


Knowledge BaseTutorialsJava TutorialCore Java TutorialsJava 8 TutorialsJava 9 TutorialsJava Concurrency TutorialsJava NIO TutorialsJava Logging TutorialsDesign Patterns TutorialsException Handling TutorialsJUnit TutorialsXPath TutorialsMockito TutorialsEnterprise Java TutorialsJava Spring TutorialSpring Boot TutorialsSpring Data TutorialsSpring Batch TutorialsSpring Integration TutorialsSpring MVC TutorialsSpring Security TutorialsJDBC TutorialsHibernate TutorialsSelenium TutorialsJava Servlet TutorialsJPA TutorialsJSF TutorialsJSP TutorialsJAX-RS TutorialsJAX-WS TutorialsJAXB TutorialsJMS TutorialsEJB TutorialsElasticSearch TutorialsJBoss Drools TutorialsJMeter TutorialsApache Camel TutorialsApache Hadoop TutorialsJava SLF4J TutorialsCDI TutorialsQuartz TutorialsDesktop Java TutorialsAWT TutorialsJava Swing TutorialsJavaFX TutorialsXuggler TutorialsEclipse IDE TutorialsIntelliJ IDEA TutorialsNetbeans IDE TutorialsAndroid TutorialsScala TutorialsPlay Framework TutorialsDevOps TutorialsDocker TutorialsNoSQL TutorialsMongoDB TutorialsGroovy TutorialsGit TutorialsExamplesCoursesMinibooksResourcesJavaSoftwareOur CoursesOur ProjectsAboutAbout JCGsAdvertisingTerms of UsePrivacy PolicyJoin UsJCGW4GSubmission GuidelinesTerms & ConditionsDealsLoginRegister 
Java Code Geeks Java Developers Resource Center
AndroidAndroid CoreAndroid GamesJavaCore JavaDesktop JavaEnterprise JavaJVM LanguagesCeylonClojureGroovyJRubyKotlinScalaSoft DevWeb DevelopmentPythonJavaScriptReact.jsPHPAgileCareerCommsDevOpsMeta JCGBest Of The WeekMiscHome » Java » Enterprise Java » Real modular web applications: Why there is no standard for developing them?About Patroklos Papapetrou

Patroklos is an experienced JavaEE Software Engineer and an Agile enthusiast seeking excellence in software quality. He is also co-Author of the Sonar in Action book, and contributor of several Sonar plugins.



Real modular web applications: Why there is no standard for developing them?
Posted by:  Patroklos Papapetrou 
in  Enterprise Java
September 11th, 2011
1 Comment
 ViewsOSGI, SpringSource, Jboss Modules, J2EE and the list never ends.All these technologies promise to their end users/developers the same thing which is more or less java modular web applications (?). How many of us out there, though, have actually tried to develop a REAL modular software system in Java? How many of us have managed to get it done? You have probably noticed that I have capitalized the word real and this is not done accidentally. I shortly explain what I mean by the definition: “real modular java system”.IMHO a REAL software module should be able to have parts for at least business logic, persistence, user interface and configuration. A software module, in an ideal scenario, should be able to be plugged-in and plugged-off easily in a running application without restarting it.  For example in a J2EE application server (such as Jboss or GlassFish) the running application (core system) is a .war file. Some more modules (that contain parts mentioned above) of the core system are developed and packaged in separate jar files. These jar files shoule be deployed in the application server, integrated with the core system (by some extension points in business logic AND in User Interface ) without the need of re-deploying it. Can we do something like this?Let’s see what related technologies suggest about it. I was a fan of JBoss Modules since their first steps, and after the recent latest release of JBoss AS I was looking forward to see them in action. To be honest JBoss modules provide a very simple and convenient way to define dependencies between modules. Oops!! Did I write “modules”? What kind of modules are these? They can include business logic, configuration, data model but what about user interface? Unfortunately nothing is mentioned about that and after a little research, I have found that the concept of modularity in JBoss modules does not include any user interface.What about OSGI? The most promising way of building moduar applications. OSGI is nowadays supported from many application servers and although its configuration looks like dinosaurs in the age of industrial revolution seems to be a very nice approach. Plenty of available services, a dozen of frameworks to use and of course no reference to any user interface capabilities. On the other hand there is Vaadin that integrates (?) well with OSGI to build modular web applications, as the relevant article implies. I wonder if there is a real/productive modular enterprise application developed with OSGI and Vaadin.Spring is an independent framework by SpringSource which is currently the leader in developing Java enterprise applications. Spring Dynamic Modules in conjuction with OSGI claim to be the most sophisticated way to build dynamic and modular web applications, but again I still feel that even Spring is not solving the problem I have raised. From my researching experience integration of the above technologies for a modular system is a hard task.Last but not least comes J2EE. The latest version of web and full profile specifications have transformed J2EE to a very powerful set of frameworks. JSF2 and CDI as well as with all the new features have dramatically increased its popularity among Java developers. When I read for the first time this article, I believed that finally I have found a standard solution for modular web applications.  Although each jar can contain all different parts: business logic with EJB and CDI , persistence with JPA and its implementations, configuration and user interface with JSF and its implementations) according to this issue there is no way to handle jars with JSF components as a separate module. One more dissapointment. Modules in J2EE are supposed to be jars packaged in a single war. That was too close!! We have to wait, I guess, until the release of JSF 2.2 and some months later for support of the most well-known application servers.Since there is no standard for building modular systems, many well-known projects, have developed their own module system based on one of the previous mentioned frameworks or from the scratch. Jenkins, Atlassian’s Jira and Sonar by SonarSource are all java based applications with a powerful module / plugin system. You develop your plugin (including user interface), following some guidelines and you deploy it as a single jar through a module/plugin manager. In most cases you need to restart the system but I think that this does not bother any administrator since you can easily increase the functionality of your software.So my dilemma is still valid. Should I start building my own module / plugin system or should I wait for a standard to come and boost the developing of modular web applications worldwide? I wonder why this kind of standardization is not yet available and why we are obligated to try-catch-finally (still without resources) among all these technologies and frameworks! Are we close to have a standard for developing real modular enterprise web applications or not?Reference: Why there is no standard for developing real modular web applications? from our JCG partner Patroklos Papapetrou at the Only Software Matters blog.Related Articles :OSGi Using Maven with EquinoxZero-downtime Deployment (and Rollback) in Tomcat; a walkthrough and a checklistJava Code Geeks Andygene Web ArchetypeJava Best Practices SeriesJava Tutorials and Android Tutorials list
Modularity 2011-09-11+Patroklos PapapetrouTagged with: Modularity
 (0 rating, 0 votes)You need to be a registered member to rate this. 1 Comment
 Views
Tweet it!Do you want to know how to develop your skillset to become a Java Rockstar?Subscribe to our newsletter to start Rocking right now!To get you started we give you our best selling eBooks for FREE!1. JPA Mini Book2. JVM Troubleshooting Guide3. JUnit Tutorial for Unit Testing4. Java Annotations Tutorial5. Java Interview Questions6. Spring Interview Questions7. Android UI Designand many more ....I agree to the Terms  and Privacy PolicySign up   Like This Article? Read More From Java Code Geeks    
 Subscribe Notify of
new follow-up commentsnew replies to my comments





Label









{}
[+]


Name*

Email*

Website

I agree to the Terms and Privacy Policy
The comment form collects your name, email and content to allow us keep track of the comments placed on the website.  Please read and accept our website Terms and Privacy Policy to post a comment.












Label









{}
[+]


Name*

Email*

Website

I agree to the Terms and Privacy Policy
The comment form collects your name, email and content to allow us keep track of the comments placed on the website.  Please read and accept our website Terms and Privacy Policy to post a comment.










This site uses Akismet to reduce spam. Learn how your comment data is processed.
1 Comment
Oldest

Newest
Most Voted Inline FeedbacksView all comments

RaveKev

6 years ago
Have you found a solution yet?
0


ReplyNewsletterInsiders are already enjoying weekly updates and complimentary whitepapers!Join them now to gain exclusive access to the latest news in the Java world, as well as insights about Android, Scala, Groovy and other related technologies.I agree to the Terms  and Privacy PolicySign up  Join Us

With 1,240,600 monthly unique visitors and over 500 authors we are placed among the top Java related sites around. Constantly being on the lookout for partners; we encourage you to join us. So If you have a blog with unique and interesting content then you should check out our JCG partners program. You can also be a guest writer for Java Code Geeks and hone your writing skills!Knowledge BaseCoursesExamplesMinibooksResourcesTutorialsPartnersMkyongThe Code Geeks Network.NET Code GeeksJava Code GeeksSystem Code GeeksWeb Code GeeksHall Of Fame“Android Full Application Tutorial” series11 Online Learning websites that you should check outAdvantages and Disadvantages of Cloud Computing – Cloud computing pros and consAndroid Google Maps TutorialAndroid JSON Parsing with Gson TutorialAndroid Location Based Services Application – GPS locationAndroid Quick Preferences TutorialDifference between Comparator and Comparable in JavaGWT 2 Spring 3 JPA 2 Hibernate 3.5 TutorialJava Best Practices – Vector vs ArrayList vs HashSetAbout Java Code GeeksJCGs (Java Code Geeks) is an independent online community focused on creating the ultimate Java to Java developers resource center; targeted at the technical architect, technical team lead (senior developer), project manager and junior developers alike. JCGs serve the Java, SOA, Agile and Telecom communities with daily news written by domain experts, articles, tutorials, reviews, announcements, code snippets and open source projects.DisclaimerAll trademarks and registered trademarks appearing on Java Code Geeks are the property of their respective owners. Java is a trademark or registered trademark of Oracle Corporation in the United States and other countries. Examples Java Code Geeks is not connected to Oracle Corporation and is not sponsored by Oracle Corporation.

Java Code Geeks and all content copyright © 2010-2022,  Exelixis Media P.C. | Terms of Use | Privacy Policy | Contact | Do not share my Personal Information

  









wpDiscuzInsert
                                                   

