what
be
technology_1
technology_2
|
packt
hub
subscription
podcast
book
&
video
path
news
sign
in
welcome
requirement_1
into
your
account
your
username
your
password
forget
your
password
password
recovery
recover
your
password
your
search
packt
hub
subscription
podcast
book
&
video
path
news
web
development
front
end
web
development
full
technology_3
web
development
component_1
side
web
development
web
design
cm
&
e
commerce
connector_data_1
requirement_2
requirement_3
requirement_4
intelligence
connector_data_1
analysis
component_2
requirement_5
io
programming
technology_4
programming
augment
reality
virtual
reality
requirement_5
game
development
cross
component_3
requirement_5
development
programming
component_4
development
technology_5
design
pattern_1
high
requirement_6
pattern_2
requirement_7
&
requirement_8
devops
requirement_7
computing
requirement_8
component_5
virtualization
quality_attribute_1
penetration
test
cybersecurity
cryptography
forensics
malware
analysis
game
development
3d
game
development
2d
game
development
game
requirement_2
game
design
game
optimization
iot
&
hardware
home
automation
robotics
single
board
component_6
3d
printing
embed
component_7
sign
in
welcome
requirement_1
into
your
account
your
username
your
password
forget
your
password
connector_1
help
password
recovery
recover
your
password
your
a
password
will
be
e
mail
to
you
home
programming
news
what
be
technology_1
technology_2
programming
newstutorials
what
be
technology_1
technology_2
by
packt
be
min
readin
this
jean
baptiste
onofré
author
of
the
book
master
technology_1
technology_2
we
will
see
how
technology_1
technology_2
originate
in
technology_1
servicemix
technology_1
servicemix
be
powered
by
the
technology_6
technology_7
and
connector_2
in
the
jbi
specification
the
technology_8
requirement_4
requirement_9
jbi
specification
propose
a
plug
and
technology_9
approach
for
requirement_9
problem
jbi
be
base
on
technology_10
concept
and
technology_11
for
instance
it
directly
reusesthe
connector_data_2
exchange
pattern_1
mep
concept
that
come
from
technology_10
description
technology_5
technology_12
technology_2
quality_attribute_2
some
of
these
concept
for
instance
you
will
see
that
we
have
the
concept
of
mep
in
technology_2
however
jbi
suffer
mostly
from
two
issue
in
jbi
all
connector_data_3
between
be
transport
in
the
normalize
connector_data_3
pattern_3
nmr
in
the
nmr
a
connector_data_2
have
a
technology_11
connector_data_4
technology_13
a
all
connector_data_3
in
the
nmr
havethe
same
technology_13
it’s
easy
to
audit
connector_data_3
and
the
technology_13
be
quality_attribute_3
however
the
jbi
connector_data_4
technology_13
have
an
important
drawback
for
requirement_6
it
need
to
marshall
and
unmarshall
the
connector_data_2
some
technology_14
such
a
pattern_4
or
technology_15
be
not
easy
to
describe
in
technology_16
for
instance
pattern_4
can
work
in
connector_3
mode
it
doesn’t
make
sense
to
marshall
streamsin
technology_16
technology_2
be
connector_data_5
agnostic
this
mean
that
you
can
transport
any
kind
of
connector_data_3
with
technology_2
not
necessary
connector_data_4
technology_13
jbi
describe
a
packaging
we
distinguish
the
bind
component_8
responsible
for
the
connector_4
with
the
component_9
outside
of
the
nmr
and
the
handle
of
the
connector_data_3
in
the
nmr
and
the
component_10
component_11
responsible
for
transform
the
connector_data_3
inside
the
nmr
however
it’s
not
possible
to
directly
quality_attribute_4
the
base
on
these
component_12
jbi
require
a
component_10
unit
a
zip
per
and
for
each
package
in
a
component_10
assembly
another
zip
jbi
also
split
the
description
of
the
from
it
configuration
it
do
not
connector_data_6
in
a
very
quality_attribute_5
packaging
with
definition
and
configuration
scatter
in
different
not
easy
to
maintain
in
technology_2
the
configuration
and
definition
of
the
be
gatheredin
a
quality_attribute_6
uri
it’s
easy
to
connector_5
moreover
technology_2
doesn’t
force
any
packaging
the
same
definition
can
be
packaged
in
a
quality_attribute_6
connector_data_4
technology_17
bundle
andregular
jar
in
addition
to
jbi
another
foundation
of
technology_2
be
the
book
requirement_10
requirement_9
pattern_1
by
gregor
hohpe
and
bobby
woolf
it
describe
design
pattern_1
answer
classical
problem
while
deal
with
requirement_10
component_4
requirement_9
and
connector_data_2
orient
technology_18
the
book
describe
the
problem
and
the
pattern_1
to
solve
them
technology_2
strive
to
connector_2
the
pattern_1
describe
in
the
book
to
make
them
easy
to
use
and
the
developer
concentrate
on
the
connector_data_7
at
hand
this
be
what
technology_2
be
an
open_source
technology_7
that
allow
you
to
quality_attribute_7
component_7
and
that
come
with
a
lot
of
connector
and
requirement_10
requirement_9
pattern_1
eip
component_8
out
of
the
component_13
and
if
that
be
not
enough
one
can
extend
and
connector_2
custom
component_12
component_8
and
component_14
support
technology_1
technology_2
ship
with
a
wide
variety
of
component_8
out
of
the
component_13
currently
there
be
more
than
component_8
quality_attribute_8
we
can
see
the
connector_6
component_8
that
allow
exposure
of
for
external
component_7
or
connector_7
with
external
component_9
for
instance
the
technology_19
technology_20
technology_21
webservices
technology_22
and
a
lot
more
component_8
be
connector_6
component_12
create
an
and
the
associate
configuration
for
these
component_8
be
easy
by
directly
use
a
uri
the
internal
component_8
apply
rule
to
the
connector_data_3
internally
to
technology_2
these
kind
of
component_8
apply
validation
or
transformation
rule
to
the
inflight
connector_data_2
for
instance
validation
or
xslt
be
internal
component_12
technology_2
bring
a
very
powerful
connector_6
and
mediation
technology_7
moreover
it’s
pretty
easy
to
create
custom
component_12
allow
you
to
extend
technology_2
if
the
default
component_8
set
doesn’t
match
your
requirement
it’s
also
very
easy
to
connector_2
complex
requirement_9
component_15
by
create
your
own
processor
and
quality_attribute_2
your
component_14
technology_2
support
component_16
technology_7
ioc
such
a
technology_6
or
blueprint
predicate
and
expression
a
we
will
see
late
most
of
the
eip
need
a
rule
definition
to
apply
a
connector_8
component_15
to
a
connector_data_2
the
rule
be
describe
use
an
expression
it
mean
that
we
have
to
define
expression
or
predicate
in
the
requirement_10
requirement_9
pattern_1
an
expression
any
kind
of
requirement_11
whereas
a
predicate
true
or
false
only
technology_2
support
a
lot
of
different
technology_5
to
declare
expression
or
predicate
it
doesn’t
force
you
to
use
one
it
allow
you
to
use
the
most
appropriate
one
for
instance
technology_2
support
technology_23
mvel
ognl
technology_24
technology_25
technology_26
technology_27
spel
technology_6
expression
technology_5
technology_28
and
so
on
a
expression
technology_5
it
also
provide
requirement_12
technology_2
prebuilt
and
technology_5
that
be
easy
to
use
such
a
constant
or
quality_attribute_6
technology_5
connector_data_1
technology_13
and
type
conversion
technology_2
be
connector_data_5
agnostic
this
mean
that
it
can
support
any
kind
of
connector_data_2
quality_attribute_9
on
the
it
could
be
require
to
convert
from
one
technology_13
to
another
that’s
why
technology_2
support
different
connector_data_1
technology_13
in
a
pluggable
way
this
mean
that
technology_2
can
marshall
or
unmarshall
a
connector_data_2
in
a
give
technology_13
for
instance
in
addition
to
the
technology_11
technology_29
serialization
technology_2
natively
support
avro
technology_30
technology_31
technology_32
xmlbeans
xstream
jibx
technology_33
and
so
on
quality_attribute_9
on
the
and
your
need
you
can
explicitly
define
the
connector_data_1
technology_13
during
the
component_17
of
the
connector_data_2
on
the
other
hand
technology_2
the
expect
technology_13
and
type
of
thanks
to
this
technology_2
look
for
a
type
converter
allow
to
implicitly
transform
a
connector_data_2
from
one
technology_13
to
another
you
can
also
explicitly
define
the
type
converter
of
your
choice
at
some
point
during
the
component_17
of
the
connector_data_2
technology_2
provide
a
set
of
ready
to
use
type
converter
but
a
technology_2
support
a
pluggable
component_18
you
can
extend
it
by
provide
your
own
type
converter
it’s
a
quality_attribute_6
pojo
to
connector_2
easy
configuration
and
uri
technology_2
u
a
different
approach
base
on
uri
the
itself
and
it
configuration
be
on
the
uri
the
uri
be
human
readable
and
provide
the
detail
of
the
which
be
the
component_12
and
the
configuration
a
this
uri
be
part
of
the
complete
configuration
which
define
what
we
name
a
connector_9
a
we
will
see
late
it’s
possible
to
have
a
complete
overview
of
the
requirement_9
component_15
and
connector_6
in
a
row
lightweight
and
different
deployment
topology
technology_2
itself
be
very
light
the
technology_2
core
be
only
around
connector_data_8
and
contain
everythingrequired
to
run
technology_2
a
it’s
base
on
a
pluggable
architecture
all
technology_2
component_8
be
provide
a
external
allow
you
to
install
only
what
you
need
without
instal
superfluous
and
needlessly
heavy
technology_2
be
base
on
quality_attribute_6
pojo
which
mean
that
the
technology_2
core
doesn’t
quality_attribute_9
on
other
technology_7
it’s
an
atomic
technology_7
and
be
ready
to
use
all
other
component_12
dsl
and
so
on
be
build
on
top
of
this
technology_2
core
moreover
technology_2
be
not
tie
to
one
container
for
deployment
technology_2
support
a
wide
range
of
container
to
run
they
be
a
follow
a
j2ee
component_4
component_1
such
a
technology_34
technology_35
technology_36
and
so
on
a
web
container
such
a
technology_1
technology_37
an
technology_17
container
such
a
technology_1
karaf
a
standalone
component_4
use
technology_7
such
a
technology_6
technology_2
give
a
lot
of
quality_attribute_10
allow
you
to
embed
it
into
your
component_4
or
to
use
an
requirement_10
ready
container
quick
prototyping
and
test
support
in
any
requirement_9
project
it’s
typical
that
we
have
some
part
of
the
requirement_9
component_15
not
yet
quality_attribute_8
for
instance
the
component_4
to
quality_attribute_7
with
have
not
yet
be
purchase
or
not
yet
ready
the
remote
component_9
to
quality_attribute_7
with
have
a
heavy
cost
not
acceptable
during
the
development
phase
multiple
team
work
in
parallel
so
we
have
some
kind
of
deadlock
between
the
team
a
a
complete
requirement_9
technology_7
technology_2
provide
a
very
easy
way
to
prototype
part
of
the
requirement_9
component_15
even
if
you
don’t
have
the
actual
component_9
to
quality_attribute_7
you
can
simulate
this
component_9
mock
a
it
allow
you
to
connector_2
your
requirement_9
component_15
without
wait
for
connector_10
the
mock
support
be
directly
part
of
the
technology_2
core
and
doesn’t
require
any
additional
connector_10
along
the
same
line
test
be
also
crucial
in
an
requirement_9
project
in
such
a
kind
of
project
a
lot
of
error
can
happen
and
most
be
unforeseen
moreover
a
small
connector_11
in
an
requirement_9
component_17
might
impact
a
lot
of
other
component_17
technology_2
provide
the
technology_38
to
easily
test
your
design
and
requirement_9
component_15
allow
you
to
quality_attribute_7
this
in
a
continuous
requirement_9
component_3
requirement_13
and
pattern_5
use
technology_21
technology_1
technology_2
u
the
technology_8
requirement_13
extension
technology_21
technology_11
and
provide
a
lot
of
insight
into
the
component_9
use
mbeans
requirement_13
component_14
provide
a
detail
pattern_6
of
the
follow
current
component_9
the
different
requirement_9
component_19
with
the
associate
metric
the
different
component_8
and
with
the
associate
metric
moreover
these
mbeans
provide
more
insight
than
metric
they
also
provide
the
to
manage
technology_2
for
instance
the
allow
you
to
stop
an
requirement_9
component_17
to
suspend
an
and
so
on
use
a
combination
of
metric
and
you
can
configure
a
very
agile
requirement_9
solution
active
the
technology_1
technology_2
be
very
active
this
mean
that
potential
issue
be
identify
very
quickly
and
a
fix
be
quality_attribute_8
soon
after
however
it
also
mean
that
a
lot
of
idea
and
contribution
be
propose
give
more
and
more
feature
to
technology_2
another
big
advantage
of
an
active
be
that
you
will
never
be
alone
a
lot
of
people
be
active
on
the
mailing
connector_data_9
who
be
ready
to
answer
your
question
and
provide
advice
summary
technology_1
technology_2
be
an
requirement_10
requirement_9
solution
use
in
many
large
organization
with
requirement_10
support
quality_attribute_8
through
redhat
or
talend
resource
for
further
resource
on
this
subject
connector_12
start
a
quick
start
guide
to
technology_39
best
practice
connector_13
twitter
linkedin
packt
leave
a
connector_data_10
cancel
connector_data_10
please
enter
your
please
enter
your
name
here
you
have
enter
an
incorrect
connector_14
please
enter
your
connector_14
here
connector_15
my
name
and
in
this
browser
for
the
next
time
i
must
connector_5
in
programming
programming
news
essential
linux
command
for
navigate
the
shell
effectively
expert
requirement_8
be
once
we
how
to
quality_attribute_4
an
ubuntu
component_1
how
to
manage
component_20
and
how
to
manage
package
we
should
take
a
moment
clean
cod
in
technology_24
with
mariano
anaya
be
explore
form
in
angular
–
type
benefit
and
difference
be
interviewsartificial
intelligence
newslearn
transformer
for
natural
technology_5
component_17
with
denis
rothmanexpert
requirement_8
am0high
requirement_6
newsclean
cod
in
technology_24
with
mariano
anayaexpert
requirement_8
am0data
newsunderstanding
the
fundamental
of
requirement_14
team
with
john
k
thompsonexpert
requirement_8
am0blockchain
technologyimran
bashir
on
the
fundamental
of
blockchain
it
myth
and
an
ideal
path
for
beginnersexpert
requirement_8
pm0artificial
intelligence
newsbringing
requirement_2
to
the
b2b
world
catch
up
with
sidetrade
cto
mark
sheldon
packt
editorial
staff
am0
editor
pick
transformer
for
natural
technology_5
component_17
with
denis
rothman
be
essential
linux
command
for
navigate
the
shell
effectively
be
clean
cod
in
technology_24
with
mariano
anaya
be
popular
how
to
use
connector_data_11
and
dictionary
in
unity
for
3d
pm
customize
elgg
theme
be
basic
of
jupyter
notebook
and
technology_24
be
popular
categorytutorials6371news3891data
news2761web
development
news2259programming
news1770cloud
&
requirement_8
news1247insights1134artificial
intelligence
news1052cms
&
e
commerce
news842
about
ustechnology
news
analysis
and
from
packt
stay
up
to
date
with
what’s
important
in
engineering
today
u
protect
follow
u
author
become
a
contributor
to
the
hub
©
packt
publish
ltd
