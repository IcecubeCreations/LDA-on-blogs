technology_1
technology_2
or
technology_3
which
pattern_1
connector_data_1
pattern_2
to
choose
menumenucontact
ussign
in
menumenuuse
requirement_1
put
connector_data_2
to
work
with
innovative
quality_attribute_1
component_1
solution
explore
use
requirement_1
smart
citiessafety
&
emergencyfleet
managementmapping
&
planningremote
diagnosticspredictive
quality_attribute_2
ev
servicesinnovative
insurancelocation
intelligenceconstruction
equipmentconcierge
servicesmedia
measurement
traffic
managementmobility
intelligenceev
intelligencemaas
intelligenceurban
intelligenceparking
solution
component_2
&
privacy
ready
for
connector_1
car
connector_data_2
connector_data_3
sample
connector_data_2
platformfleet
solutionsdynamic
blur
engineconsent
requirement_2
neutral
servercar
connector_data_2
apisecurity
privacy
policydriver
pledgegdprmarketplace
privacy
connector_data_2
enrich
traffic
infowith
real
time
&historical
vehicle
connector_data_2
download
datasheet
automotive
datatraffic
datamobility
intelligenceroad
sign
datahazard
connector_data_2
construction
equipment
dataoems
fleet
datacommercial
fleet
databmw
cardatabmw
cardata
for
fleet
avis
budget
group
dataelectric
vehicle
datamercedes
benz
connector_data_2
resource
connector_data_2
drive
drive
component_3
attitiudesabout
connector_2
quality_attribute_1
download
report
report
&
papersbrochurescase
studiesdatasheetsvideos
&
podcast
what
be
connector_1
car
connector_data_2
japanese
resource
developersdocumentationglossary
blogabout
u
otonomo
be
hire
join
the
team
leadershipcompanyinvestors
newscareersevents
sign
in
use
requirement_1
smart
city
fleet
requirement_2
quality_attribute_3
&
emergency
connector_data_4
&
plan
quality_attribute_1
intelligence
urban
intelligence
ev
intelligence
maas
intelligence
ev
component_4
predictive
quality_attribute_2
innovative
insurance
location
intelligence
remote
diagnostics
parking
solution

measurement
concierge
component_4
traffic
requirement_2
construction
equipment
component_2
&
privacy
component_2
dynamic
blur
component_5
requirement_2
fleet
solution
driver
pledge
privacy
requirement_3
gdpr
marketplace
privacy
neutral
component_6
quality_attribute_4
car
connector_data_2
component_7
connector_data_2
automotive
connector_data_2
traffic
connector_data_2
quality_attribute_1
intelligence
road
sign
connector_data_2
hazard
connector_data_2
electric
vehicle
connector_data_2
oems
fleet
connector_data_2
commercial
fleet
connector_data_2
construction
equipment
connector_data_2
bmw
cardata
bmw
cardata
for
fleet
mercedes
benz
connector_data_2
avis
budget
group
connector_data_2
resource
report
&
paper
brochure
requirement_1
study
datasheets
video
&
podcast
what
be
connector_1
car
connector_data_2
glossary
japanese
resource
developer
documentation
about
u
leadership
requirement_4
investor
news
career
sign
in
use
requirement_1
smart
city
fleet
requirement_2
quality_attribute_3
&
emergency
connector_data_4
&
plan
quality_attribute_1
intelligence
urban
intelligence
ev
intelligence
maas
intelligence
ev
component_4
predictive
quality_attribute_2
innovative
insurance
location
intelligence
remote
diagnostics
parking
solution

measurement
concierge
component_4
traffic
requirement_2
construction
equipment
component_2
&
privacy
component_2
dynamic
blur
component_5
requirement_2
fleet
solution
driver
pledge
privacy
requirement_3
gdpr
marketplace
privacy
neutral
component_6
quality_attribute_4
car
connector_data_2
component_7
connector_data_2
automotive
connector_data_2
traffic
connector_data_2
quality_attribute_1
intelligence
road
sign
connector_data_2
hazard
connector_data_2
electric
vehicle
connector_data_2
oems
fleet
connector_data_2
commercial
fleet
connector_data_2
construction
equipment
connector_data_2
bmw
cardata
bmw
cardata
for
fleet
mercedes
benz
connector_data_2
avis
budget
group
connector_data_2
resource
report
&
paper
brochure
requirement_1
study
datasheets
video
&
podcast
what
be
connector_1
car
connector_data_2
glossary
japanese
resource
developer
documentation
about
u
leadership
requirement_4
investor
news
career
sign
in
technology_1
technology_2
or
technology_3
which
pattern_1
connector_data_1
pattern_2
to
choose
when
use
pattern_3
connector_3
for
pattern_1
it
be
common
to
use
a
connector_data_1
pattern_2
a
pattern_2
ensure
connector_3
between
different
pattern_1
be
quality_attribute_5
and
quality_attribute_6
that
the
connector_data_5
be
manage
and
pattern_4
within
the
component_8
and
that
connector_data_5
don’t
connector_4
lose
there
be
a
few
connector_data_1
pattern_2
you
can
choose
from
vary
in
quality_attribute_7
and
connector_data_2
capability
this
will
compare
the
three
most
popular
pattern_2
technology_3
technology_2
and
technology_1
but
first
let’s
about
pattern_1
connector_3
pattern_1
connector_3
pattern_5
and
asynchronousthere
be
two
common
way
pattern_1
connector_5
with
each
other
pattern_5
and
pattern_3
in
a
pattern_5
connector_3
the
caller
wait
for
a
connector_6
before
connector_7
the
next
connector_data_1
and
it
operate
a
a
pattern_6
technology_4
on
top
of
technology_5
on
the
contrary
in
an
pattern_3
connector_3
the
connector_data_5
be
connector_8
without
wait
for
a
connector_6
this
be
suit
for
quality_attribute_8
component_8
and
usually
require
a
connector_data_1
pattern_2
to
manage
the
connector_data_1
the
type
of
connector_3
you
choose
should
consider
different
parameter
such
a
how
you
connector_data_6
your
pattern_1
what
infrastructure
you
have
in
place
quality_attribute_9
quality_attribute_7
connector_9
and
the
purpose
of
the
connector_3
pattern_3
connector_3
be
more
complicate
to
establish
and
require

more
component_9
to
technology_6
but
the
advantage
of
use
pattern_3
connector_3
for
pattern_1
outweigh
the
con
pattern_3
connector_3
advantagesfirst
and
foremost
pattern_3
connector_3
be
pattern_7
by
definition
it
also
support
quality_attribute_10
quality_attribute_11
than
pattern_5

third
in
the
pattern_8
crash
pattern_3
connector_3
mechanism
provide
various
recovery
technique
and
be
generally
quality_attribute_10
at
handle
error
pertain
to
the
crash
in
addition
when
use
pattern_2
instead
of
a
pattern_6
technology_4
the
component_4
connector_10
connector_3
don’t
really
need
to
each
other
a
component_1
can
even
be
introduce
after
an
old
one
have
be
run
for
a
long
time
i
e
quality_attribute_10
decouple
component_1
finally
when
choose
pattern_3

you
increase
your
capability
of
create
a
central
discovery
pattern_4
load
balance
or
even
requirement_3
enforcer
in
the
future
this
will
provide
you
with
ability
for
quality_attribute_12
quality_attribute_13
and
more
capability
in
your
and
component_8
build
choose
the
right
connector_data_1
brokerasynchronous
connector_3
be
usually
manage
through
a
connector_data_1
pattern_2
there
be
other
way
a
well
such
a
aysncio
but
they’re
more
scarce
and
limit
when
choose
a
pattern_2
for
connector_11
your
pattern_3

you
should
consider
a
few
thing
pattern_2
quality_attribute_7
–
the
number
of
connector_data_5
connector_8
per
second
in
the
component_8
connector_data_2
persistency
–
the
ability
to
recover
connector_data_1
component_3
capability
–
whether
the
pattern_2
be
capable
of
manage
one
to
one
and
or
one
to
many
component_3
one
to
oneone
to
many
we
connector_12
out
the
late
and
greatest
component_4
out
there
in
order
to
find
out
which
technology_7
be
the
strong
within
these
three
category
compare
different
connector_data_1
brokersrabbitmq
technology_8
quality_attribute_7
base
on
configuration
and
resource
the
ballpark
here
be
around
50k
msg
per
second
persistency
both
persistent
and
transient
connector_data_5
be
support
one
to
one
vs
one
to
many
component_3
both
technology_3
be
release
in

and
be
one
of
the
first
common
connector_data_1
pattern_2
to
be
create
it’s
an
open_source
that
connector_13
connector_data_5
through
both
point
to
point
and
pattern_9
by
connector_14
advance
connector_data_1
pattern_10
technology_4
technology_8
it’s
design
to
support
complex
connector_15
component_10
there
be
some
manage
component_4
that
allow
you
to
use
it
a
a
pattern_11
but
it’s
not
part
of
the
requirement_5
major
requirement_6
technology_7
technology_6
technology_3
support
all
major
technology_9
include
technology_10
technology_11
net
technology_12
technology_13
technology_14
go
technology_15
and
more
expect
some
requirement_7
issue
when
in
persistent
mode
kafkascale
can
connector_16
up
to
a
million
connector_data_5
per
second
persistency
yes
one
to
one
vs
one
to
many
component_3
only
one
to
many
seem
strange
at
first
glance
right
technology_2
be
create
by
linkedin
in

to
handle
high
quality_attribute_14
low
quality_attribute_9
component_11
a
a
quality_attribute_8
connector_17
component_2
technology_2
replicate
a
pattern_12
component_1
it
provide
connector_data_2
persistency
and
connector_18
connector_19
of
component_12
that
render
it
capable
of
exchange
quality
connector_data_1
technology_2
have
manage
pattern_11
on
technology_16
technology_17
and
confluent
they
be
all
the
creator
and
contributor
of
the
technology_2
project
technology_2
support
all
major
technology_9
include
technology_10
technology_11
technology_18
technology_19
technology_20
net
technology_12
technology_13
technology_14
go
technology_15
and
more
redisscale
can
connector_16
up
to
a
million
connector_data_5
per
second
persistency
basically
no
–
it’s
an
in
memory
component_13
one
to
one
vs
one
to
many
component_3
both
technology_1
be
a
bit
different
from
the
other
connector_data_1
pattern_2
at
it
core
technology_1
be
an
in
memory
connector_data_2
component_14
that
can
be
use
a
either
a
high
requirement_7
key
requirement_8
component_14
or
a
a
connector_data_1
pattern_2
another
difference
be
that
technology_1
have
no
persistency
but
rather
connector_20
it
memory
into
a
disk
db
it’s
also
perfect
for
real
time
connector_data_2
component_11
originally
technology_1
be
not
one
to
one
and
one
to
many
however
since
technology_1


introduce
the
pub
sub
capability
technology_21
and
one
to
many
become
a
real
option
connector_data_1
pattern_2
per
use
casewe
cover
some
characteristic
of
technology_3
technology_2
and
technology_1
all
three
be
beast
in
their
category
but
a
describe
they
operate
quite
differently
here
be
our
recommendation
for
the
right
connector_data_1
pattern_2
to
use
accord
to
different
use
requirement_1
short
live
connector_data_1
redisredis’s
in
memory
component_15
be
an
almost
perfect
fit
for
use
requirement_1
with
short
live
connector_data_5
where
persistence
isn’t
require
because
it
provide
extremely
fast
component_1
and
in
memory
capability
technology_1
be
the
perfect
candidate
for
short
retention
connector_data_5
where
persistence
isn’t
so
important
and
you
can
tolerate
some
loss
with
the
release
of
technology_1
connector_19
in


it’s
also
a
candidate
for
one
to
many
use
requirement_1
which
be
definitely
need
due
to
limitation
and
old
pattern_9
capability
large
amount
of
connector_data_2
kafkakafka
be
a
high
quality_attribute_14
quality_attribute_8
component_16
that’s
build
for
connector_21
a
large
amount
of
connector_data_2
for
long
period
of
time
technology_2
be
ideal
for
one
to
many
use
requirement_1
where
persistency
be
require
complex
connector_22
rabbitmqrabbitmq
be
an
old
yet
mature
pattern_2
with
a
lot
of
feature
and
capability
that
support
complex
connector_22
it
will
even
support
complex
connector_15
connector_3
when
the
require
rate
be
not
high
more
than
a
few
ten
of
thousand
msg
sec
consider
your
stackthe
final
consideration
of

be
your
current
technology_6
if
you’re
look
for
a
relatively
easy
requirement_9
component_11
and
you
don’t
want
to
maintain
different
pattern_2
in
a
technology_6
you
might
be
more
incline
to
work
with
a
pattern_2
that
be
already
support
by
your
technology_6
for
example
if
you’re
use
technology_22
for
connector_data_7
component_16
in
your
component_8
on
top
of
technology_3
you’ll
have
an
incentive
to
work
with
technology_3
or
technology_1
a
oppose
to
technology_2
who
be
not
support
and
would
require
some
rewrite
we
at
otonomo
have
use
all
the
above
through
our
component_2
evolution
and
growth
and
then
some
it’s
important
to
remember
that
each
technology_23
have
it
own
pro
&
con
and
it’s
about
understand
them
and
choose
the
right
technology_23
for
the
and
that
specific
moment
situation
and
requirement
more
for
developer
otonomo
be
more
than
a
car
connector_data_2
exchange
connector_23
these

connector_24
by
developer
for
developer
about
cod
technology_24
and
culture
technology_25
pattern_13
apply
at
large
quality_attribute_7
–
challenge
pitfall
and
solutionsthe
ultimate
guide
for
technology_25
pattern_13
and
technology_25
memory
to
apply
technology_25
pattern_13
on
production
with
confidence
for
large
quality_attribute_7
of
connector_data_2
everything
technology_25
pattern_13
connector_23
moreofek
hodnovember

2021@otonomo
an
innovative
approach
to
deliveryin
our
behind
the
scene
otonomo
series
we
talk
to
people
from
across
the
otonomo
family
to
hear
what
make
their
unique
and
the
innovative
way
they
take
on
their
role
within
the
requirement_4
connector_23
morenir
nahum
engineering
team
leaderjune

2021how
we
run
ci
cd
in
our
development
component_11
newwe
develop
a
ci
cd
pipeline
to
assist
our
r&d
connector_25
time
when
merge
to
the
master
branch
about
our
environment
challenge
requirement_6
requirement_10
and
moreread
moredanny
gitelmanaugust

2019luigi
airflow
pinball
and
chronos
compare
workflow
requirement_2
systemsa
comparison
of
luigi
airflow
pinball
and
chronos
choose
the
best
workflow
requirement_2
component_8
for
your
automate
base
on
feature
and
ability
connector_23
morehilla
shapirajune

2019how
to
count
large
quality_attribute_7
geohashesa
brand
quality_attribute_15
way
to
count
geohashes
in
any
give
region
at
any
level
even
in
continent
how
you
can
now
analyze
geohashes
properly
connector_23
moreitamar
landsmanjune

2019deleting
mattersdeleting
part
of
your
be
hard
but
necessary
connector_23
how
keep
your
short
be
quality_attribute_10
for
quality_attribute_2
reduce
bug
etc
and
best
practice
connector_23
moretzahi
furmanskimay

2019redis
technology_2
or
technology_3
which
pattern_1
connector_data_1
pattern_2
to
choose
choose
the
best
pattern_1
connector_data_1
pattern_2
for
your
connector_3
need
connector_23
this
comparison
of
technology_1
technology_2
and
technology_3
and
become
an
expert
connector_23
moresefi
itzkovich
ctomay


worldwide
headquarters

abba
eban
blvd
herzeliya
pituach
israel
otonomo
inc

fillmore
st
#380

san
francisco
ca

otonomo
gmbh
westendstr

frankfurt
a
m

germany
use
casessmart
city
quality_attribute_3
&
emergency
fleet
requirement_2
connector_data_4
&
plan
electric
vehicle
ev
component_4
innovative
insurance
location
intelligence
remote
diagnostics
traffic
requirement_2
parking
solution
predictive
quality_attribute_2

measurement
concierge
component_4
construction
equipment
dataautomotive
connector_data_2
traffic
connector_data_2
road
sign
hazard
connector_data_2
construction
equipment
connector_data_2
electric
vehicle
connector_data_2
bmw
cardata
bmw
cardata
for
fleet
mercedes
benz
avis
budget
group
component_2
&
servicesplatform
dynamic
blur
component_5
requirement_2
neutral
component_6
car
connector_data_2
component_7
use
requirement_1
privacydriver
pledge
gdpr
privacy
requirement_3
quality_attribute_4
requirement_3
driver
privacy
right
portal
privacy
and
quality_attribute_4
statement
resourcesblog
resource
japanese
resource
what
be
connector_1
car
connector_data_2
documentation
car
connector_data_2
component_7
aboutleadership
requirement_4
investor
news
u
career
connector_4
connector_data_8
keep
in
touch
info@otonomo
io
©
otonomo
all
right
reserve
term
of
use
requirement_3
all
connector_data_4
image
attribute
to
©mapbox
facebooktwitterlinkedin
