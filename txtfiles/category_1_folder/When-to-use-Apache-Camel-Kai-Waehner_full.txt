when
to
use
technology_1
technology_2
kai
waehner
home
highlight
activity
talk
at
international
conference
video
component_1
publication
requirement_1
requirement_1
technology_1
technology_3
requirement_2
requirement_3
intelligence
deep
technology_4
in
memory
jupyter
requirement_4
technology_5
open_source
technology_6
connector_1
technology_7
social
requirement_5
technology_8
requirement_6
requirement_6
technology_1
mesos
requirement_6
requirement_7
technology_9
technology_10
open_source
persistence
component_2
mesh
internet
of
thing
internet
of
thing
requirement_2
iiot
technology_11
open_source
plc4x
requirement_8
requirement_8
component_3
requirement_9
component_4
component_5
blockchain
bpm
eai
esb
it
certification
it
conference
technology_12
jee
pattern_1
pattern_2
technology_13
open_source
technology_1
technology_6
technology_6
connector_2
persistence
component_2
mesh
pattern_3
social
requirement_5
web
technology_14
connector_3
component_6
connector_3
component_6
technology_1
technology_6
requirement_2
confluent
technology_6
connector_2
technology_6
connector_1
ksql
persistence
about
me
stay
in
technology_15
evangelist
–
requirement_2
requirement_1
–
technology_13
–
technology_1
technology_6
technology_15
evangelist
–
requirement_2
requirement_1
–
technology_13
–
technology_1
technology_6
home
highlight
activity
talk
at
international
conference
video
component_1
publication
requirement_1
requirement_6
internet
of
thing
requirement_8
connector_3
component_6
technology_1
sparkbig
databusiness
intelligencedeep
learninghadoopin
memoryjupyterkafka
streamsmachine
learningnosqlopen
sourcepythonsocial
networktensorflow
technology_1
mesoscloud
nativedockerkubernetesopen
sourcepersistenceservice
mesh
big
dataiiotmqttopen
sourceplc4x
technology_1
kafkaapi
managementapplication
serverblockchainbpmeaiesbit
certificationsit
conferencesjava
jeekafka
connectmessagingmicroservicesmiddlewareopen
sourcepersistenceservice
meshsoasocial
networkweb
technology_14
technology_1
kafkabig
dataconfluentkafka
connectkafka
streamsksqlpersistence
about
me
stay
in
search
for
search
component_4
component_5
eai
esb
technology_12
jee
pattern_3
when
to
use
technology_1
technology_2
minute
connector_4
technology_1
technology_2
be
one
of
my
favorite
open_source
technology_14
in
the
technology_16
technology_12
environment
it
enable
easy
requirement_8
of
different
component_7
which
use
several
technology_17
and
technology_15
this
show
when
to
use
technology_1
technology_2
and
when
to
use
other
alternative
bykai
waehner2
total
connector_5
connector_6
people
connector_7
the
story
technology_1
technology_2
be
one
of
my
favorite
open_source
technology_14
in
the
technology_16
technology_12
environment
it
enable
easy
requirement_8
of
different
component_7
which
use
several
technology_17
and
technology_15
this
show
when
to
use
technology_1
technology_2
and
when
to
use
other
alternative
the
problem
requirement_10
component_4
requirement_8
eai
requirement_10
component_4
requirement_8
be
necessary
in
almost
every
requirement_11
due
to
technology_18
and
component_4
quality_attribute_1
these
component_7
create
several
problem
paradigm
come
up
every
decade
for
example
component_8
component_5
connector_8
pattern_4
architecture
technology_19
or
requirement_6
computing
besides
different
technology_17
and
technology_15
emerge
instead
of
connector_9
connector_data_1
in
in
the
past
many
year
ago
technology_20
component_9
be
use
often
today
sometimes
even
technology_5
component_9
be
require
in
some
usecases
pattern_5
remote
connector_data_2
or
pattern_6
pattern_1
be
use
to
connector_10
via
several
technology_15
such
a
technology_21
technology_22
web
component_2
pattern_7
or
technology_23
a
lot
of
silo
exist
nevertheless
all
component_7
and
technology_18
of
these
decade
have
to
connector_10
with
each
other
to
work
together
perfectly
requirement_10
requirement_8
pattern_8
eip
of
you
could
reinvent
the
wheel
for
each
problem
connector_11
some
spaghetti
and
the
component_7
work
together
unfortunately
your
requirement_9
will
not
the
long
term
perspective
of
this
solution
requirement_10
requirement_8
pattern_8
www
eaipatterns
technology_24
help
to
fragment
problem
and
use
standardize
way
to
quality_attribute_1
component_4
use
these
you
always
use
the
same
concept
to
transform
and
connector_12
connector_data_3
thus
it
be
a
quality_attribute_2
idea
to
forget
about
reinvent
the
wheel
each
time
you
have
a
problem
alternative
for
quality_attribute_1
component_10
three
alternative
exist
for
quality_attribute_1
component_4
eips
can
be
use
in
each
solution
solution
own
custom
solution
connector_13
a
individual
solution
that
work
for
your
problem
without
separate
problem
into
little
piece
this
work
and
be
probably
the
fast
alternative
for
small
use
requirement_12
you
have
to
all
by
yourself
quality_attribute_3
will
probably
be
high
if
team
member
connector_14
solution
requirement_8
technology_14
use
a
technology_14
which
help
to
quality_attribute_1
component_7
in
a
standardize
way
use
several
requirement_8
pattern_8
it
reduce
effort
a
lot
every
developer
will
easily
understand
what
you
do
if
he
the
use
technology_14
solution
requirement_10
component_2
bus
esb
use
an
requirement_10
component_2
bus
to
quality_attribute_1
your
component_4
under
the
hood
the
esb
also
u
an
requirement_8
technology_14
but
there
be
much
more
requirement_13
such
a
requirement_3
component_6
requirement_9
a
registry
or
requirement_3
activity
pattern_9
you
can
usually
configure
connector_15
and
such
stuff
within
a
graphical
component_11
–
you
have
to
decide
at
your
own
if
that
reduce
complexity
and
effort
usually
an
esb
be
a
complex
technology_18
the
curve
be
much
high
but
therefore
you
connector_16
a
very
powerful
technology_25
which
should
offer
all
your
need
what
be
technology_1
technology_2
technology_1
technology_2
be
a
lightweight
requirement_8
technology_14
which
connector_17
all
eips
thus
you
can
easily
quality_attribute_1
different
component_7
use
the
require
pattern_8
you
can
use
technology_12
technology_26
technology_27
technology_28
or
technology_29
almost
every
technology_15
you
can
imagine
be
quality_attribute_4
for
example
technology_30
technology_31
technology_23
technology_32
technology_33
technology_21
technology_23
technology_34
technology_35
technology_36
and
many
many
more
of
most
esbs
also
offer
support
for
them
besides
own
custom
component_12
can
be
create
very
easily
you
can
quality_attribute_5
technology_1
technology_2
a
standalone
component_4
in
a
web
container
e
g
technology_37
or
technology_38
in
a
jee
component_4
component_5
e
g
technology_39
a
or
technology_40
a
in
an
technology_41
environment
or
in
combination
with
a
technology_26
container
if
you
need
more
connector_data_4
about
technology_1
technology_2
please
go
to
it
web
a
start
point
technology_30
technology_2
technology_1
this
be
no
technical
introduction
j
when
to
use
technology_1
technology_2
technology_1
technology_2
be
awesome
if
you
want
to
quality_attribute_1
several
component_7
with
different
technology_17
and
technology_15
why
there
be
one
feature
besides
support
so
many
technology_15
and
besides
support
different
programming
technology_42
which
i
really
appreciate
a
lot
every
requirement_8
u
the
same
concept
no
matter
which
technology_17
you
use
no
matter
which
technology_15
you
use
no
matter
which
domain
specific
technology_42
dsl
you
use
–
it
can
be
technology_12
technology_43
technology_29
or
technology_26
technology_27
you
do
it
the
same
way
always
there
be
a
component_13
there
be
a
component_14
there
be
there
be
eips
there
be
custom
processor
component_15
e
g
for
custom
transformation
and
there
be
parameter
e
g
for
credential
here
be
one
example
which
contain
all
of
these
concept
use
the
technology_12
dsl
from
„activemq
orderqueue“
transaction
requirement_14
„processing
order“
to
mock
“notyetexistinginterface“
now
let’s
look
at
another
example
use
the
technology_28
dsl
„file
incomingorders
noop=true“
component_6
transformationprocessor
to
„jdbc
orderdatastore“
if
you
be
a
developer
you
should
be
able
to
recognize
what
these
connector_18
do
don’t
you
two
other
very
important
feature
be
the
support
for
error
handle
e
g
use
a
dead
letter
component_16
and
automatic
test
you
can
test
everything
very
easily
use
a
technology_2
extension
of
junit
and
again
you
always
use
the
same
concept
no
matter
which
technology_15
you
have
to
support
technology_1
technology_2
be
mature
and
production
ready
it
offer
quality_attribute_6
transaction
support
pattern_10
and
pattern_9
commercial
support
be
quality_attribute_4
by
fusesource
technology_30
fusesource
technology_24
technology_18
requirement_10
technology_2
when
not
to
use
technology_1
technology_2
well
yes
there
exist
some
use
requirement_12
where
i
would
not
use
technology_1
technology_2
i
have
illustrate
this
in
the
follow
graphic
remember
the
three
alternative
i
mention
above
own
custom
requirement_8
requirement_8
technology_14
requirement_10
component_2
bus
if
you
have
to
quality_attribute_1
one
or
two
technology_15
e
g
connector_19
a
or
connector_20
a
technology_44
connector_data_3
it
be
probably
much
easy
and
fast
to
use
some
well
technology_45
such
a
technology_1
technology_46
io
or
technology_26
jmstemplate
but
please
do
always
use
these
helper
pure
or
technology_44
requirement_8
with
try
catch
error
be
soooo
ugly
although
fusesource
offer
commercial
support
i
would
not
use
technology_1
technology_2
for
very
large
requirement_8
project
an
esb
be
the
right
technology_25
for
this
in
most
requirement_12
it
offer
many
additional
feature
such
a
bpm
or
bam
of
you
could
also
use
several
single
technology_14
or
technology_18
and
„create“
your
own
esb
but
this
be
a
waste
of
time
and
money
in
my
opinion
several
production
ready
esbs
be
already
quality_attribute_4
usually
open_source
solution
be
more
lightweight
than
commercial
technology_18
such
a
technology_40
connector_data_3
pattern_11
you
probably
need
a
day
or
two
to
install
the
evaluation
version
of
this
technology_18
well
open_source
esbs
be
technology_1
servicemix
technology_47
esb
and
technology_48
esb
by
the
way
do
you
that
some
esb
base
on
the
technology_1
technology_2
technology_14
e
g
technology_1
component_2
mix
and
the
talend
esb
thus
if
you
technology_1
technology_2
you
could
also
use
technology_1
servicemix
or
the
commercial
fuse
esb
which
be
base
on
servicemix
conclusion
technology_1
technology_2
be
an
awesome
technology_14
to
quality_attribute_1
component_7
with
different
technology_15
the
best
thing
be
that
you
always
use
the
same
concept
besides
support
for
many
many
technology_15
quality_attribute_2
error
handle
and
easy
automatic
test
make
it
ready
for
requirement_8
project
because
the
number
of
component_7
and
technology_15
in
each
requirement_11
will
increase
further
technology_1
technology_2
have
a
great
future
today
we
have
component_4
silo
in
ten
year
we
will
probably
have
requirement_6
silo
which
be
quality_attribute_5
in
goggle
component_17
component_18
technology_49
ec3
or
any
other
requirement_6
component_2
so
i
hope
that
technology_1
technology_2
will
not
oversleep
to
be
ready
for
the
requirement_6
era
too
e
g
by
offer
component_12
to
connector_2
to
requirement_6
technology_14
easily
but
that’s
future…
at
the
moment
you
really
should
try
this
technology_14
out
if
you
have
to
quality_attribute_1
component_7
in
the
technology_16
technology_12
environment
by
the
way
i
that
i
praise
technology_2
in
this
but
i
be
neither
a
technology_2
committer
nor
work
for
fusesource
i
really
this
technology_14
best
regard
kai
wähner
twitter
@kaiwaehner
total
connector_5
connector_6
tweet
pin
it
please
leave
this
emptydont‘
miss
my
next
subscribe
we
don’t
spam
connector_4
more
in
our
privacy
requirement_15
connector_21
your
inbox
or
spam
folder
to
confirm
your
subscription
relate
tagsapache
camelcameleaienterprise
component_4
integrationesbj2eejavajeesoasystem
requirement_8
kai
waehner
build
requirement_6
requirement_7
connector_22
infrastructure
for
real
time
connector_data_1
component_6
and
requirement_1
jeff
phillips
say
at
nice
do
you
have
experience
with
technology_26
requirement_8
so
you
could
contrast
it
with
technology_1
technology_2
connector_data_5
kai
wähner
say
at
hey
jeff
i
do
not
have
experience
in
a
project
with
technology_26
requirement_8
my
personal
opinion
be
that
technology_2
have
an
easy
fluent
component_3
especially
the
technology_12
technology_28
dsl
you
can
quality_attribute_1
several
technology_17
without
cod
a
lot
technology_26
requirement_8
could
also
do
the
but
i
do
not
the
technology_26
programming
component_19
–
i
need
much
more
technology_27
configuration
thus
if
you
already
use
a
technology_26
project
which
u
several
other
technology_26
project
then
i
would
at
least
evaluate
technology_26
requirement_8
too
in
all
other
requirement_12
i
would
choose
technology_2
a
requirement_8
technology_14
have
a
great
neutral
comparison
of
technology_26
requirement_8
and
technology_2
unfortunately
not
use
the
technology_12
dsl
for
technology_2
technology_30
technology_12
technology_24
technology_26
requirement_8
and
technology_1
best
regard
kai
wähner
twitter
@kaiwaehner
connector_data_5
diwakar
say
at
hi
quality_attribute_2
well
open_source
esbs
be
technology_1
servicemix
technology_47
esb
and
technology_48
esb
when
you
mention
technology_1
servicemix
esb
be
refer
to
servicemix
x
jbi
or
servicemix
x
technology_50
please
me
your
with
best
regard
diwakar
connector_data_5
kai
wähner
say
at
hey
diwakar
i
and
most
other
guy
think
that
the
jbi
technology_51
be
dead
already
it
always
be
too
complex
thus
i
refer
to
the
current
version
of
servixmix
x
i
would
not
consider
any
jbi
technology_18
for
a
project
technology_47
technology_48
and
servicemix
be
all
great
esbs
because
they
be
up
to
date
lightweight
and
easy
to
use
best
regard
kai
connector_data_5
david
foote
say
at
hi
kai
thank
you
for
your
thoughtful
treatment
of
the
topic
of
when
to
use
technology_2
however
i
wish
to
draw
your
attention
to
the
correct
use
of
the
term
dsl
domain
specific
technology_42
technology_12
technology_28
and
technology_29
be
general
purpose
technology_42
the
opposite
of
a
dsl
example
of
dsl
be
technology_52
technology_53
mathematic
and
yacc
for
reference
please
note
the
wikipedia
at
technology_30
en
wikipedia
wiki
domain
specific_language
david
foote
connector_data_5
oleg
zhurakousky
say
at
kai
“you
can
quality_attribute_1
several
technology_17
without
cod
a
lot
”
–
when
you
say
without
cod
a
lot
do
you
mean
technology_27
technology_12
technology_43
i
be
always
skeptical
when
i
connector_4
such
statement
there
have
connector_16
to
be
a
place
where
you
provide
a
component_20
instruction
right
otherwise
how
do
a
runtime
what
to
do
connector_data_5
kai
wähner
say
at
@oleg
what
i
want
to
say
be
no
matter
which
component_3
you
need
you
have
to
connector_11
the
connector_12
use
the
same
syntaxt
and
concept
no
matter
if
you
use
the
technology_12
connector_data_6
or
technology_28
dsl
example
technology_12
dsl
from
“file
input
”
to
“jms
outputqueue”
now
again
the
statement
“you
can
quality_attribute_1
several
technology_17
without
cod
a
lot”
=
i
e
you
do
not
have
to
use
the
technology_54
you
do
not
have
to
use
the
technology_44
technology_54
you
do
not
have
to
a
lot
the
technology_2
component_12
do
this
for
you
their
component_21
contain
connector_data_2
to
the
component_3
or
technology_44
technology_54
no
matter
which
other
technology_2
component_22
you
use
it’s
the
same…
of
you
still
have
to
connector_11
some
the
connector_18
and
you
have
to
do
the
configuration
once
e
g
configure
technology_44
ressources
though
it
be
much
le
boilerplate
i
hope
you
agree
with
this
explanation
🙂
connector_data_5
oleg
zhurakousky
say
at
yes
i
do
agree
and
want
to
say
that
the
same
apply
for
technology_26
requirement_8
where
pretty
sophisticate
connector_data_3
flow
could
be
construct
without
connector_23
a
single
line
of
technology_12
and
only
with
few
configuration
element
configure
via
connector_data_6
and
soon
technology_43
me
and
i’ll
point
you
to
some
sample
also
on
the
relate
note
it
nice
how
you
say
“
you
have
to
connector_11
the
connector_12
use
”
fwiw
this
be
one
of
the
fundamental
difference
between
technology_2
approach
and
si
eip
do
not
define
‘routes’
instead
core
eip
pattern_8
be
what
you
use
to
construct
‘message
flows’
which
themselves
could
be
use
in
isolation
extend
or
include
a
part
of
some
other
flow
etc
which
mean
imho
the
idea
behind
the
construct
that
begin
with
‘from’
and
end
with
‘to’
contradict
the
idea
behind
pattern_1
and
eip
in
general
and
that
be
“physical
and
logical
decouple
of
component_23
and
consumers”
i
can
go
on
but
don’t
want
to
hijack
the
idea
behind
the
😉
be
in
the
future
you
car
connector_11
something
that
compare
si
and
camal
and
than
we
can
duke
it
out
😉
cheer
connector_data_5
kai
wähner
say
at
@oleg
i
have
already
connector_11
that
comparison
and
you
have
already
connector_data_5
technology_30
www
kai
waehner
de
spoil
for
choice
which
requirement_8
technology_14
to
use
technology_26
requirement_8
technology_47
esb
or
technology_1
technology_2
you
can
duke
it
out
there
🙂
especially
your
point
about
“‘from’
and
‘to’
contradict
to
the
idea
behind
pattern_1
and
eip”
would
be
a
quality_attribute_2
argument
there
connector_data_5
hongchao
nie
say
at
nice
for
the
requirement_6
era
i
think
technology_47
be
move
to
the
correct
direction
technology_47
esb
already
provide
connector
for
technology_55
and
twitter
etc
also
technology_47
ion
claim
to
be
a
ipaas
though
i
have
not
try
this
if
the
dsl
be
not
of
priority
the
connector_24
ability
be
critical
to
requirement_8
architect
technology_2
have
to
hurry
up
connector_data_5
kai
wähner
say
at
hey
hongchao
i
agree
about
the
component_22
technology_47
have
several
awesome
connector
to
proprietary
technology_18
i
have
discus
this
topic
in
another
“comparison
of
technology_1
technology_2
technology_47
esb
and
technology_26
integration”
though
technology_2
also
have
connector
for
many
requirement_6
component_24
such
a
technology_56
gae
twitter
and
many
others
use
the
jclouds
component_22
already
besides
i
think
fuse
technology_57
be
go
into
the
same
direction
a
technology_47
ion…
so
i
think
have
not
to
hurry
up
🙂
best
regard
kai
wähner
twitter
@kaiwaehner
connector_data_5
murthy
say
at
in
this
and
other
of
yours
you
refer
to
muleesb
in
both
requirement_8
technology_14
component_25
and
esb
component_25
do
you
consider
muleesb
a
more
of
an
requirement_8
technology_14
or
an
esb
because
muleesb
itself
base
on
my
understand
do
not
have
support
for
bpm
bam
registry
pattern_12
which
you
say
be
typical
feature
of
an
esb
connector_data_5
kai
wähner
say
at
@murphy
see
discussion
in
this
technology_30
www
kai
waehner
de
spoil
for
choice
which
requirement_8
technology_14
to
use
technology_26
requirement_8
technology_47
esb
or
technology_1
technology_2
connector_data_5
soumya
say
at
nice
–
however
don’t
agree
with
the
concept
that
esbs
can
do
bpm
common
mistake
–
bpm
be
for
“process
orchestration”
mainly
build
on
bpel
and
more
for
manual+auto
connector_data_7
esb
do
pattern_13
however
on
“business
service”
level
bpm
can
use
esbs
for
delegate
component_2
connector_data_8
or
esbs
invoke
a
bpm
component_6
to
summarise
esbs
can
do
in
memory
stateless
micro
flow
i
e
collection
of
some
component_24
–
while
bpm
do
long
runnning
component_6
pattern_13
connector_data_5
kai
wähner
say
at
soumya
i
agree
with
you
it
quality_attribute_7
on
the
definition
of
the
technology_18
“esb”
i
explain
exactly
what
you
be
talk
about
in
a
presentation
at
camelone
technology_2
+
activiti
technology_30
www
kai
waehner
de
progress
report
from
camelone
in
boston
technology_1
technology_2
technology_58
servicemix
technology_59
connector_data_5
anigma
say
at
hi
–
this
ia
very
short
and
nice
i
be
wonder
if
there
be
any
connector_data_9
of
feature
to
compare
for
different
technology_18
technology_2
active
matrix
technology_60
or
might
be
technology_61
connector_data_5
kai
wähner
say
at
anigma
my
slide
compare
esbs
vs
requirement_8
technology_14
might
help
spoil
for
choice
–
how
to
choose
the
right
esb
kai
connector_data_5
sarita
say
at
can
you
please
help
me
to
decide
which
technology_62
technology_25
should
i
use
for
my
component_4
over
technology_26
technology_14
to
quality_attribute_1
with
hl7
health
domain
technology_63
for
now
we
be
consider
technology_31
for
hl7
transform
i
be
currently
look
into
technology_1
technology_2
and
technology_26
requirement_8
be
there
be
any
other
quality_attribute_2
option
open_source
for
this
purpose
connector_data_5
kai
wähner
say
at
well
i
have
never
use
hl7
before
though
besides
technology_1
technology_2
hl7
component_22
you
can
also
take
a
look
at
talend
open
studio
for
connector_data_1
requirement_8
it
be
open_source
and
offer
hl7
component_12
include
a
very
easy
and
powerful
gui
designer
here
be
the
connector_25
to
talend’s
component_22
technology_30
www
talendforge
component_22
search
for
healthcare
or
hl7
on
this
connector_data_5
johndoe
say
at
anyone
an
alternative
to
technology_1
technology_2
that
doesnt
require
to
be
connector_26
to
the
internet
connector_data_5
admin
say
at
technology_1
technology_2
do
not
require
to
be
connector_26
to
the
internet
of
if
you
use
technology_64
then
it
try
to
download
package
from
internet
but
this
be
an
optional
feature
you
can
also
quality_attribute_8
jar
which
you
need
kai
connector_data_5
andrew
say
at
nice
what
factor
in
requirement_8
complexity
would
make
you
move
up
to
esb
from
technology_2
in
other
word
i
the
graph
it
easy
to
understand
what
be
the
factor
for
decide
between
one
or
the
other
number
of
component_5
number
of
connector_18
number
of
different
technology_17
etc
thanks
andrew
connector_data_5
kai
wähner
say
at
andrew
it
be
not
about
number
of
connector_18
component_5
etc
use
an
esb
if
you
need
quality_attribute_2
technology_25
graphical
designer
generator
pattern_9
and
commercial
support
if
you
want
to
connector_11
component_21
by
yourself
and
debug
etc
with
an
ide
such
a
eclipse
then
technology_2
without
an
esb
be
a
quality_attribute_2
choice
these
be
the
differentiator
between
an
requirement_8
technology_14
and
an
esb
whereby
an
esb
might
be
on
top
of
of
the
technology_14
e
g
talend
esb
and
technology_39
fuse
both
generate
technology_2
under
the
hood
kai
connector_data_5
peter
jakus
say
at
very
helpful
thanks
now
few
year
after
connector_23
this
have
something
dramatically
connector_14
quality_attribute_2
technology_14
emerge
other
technology_14
be
more
suitable
for
the
requirement_6
era
we
want
to
build
an
e
commerce
requirement_8
hub
wombat
co
for
cee
requirement_16
because
we
have
a
custom
e
commerce
solution
connector_11
in
technology_65
and
we
be
constantly
connector_2
it
to
various
local
erp
component_26
point
to
point
requirement_8
–
it’s
difficult
to
quality_attribute_9
between
project
build
from
scratch
seem
too
much
of
reinvent
the
wheel
on
the
other
hand
esb
seem
an
overkill
requirement_8
technology_14
technology_2
seem
a
nice
sweet
spot
in
between
what
do
you
think
kai
i
would
appreciate
your
insight
connector_data_5
kai
wähner
say
at
peter
nothing
connector_14
same
situation
a
a
few
year
ago
if
you
do
not
want
to
use
an
esb
technology_18
then
technology_1
technology_2
be
still
the
best
choice
imo
connector_data_5
peter
enright
say
at
thank
you
for
this
i
be
hop
that
you
can
give
some
guidance
on
this
for
me
please
i
be
create
a
component_22
to
connector_27
validate
and
connector_28
order
normally
i
would
not
consider
technology_2
a
this
be
not
an
requirement_8
problem
more
an
in
of
itself
however
i
need
to
support
rest
technology_22
and
mq
so
i
be
consider
use
technology_2
to
simplify
build
support
for
these
and
connector_15
all
inbound
connector_data_10
to
central
validation
and
persistance
component_27
at
the
requirement_10
level
you
can
use
technology_2
to
connector_12
connector_data_10
between
component_7
datastores
but
you
“can”
also
use
it
to
connector_12
connector_data_10
between
in
different
technology_12
within
a
single
component_4
–
wonder
if
you
think
it
make
sense
at
this
level
thank
you
for
you
time
connector_data_5
kai
wähner
say
at
peter
this
sound
very
interest
yes
i
think
use
an
requirement_8
solution
often
make
sense
for
connector_29
this
kind
of
“business
application”
if
you
need
to
build
component_24
technology_66
rest
etc
and
quality_attribute_1
technology_15
such
a
mq
then
you
be
on
the
right
way
therefore
we
often
use
an
requirement_8
technology_14
or
esb
not
a
“integration
platform”
but
also
a
“service
delivery
platform”…
connector_data_5
jromero
say
at
dear
folk
this
be
really
a
great
articule
hope
you
continue
connector_30
your
time
and
knowledge
well
here
some
question
doubt
when
you
say
that
esb
be
recommend
for
large
requirement_8
component_4
what
do
you
mean
with
“large”
can
you
connector_6
an
example
if
le
effort
for
requirement_8
development
be
need
when
esb
be
chosen
and
more
development
effort
even
cod
the
solution
be
need
connector_29
technology_2
be
correct
my
understand
esb
a
component_2
delivery
component_28
be
this
an
advantage
versus
technology_2
thanks
connector_data_5
kai
wähner
say
at
quality_attribute_2
question
there
be
no
hard
definition
for
that
think
about
if
a
technology_12
technology_14
fit
your
need
regard
implementation
effort
pattern_14
and
if
you
need
commercial
support
for
example
a
mission
critical
component_26
which
have
to
be
up
might
be
a
quality_attribute_2
choice
for
an
esb
an
esb
no
matter
if
open_source
or
commercial
offer
zero
cod
technology_25
yes
you
still
can
and
have
to
connector_11
some
custom
somtimes
nevertheless
which
improve
the
quality_attribute_10
of
development
and
quality_attribute_3
significantly
for
most
developer
not
really
you
can
use
an
requirement_8
technology_14
technology_2
in
the
same
way
an
esb
to
build
component_24
e
g
pattern_7
or
technology_66
connector_data_5
ashish
say
at
that
be
an
informative
i
have
a
use
requirement_12
i
need
to
perform
an
technology_62
on
connector_data_1
in
technology_67
and
connector_data_1
in
technology_53
load
the
transform
connector_data_1
in
technology_53
whats
more
suitable
to
start
with
technology_1
technology_2
technology_47
esb
or
talend
esb
connector_data_5
kai
wähner
say
at
if
you
wanna
do
technology_62
i
e
pattern_15
component_6
then
talend
be
the
best
technology_25
it
allow
“visual
development”
which
help
a
lot
for
technology_62
instead
of
cod
with
a
technology_14
technology_2
however
you
need
to
use
talend
di
connector_data_1
requirement_8
not
talend
esb
technology_47
esb
be
talend
esb
focus
on
“real
time
integration”
i
e
web
component_24
etc
you
can
also
do
technology_62
but
the
technology_25
for
that
be
not
a
sophisticate
for
this
use
requirement_12
connector_data_5
santu
say
at
hi
kai
very
nice
i
be
a
beginner
in
pattern_3
and
eip
could
you
please
help
me
to
understand
how
pattern_3
be
different
from
eip
somewhere
i
connector_4
that
pattern_3
can
be
replace
eip
because
of
it
advance
feature
eip
can
be
obsolete
thanks
santu
connector_data_5
kai
wähner
say
at
hi
santu
well
i
recommend
to
do
more
research
and
connector_4
more
pattern_3
be
a
very
generic
principle
or
architecture
style
with
many
best
practice
around
it
eip
be
“just”
some
design
pattern_8
which
can
be
apply
when
realize
a
technology_19
thus
eip
be
a
small
part
of
a
technology_19
connector_data_5
jai
say
at
hi
kai
i’m
build
a
bunch
of
api’s
in
nodejs
and
i
have
to
make
sure
it
support
multiple
connector_data_3
technology_63
and
technology_17
i
couldn’t
find
any
requirement_8
technology_14
in
technology_68
package
will
i
be
able
to
use
technology_2
in
my
technology_68
project
in
some
way
do
you
have
any
other
suggestion
to
achieve
this
thanks
jai
connector_data_5
kai
wähner
say
at
hi
jai
i
think
technology_68
red
be
a
quality_attribute_2
open_source
requirement_8
technology_14
base
on
technology_68
j
this
might
fit
quality_attribute_2
but
it
also
quality_attribute_7
on
the
use
requirement_12
technology_68
red
be
iot
focus
while
technology_2
be
a
general
sophisticate
and
very
powerful
requirement_8
technology_14
but
you
can
also
quality_attribute_1
with
technology_1
technology_2
or
another
connector_22
component_28
e
g
technology_1
technology_6
+
technology_6
connector_2
via
technology_51
technology_30
connector_data_5
rashmi
say
at
quality_attribute_2
i
be
work
on
an
asset
requirement_9
project
of
a
well
establish
bank
we
be
plan
to
use
technology_1
technology_2
a
requirement_8
pattern_16
and
mainly
concentrate
on
transfer
to
from
technology_69
perform
technology_62
on
connector_data_1
of
various
component_28
deal
with
requirement_3
transformation
combine
multiple
content
publish
the
transform
to
target
component_21
will
technology_2
be
the
right
choice
here
consider
huge
connector_data_1
flow
i
be
not
confident
on
the
choice
of
technology_2
over
technology_62
technology_25
connector_data_5
kai
wähner
say
at
@rashmi
for
huge
connector_data_1
the
quality_attribute_2
option
be
technology_1
technology_6
and
it
requirement_8
component_3
technology_6
connector_2
technology_6
be
build
for
high
volume
and
large
quality_attribute_11
it
become
more
or
le
the
de
facto
technology_51
for
such
a
use
requirement_12
connector_data_5
leave
a
connector_data_5
cancel
replyyour
connector_31
will
not
be
publish
require
be
mark
*comment
*
name
*
*
connector_28
my
name
and
in
this
browser
for
the
next
time
i
pattern_17
you
also
technology_1
technology_6
+
technology_11
=
end
to
end
iot
requirement_8
slide
video
technology_1
technology_6
requirement_2
confluent
eai
internet
of
thing
technology_6
connector_2
pattern_1
pattern_2
technology_11
open_source
connector_3
component_6
bykai
waehner10
technology_11
and
technology_1
technology_6
be
a
perfect
combination
for
end
to
end
iot
requirement_8
from
edge
to
connector_data_1
center
this
discus
two
different
approach
and
refer
to
implementation
on
technology_70
use
technology_1
technology_6
technology_6
connector_2
confluent
technology_11
pattern_18
and
mosquitto
connector_4
more
connector_4
more
0k
views3
minute
connector_4
technology_1
technology_6
vs
technology_13
mq
technology_62
esb
–
slide
+
video
technology_1
technology_6
requirement_2
confluent
eai
esb
feature
in
memory
requirement_8
technology_6
connector_2
technology_6
connector_1
ksql
pattern_1
pattern_2
technology_13
open_source
pattern_3
connector_3
component_6
bykai
waehner7
this
connector_5
a
slide
deck
and
video
component_1
of
the
difference
between
an
pattern_19
connector_22
component_28
technology_1
technology_6
and
technology_13
connector_data_3
component_29
mq
extract
transform
load
technology_62
and
requirement_10
component_2
bus
esb
connector_4
more
technology_15
evangelist
kai
waehner
build
requirement_6
requirement_7
connector_22
infrastructure
for
real
time
connector_data_1
component_6
and
requirement_1
subscribe
to
my
newsletter
please
leave
this
empty
stay
inform
about
we
don’t
spam
connector_4
our
privacy
requirement_15
for
more
info
connector_21
your
inbox
or
spam
folder
to
confirm
your
subscription
end
to
end
requirement_8
feature
technology_1
technology_6
ksql
and
technology_1
plc4x
for
iiot
connector_data_1
requirement_8
and
component_6
technology_1
technology_6
vs
technology_13
mq
technology_62
esb
–
slide
+
video
deep
example
technology_1
technology_6
+
technology_7
+
kera
+
technology_8
+
technology_71
categoriescategories
select
category
5g
technology_72
gap
airline
airport
allgemein
msk
requirement_1
technology_1
technology_2
technology_1
technology_6
technology_1
mesos
technology_1
technology_73
technology_1
technology_3
component_3
component_3
gateway
component_3
requirement_9
component_4
component_5
architecture
ariba
asset
track
audio
augment
reality
automation
requirement_17
automotive
aviation
technology_74
technology_74
outpost
technology_74
wavelength
technology_75
bank
technology_76
bet
requirement_2
biotech
biotechnology
bitcoin
blockchain
bookmaker
bpm
b
requirement_3
intelligence
requirement_18
citizen
requirement_6
requirement_6
requirement_7
technology_77
comparison
concur
condition
pattern_14
confluent
confluent
requirement_6
connector_26
car
connector_26
vehicle
conversational
requirement_19
core
bank
crm
crypto
cryptocurrency
cybersecurity
connector_data_1
at
rest
connector_data_1
historian
connector_data_1
hub
connector_data_1
in
motion
connector_data_1
requirement_8
connector_data_1
lake
connector_data_1
mesh
connector_data_1
science
connector_data_1
connector_22
connector_data_1
requirement_20
component_9
databricks
deep
defi
digital
forensics
digital
twin
disaster
recovery
quality_attribute_8
ledger
technology_9
domain
drive
design
eai
edge
edge
computing
eipaas
elasticsearch
elt
energy
requirement_10
architecture
erp
esb
ethereum
technology_62
connector_22
exactly
once
semantics
feature
finance
requirement_17
food
forensics
fraud
fraud
detection
gamble
game
gaming
gcp
technology_78
government
technology_4
healthcare
hivecell
technology_30
hybrid
requirement_6
hyperledger
mq
idoc
iiot
in
memory
industrial
iot
requirement_17
insurance
insurance
requirement_17
requirement_8
internet
of
thing
intrusion
detection
inventory
requirement_9
iota
ipaas
it
certification
it
conference
technology_12
jee
technology_44
jupyter
technology_6
connector_2
technology_6
connector_1
kappa
architecture
ksql
technology_79
technology_10
lake
house
lambda
architecture
large
connector_data_10
component_30
libra
life
science
live
commerce
logistics
requirement_4
component_20
vision
component_31
manufacture
connector_data_3
component_16
pattern_1
pattern_2
technology_13
military
mining
quality_attribute_12
component_24
technology_11
national
quality_attribute_13
nft
nlp
technology_5
oil
and
gas
omnichannel
opc
ua
open
component_3
open
bank
open_source
technology_80
osisoft
technology_81
o
ott
over
the
top
payment
persistence
pharma
plc4x
predictive
quality_attribute_3
sector
technology_7
qcon
qualitrics
technology_82
ransomware
recommendation
redpanda
pattern_7
retail
reverse
technology_62
ripple
rtls
sale
technology_83
technology_83
technology_84
scm
quality_attribute_13
serverless
component_2
mesh
siem
situational
awareness
smart
build
smart
city
smart
grid
pattern_3
technology_22
soar
social
requirement_5
sparkplug
splunk
connector_3
component_6
connector_22
requirement_1
supply
chain
telco
telecom
telecommunication
requirement_17
technology_8
threat
detection
threat
intelligence
tiered
storage
transaction
transportation
trend
uncategorized
use
requirement_12
v2x
video
video
connector_22
virtual
reality
web
technology_14
web
component_2
web3
technology_85
connector_data_6
zero
trust
tag
–
cloudanalytics
technology_1
technology_1
technology_2
technology_1
technology_6
technology_74
requirement_2
businessworks
requirement_6
requirement_6
requirement_7
confluent
deep
technology_9
eai
edge
requirement_10
component_4
requirement_8
requirement_10
component_2
bus
esb
connector_22
technology_4
hybrid
iiot
requirement_8
iot
j2ee
technology_12
jee
technology_6
technology_6
connector_2
technology_6
connector_1
ksql
technology_10
requirement_4
pattern_2
technology_13
technology_11
open_source
technology_80
real
time
pattern_3
streambase
connector_22
requirement_1
connector_3
component_6
talend
technology_86
connector_4
more
views4
minute
connector_4
technology_1
technology_6
biotechnology
healthcare
omnichannel
open
component_3
pharma
open
component_3
and
omnichannel
with
technology_1
technology_6
in
healthcare
bykai
waehner18
connector_4
more
views19
minute
connector_4
msk
technology_1
technology_6
technology_1
technology_73
technology_77
comparison
confluent
requirement_6
mq
technology_44
technology_82
redpanda
comparison
technology_44
connector_data_3
component_16
vs
technology_1
technology_6
bykai
waehner12
connector_4
more
views5
minute
connector_4
technology_1
technology_6
bitcoin
blockchain
cryptocurrency
cybersecurity
connector_data_1
connector_22
ethereum
fraud
detection
technology_1
technology_6
in
crypto
and
finserv
for
cybersecurity
and
fraud
detection
bykai
waehner29
connector_4
more
views4
minute
connector_4
technology_1
technology_6
biotech
confluent
requirement_6
connector_data_1
science
connector_data_1
connector_22
healthcare
insurance
technology_6
connector_1
life
science
requirement_4
requirement_4
and
connector_data_1
science
with
technology_6
in
healthcare
bykai
waehner18
©
kai
waehner
|
imprint
|
connector_data_1
privacy
by
continue
to
use
the
you
agree
to
the
use
of
more
connector_data_4
acceptthe
set
on
this
be
set
to
allow
to
give
you
the
best
browse
experience
possible
if
you
continue
to
use
this
without
connector_14
your
set
or
you
click
connector_27
below
then
you
be
to
this
close
