axiom
of
web
architecture
tim
berners
lee
date
last
connector_1
$date
$
status
personal
pattern_1
only
edit
status
first
draft
up
to
design
issue
principle
of
design
again
and
again
we
fall
back
on
the
folklore
of
the
principle
of
quality_attribute_1
design
sometimes
i
need
a
uri
for
them
so
this
be
start
a
collection
of
them
i
have
connector_2
about
some
in
many
place
principle
such
a
quality_attribute_2
and
quality_attribute_3
be
the
stuff
of
engineering
decentralization
and
tolerance
be
the
life
and
breath
of
internet
brian
carpenter
have
enumerate
some
principle
of
design
of
the
net
carpenter
the
third
pair
of
idea
i
have
find
commonly
useful
for
the
web
i
mention
them
in
a
keynote
at
www7
and
the
note
on
quality_attribute_4
this
be
largely
motherhood
and
apple
pie
but
it
still
need
a
home
quality_attribute_2
keep
it
quality_attribute_5
stupid
quality_attribute_2
be
easily
to
quote
but
often
ignore
in
strange
way
perhaps
this
be
because
it
be
the
eye
of
the
beholder
a
technology_1
which
u
few
basic
element
to
achieve
the
same
power
be
quality_attribute_5
sometimes
quality_attribute_2
be
confuse
with
easy
to
understand
for
example
a
two
line
solution
which
u
recursion
be
a
pretty
quality_attribute_5
even
though
some
people
might
find
it
easy
to
work
though
a
line
solution
which
avoid
recursion
in
technology_2
component_1
instruction
those
thing
which
start
with
be
not
quality_attribute_5
they
look
quality_attribute_5
an
extra
sort
of
thing
in
the
technology_1
but
the
complicate
what
be
a
very
clean
design
of
element
and
attribute
and
a
complication
in
the
underlie
syntax
be
have
great
effect
all
specification
which
refer
to
connector_data_1
component_1
will
have
to
figure
out
what
to
do
about
component_1
instruction
a
well
a
element
modular
design
when
you
design
a
component_2
or
a
technology_1
then
if
the
feature
can
be
break
into
relatively
loosely
bind
group
of
relatively
closely
bind
feature
then
that
division
be
a
quality_attribute_1
thing
to
be
make
a
part
of
the
design
this
be
quality_attribute_1
engineering
it
mean
that
when
you
want
to
connector_1
the
component_2
you
can
with
luck
in
the
future
connector_1
only
one
part
which
will
only
require
you
to
understand
and
test
that
part
this
will
allow
other
people
to
independently
connector_1
other
part
at
the
same
time
this
be
classic
quality_attribute_1
design
and
book
have
be
connector_2
about
it
the
corollary
the
toii
be
le
frequently
meet
modular
design
hinge
on
the
quality_attribute_2
and
abstract
nature
of
the
definition
between
the
a
design
in
which
the
inside
of
each
need
to
all
about
each
other
be
not
a
modular
design
but
an
arbitrary
partitioning
of
the
bit
more
be
part
of
a
modular
design
it
be
not
only
necessary
to
make
sure
your
own
component_2
be
design
to
be
make
of
modular
part
it
be
also
necessary
to
realize
that
your
own
component_2
no
matter
how
big
and
wonderful
it
seem
now
should
always
be
design
to
be
a
part
of
another
large
component_2
this
be
often
much
more
difficult
than
quality_attribute_3
tolerance
be
liberal
in
what
you
require
but
conservative
in
what
you
do
this
be
the
expression
of
a
principle
which
apply
pretty
well
in
life
it
be
a
typical
uu
tenet
and
be
commonly
employ
in
design
across
the
internet
connector_2
technology_3
strict
connector_3
technology_3
transitional
a
superset
of
strict
this
principle
can
be
contentious
when
browser
be
lax
about
what
they
expect
the
component_2
work
quality_attribute_1
but
also
it
encourage
laxness
on
the
part
of
web
component_3
writer
the
principle
of
tolerance
do
not
blunt
the
need
for
a
perfectly
clear
technology_4
specification
which
draw
a
precise
distinction
between
a
conformance
and
non
conformance
the
principle
of
tolerance
be
no
excuse
for
a
technology_5
which
contravene
a
technology_6
decentralization
this
be
a
principle
of
the
design
of
quality_attribute_6
component_2
include
society
it
point
out
that
any
single
common
point
which
be
involve
in
any
trend
to
limit
the
way
the
component_2
quality_attribute_7
and
produce
a
single
point
of
complete
failure
centralization
in
social
component_4
can
apply
to
concept
too
for
example
if
we
make
a
knowledge
representation
component_2
which
require
anyone
who
u
the
concept
of
automobile
to
use
the
term
technology_7
www
kr
std
requirement_1
automobile
then
we
restrict
the
set
of
u
of
the
component_2
to
those
for
whom
this
particular
formulation
of
what
an
automobile
be
work
the
semantic
web
must
avoid
such
conceptual
bottleneck
a
the
internet
avoid
such
requirement_2
bottleneck
test
of
independent
invention
if
someone
else
have
already
invent
your
component_2
would
theirs
work
with
yours
do
this
component_2
have
to
be
the
only
one
of
it
kind
this
quality_attribute_5
think
test
be
describe
in
more
detail
in
evolution
in
these
design
issue
it
be
connectted
to
quality_attribute_3
inside
out
design
a
component_2
not
to
be
modular
in
itself
but
to
be
a
part
of
an
a
yet
unspecified
large
component_2
a
critical
property
here
be
that
the
component_2
try
to
do
one
thing
well
and
leave
other
thing
to
other
it
also
have
to
avoid
conceptual
or
other
centralization
a
no
two
can
claim
the
need
to
be
the
unique
center
of
a
large
component_2
principle
of
least
power
in
choose
component_5
technology_1
there
be
of
component_6
which
range
from
the
plainly
descriptive
such
a
dublin
core
metadata
or
the
content
of
most
component_7
or
technology_3
though
logical
technology_1
of
limit
power
such
a
connector_4
control
connector_data_2
or
conneg
content
negotiation
which
include
limit
propositional
component_8
though
declarative
technology_1
which
verge
on
the
turing
complete
postscript
be
but
pdf
isn
t
i
be
tell
through
those
which
be
in
fact
turing
complete
though
one
be
lead
not
to
use
them
that
way
xslt
technology_8
to
those
which
be
unashamedly
procedural
technology_9
technology_10
the
choice
of
technology_1
be
a
common
design
choice
the
low
power
end
of
the
quality_attribute_7
be
typically
quality_attribute_5
to
design
connector_5
and
use
but
the
high
power
end
of
the
quality_attribute_7
have
all
the
attraction
of
be
an
open
end
hook
into
which
anything
can
be
place
a
door
to
u
bind
only
by
the
imagination
of
the
programmer
component_5
science
in
the
1960s
to

spend
a
lot
of
effort
make
technology_1
which
be
a
powerful
a
possible
nowadays
we
have
to
appreciate
the
reason
for
pick
not
the
most
powerful
solution
but
the
least
powerful
the
reason
for
this
be
that
the
le
powerful
the
technology_1
the
more
you
can
do
with
the
connector_data_3
component_9
in
that
technology_1
if
you
connector_2
it
in
a
quality_attribute_5
declarative
from
anyone
can
connector_2
a
component_6
to
analyze
it
in
many
way
the
semantic
web
be
an
attempt
largely
to
connector_data_4
large
quantity
of
exist
connector_data_3
onto
a
common
technology_1
so
that
the
connector_data_3
can
be
analyze
in
way
never
dream
of
by
it
creator
if
for
example
a
web
component_3
with
weather
connector_data_3
have
rdf
describe
that
connector_data_3
a
component_10
can
connector_6
it
a
a
component_11
perhaps
average
it
plot
it
deduce
thing
from
it
in
combination
with
other
connector_data_5
at
the
other
end
of
the
quality_attribute_7
be
the
weather
connector_data_5
portray
by
the
cunning
technology_9
technology_11
while
this
might
allow
a
very
cool
component_10
it
cannot
be
analyze
at
all
the
search
component_12
find
the
component_3
will
have
no
idea
of
what
the
connector_data_3
be
or
what
it
be
about
this
the
only
way
to
find
out
what
a
technology_9
technology_11
mean
be
to
set
it
run
in
front
of
a
person
i
hope
that
be
a
quality_attribute_1
enough
explanation
of
this
principle
there
be
million
of
example
of
the
choice
i
choose
technology_3
not
to
be
a
programming
technology_1
because
i
want
different
component_13
to
do
different
thing
with
it
present
it
differently
extract
component_14
of
content
index
it
and
so
on
reference
b
carpenter
editor
architectural
principle
of
the
internet
internet
architecture
board
rfc1958
follow
up
in
her
talk
the
science
of
insecurity
meredith
patterson
make
the
point
that
the
principle
of
least
power
be
important
for
quality_attribute_8
of
which
be
connector_7
to
attack
up
to
design
issue
tim
bl
