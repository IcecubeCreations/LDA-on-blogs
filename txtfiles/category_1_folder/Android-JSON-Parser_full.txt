technology_1
technology_2
requirement_1
home
cod
grind
whiteboard
technology_3
requirement_2
teach
with
u
login
category
academic

requirement_3
&
requirement_4
component_1
programming
component_1
science
component_2
devops
digital
requirement_5
engineering

exam
syllabus
famous
monument
gate
exam
late
technology_4
requirement_6
component_3
development
requirement_7

mathematics

technology_4
misc

requirement_8
development
technology_5
technology_4
technology_6
technology_4
technology_7

programming
script
selected
connector_1
quality
soft
skill
telecom

upsc
ia
exam
web
development
sport

connector_data_1
technology_4
multi
technology_8
question
prime
pack

ebooks
technology_9
q
a
login
technology_1
basic
technology_1
home
technology_1
overview
technology_1
environment
setup
technology_1
architecture
technology_1
component_4
component_5
technology_1
hello
world
example
technology_1
resource
technology_1
activity
technology_1
component_6
technology_1
pattern_1
receiver
technology_1
content
technology_10
technology_1
fragment
technology_1
intent
pattern_2
technology_1
component_7
technology_1
ui
layout
technology_1
ui
control
technology_1
handle
technology_1
style
and
theme
technology_1
custom
component_5
technology_1
advance
concept
technology_1
drag
and
drop
technology_1
connector_data_2
location
base
component_6
technology_1
connector_2
technology_1
connector_2
sm
technology_1
phone
connector_data_3
publish
technology_1
component_4
technology_1
useful
example
technology_1
alert
dialoges
technology_1
animation
technology_1
audio
capture
technology_1
audiomanager
technology_1
auto
complete
technology_1
best
practice
technology_1
bluetooth
technology_1
camera
technology_1
clipboard
technology_1
custom
font
technology_1
connector_data_4
backup
technology_1
developer
technology_3
technology_1
emulator
technology_1
requirement_9
technology_1
gesture
technology_1
connector_data_5
technology_1
image
effect
technology_1
imageswitcher
technology_1
internal
storage
technology_1
jetplayer
technology_1
technology_2
requirement_1
technology_1
linkedin
requirement_9
technology_1
loading
spinner
technology_1
localization
technology_1
login
screen
technology_1
mediaplayer
technology_1
multitouch
technology_1
navigation
technology_1
requirement_10
connector_3
technology_1
technology_11
guide
technology_1
technology_12
technology_13
technology_1
progress
circle
technology_1
progressbar
technology_1
connector_4
connector_data_2
technology_1
renderscript
technology_1
technology_14
reader
technology_1
screen
cast
technology_1
technology_15
manager
technology_1
sensor
technology_1
component_8
requirement_7
technology_1
connector_5
preference
technology_1
technology_16
technology_17
technology_1
spell
checker
technology_1
technology_18
component_2
technology_1
support
technology_9
technology_1
test
technology_1
text
to
speech
technology_1
textureview
technology_1
twitter
requirement_9
technology_1
ui
design
technology_1
ui
pattern_3
technology_1
ui
test
technology_1
webview
layout
technology_1
wi
fi
technology_1
widget
technology_1
connector_data_1
requirement_1
technology_1
useful
resource
technology_1
question
and
answer
technology_1
useful
resource
technology_1
discussion
selected
connector_1
upsc
ia
exam
note
developer
s
best
practice
question
and
answer
quality_attribute_1
resume
connector_6
hr
question
component_1
glossary
who
be
who
technology_1
technology_2
requirement_1
advertisement
previous
component_9
next
component_9
technology_2
stand
for
technology_19
connector_data_6
notation
it
be
an
independent
connector_data_4
exchange
technology_20
and
be
the
best
alternative
for
technology_21
this
chapter
explain
how
to
requirement_11
the
technology_2
and
extract
necessary
connector_data_7
from
it
technology_1
provide
four
different
to
manipulate
technology_2
connector_data_4
these
be
jsonarray

jsonstringer
and
jsontokenizer
the
first
step
be
to
identify
the
in
the
technology_2
connector_data_4
in
which
you
be
interest
in
for
example
in
the
technology_2
give
below
we
interest
in
connector_7
pattern_4
only
{
sys
{
country
gb
sunrise

sunset

}
weather
{



smoke
description
smoke
icon
50n
}

{
temp


pressure

}
}
technology_2
element
an
technology_2
consist
of
many
component_10
here
be
the
component_11
define
the
component_5
of
an
technology_2
and
their
description
−
sr
no
component_10
&
description


in
a
technology_2
square
bracket
represent
a
technology_2

connector_data_6
{
in
a
technology_2

curly
bracket
{
represent
a
technology_2
connector_data_6

key
a
technology_2
connector_data_6
contain
a
key
that
be
a

pair
of
key
requirement_12
make
up
a
technology_2
connector_data_6

requirement_12
each
key
have
a
requirement_12
that
could
be
or
double
e
t
technology_22
technology_2
requirement_11
for
requirement_11
a
technology_2
connector_data_6
we
will
create
an
connector_data_6
of
and
specify
a
contain
technology_2
connector_data_4
to
it
it
syntax
be
−
in
reader
=

in
the
last
step
be
to
requirement_11
the
technology_23
a
technology_2
consist
of
different
connector_data_6
with
different
key
requirement_12
pair
e
t
technology_22
so
have
a
separate
for
requirement_11
each
of
the
component_10
of
technology_2

it
syntax
be
give
below
−
sys
=
reader
getjsonobject
sys
country
=
sys
getstring
country
=
reader
getjsonobject

pattern_4
=

getstring
temp
the
getjsonobject

the
technology_2
connector_data_6
the
getstring

the
requirement_12
of
the
specify
key
apart
from
the
these
there
be
other
provide
by
this
for
quality_attribute_2
requirement_11
technology_2

these
be
connector_data_8
below
−
sr
no
&
description

connector_8

name
this

the
requirement_12
but
in
the
form
of
connector_data_6
type

getboolean

name
this

the
boolean
requirement_12
specify
by
the
key

getdouble

name
this

the
double
requirement_12
specify
by
the
key

getint

name
this

the
requirement_12
specify
by
the
key

getlong

name
this

the
long
requirement_12
specify
by
the
key

length
this

the
number
of
name
requirement_12
mapping
in
this
connector_data_6

name
this

an
contain
the
name
in
this
connector_data_6
example
to
experiment
with
this
example
you
can
run
this
on
an
actual
component_12
or
in
an
emulator
step
description

you
will
use
technology_1
studio
to
create
an
technology_1
component_4

modify
src
mainactivity
technology_5
to
necessary


modify
the
re
layout
activity_main
to
respective
connector_data_1
component_5

modify
the
re
requirement_12

technology_21
to
necessary
component_5

run
the
component_4
and
choose
a
run
technology_1
component_12
and
install
the
component_4
on
it
and
verify
the
connector_data_9
follow
be
the
content
of
the
modify
activity
src
mainactivity
technology_5
package
technology_24
example
tutorialspoint7
myapplication
technology_1
o
asynctask
technology_1
o
bundle
technology_1
support
v7
component_13
appcompatactivity
technology_1
util
requirement_13
technology_1
widget
listadapter
technology_1
widget
listview
technology_1
widget
simpleadapter
technology_1
widget
toast

technology_23
jsonarray

technology_23
jsonexception

technology_23

technology_5
util
arraylist
technology_5
util
hashmap
mainactivity
extend
appcompatactivity
{
private
tag
=
mainactivity

getsimplename
private
listview
lv
arraylist
hashmap


contactlist
@override
protect
oncreate
bundle
savedinstancestate
{
super
oncreate
savedinstancestate
setcontentview
r
layout
activity_main
contactlist
=
arraylist
lv
=
listview
findviewbyid
r

connector_data_8
getcontacts
connector_9
}
private
getcontacts
extend
asynctask



{
@override
protect
onpreexecute
{
super
onpreexecute
toast
maketext
mainactivity
this
technology_23
connector_data_4
be
download
toast
length_long
show
}
@override
protect
doinbackground

arg0
{
httphandler
sh
=
httphandler
make
a
connector_data_10
to
url
and
connector_7
connector_10
url
=
technology_25
technology_26
androidhive
info

jsonstr
=
sh
makeservicecall
url
requirement_13
e
tag
connector_10
from
url
+
jsonstr
if
jsonstr
=

{
try
{
jsonobj
=

jsonstr
connector_7
technology_2
technology_27
jsonarray

=
jsonobj
getjsonarray

loop
through
all

for

i
=

i

length
i++
{
technology_22
=

getjsonobject
i
=
technology_22
getstring

name
=
technology_22
getstring
name
=
technology_22
getstring

connector_11
=
technology_22
getstring
connector_11
gender
=
technology_22
getstring
gender
phone
technology_27
be
technology_2
connector_data_6
phone
=
technology_22
getjsonobject
phone
requirement_8
=
phone
getstring
requirement_8
home
=
phone
getstring
home
office
=
phone
getstring
office
tmp
hash
connector_data_11
for
single
hashmap


=
hashmap

each
child
technology_27
to
hashmap
key
=
requirement_12

put



put
name
name

put



put
requirement_8
requirement_8

to
connector_data_8
contactlist


}
}
catch
final
jsonexception
e
{
requirement_13
e
tag
technology_23
requirement_11
error
+
e
getmessage
runonuithread

runnable
{
@override
run
{
toast
maketext
getapplicationcontext
technology_23
requirement_11
error
+
e
getmessage
toast
length_long
show
}
}
}
}
else
{
requirement_13
e
tag
couldn
t
connector_8
technology_23
from
component_14
runonuithread

runnable
{
@override
run
{
toast
maketext
getapplicationcontext
couldn
t
connector_8
technology_23
from
component_14
connector_12
logcat
for
possible
error
toast
length_long
show
}
}
}

}
@override
protect
onpostexecute

connector_data_12
{
super
onpostexecute
connector_data_12
listadapter
adapter
=
simpleadapter
mainactivity
this
contactlist
r
layout
list_item

{

requirement_8
}

{r


r

mobile}
lv
setadapter
adapter
}
}
}
follow
be
the
modify
content
of
the
technology_21
httphandler
technology_5
package
technology_24
example
tutorialspoint7
myapplication
technology_1
util
requirement_13
technology_5
io
bufferedinputstream
technology_5
io
bufferedreader
technology_5
io
ioexception
technology_5
io
inputstream
technology_5
io
inputstreamreader
technology_5
net
httpurlconnection
technology_5
net
malformedurlexception
technology_5
net
protocolexception
technology_5
net
url
httphandler
{
private
final
tag
=
httphandler

getsimplename
httphandler
{
}
makeservicecall

requrl
{
connector_10
=

try
{
url
url
=
url
requrl
httpurlconnection
conn
=
httpurlconnection
url
openconnection
conn
setrequestmethod
connector_8
connector_13
the
connector_10
inputstream
in
=
bufferedinputstream
conn
getinputstream
connector_10
=
convertstreamtostring
in
}
catch
malformedurlexception
e
{
requirement_13
e
tag
malformedurlexception
+
e
getmessage
}
catch
protocolexception
e
{
requirement_13
e
tag
protocolexception
+
e
getmessage
}
catch
ioexception
e
{
requirement_13
e
tag
ioexception
+
e
getmessage
}
catch
exception
e
{
requirement_13
e
tag
exception
+
e
getmessage
}
connector_10
}
private
convertstreamtostring
inputstream
be
{
bufferedreader
reader
=
bufferedreader

inputstreamreader
be
stringbuilder
sb
=
stringbuilder
line
try
{
while
line
=
reader
readline
=

{
sb
append
line
append
\n
}
}
catch
ioexception
e
{
e
printstacktrace
}
finally
{
try
{
be
close
}
catch
ioexception
e
{
e
printstacktrace
}
}
sb
tostring
}
}
follow
be
the
modify
content
of
the
technology_21
re
layout
activity_main
technology_21
technology_21
version=


encoding=
utf

relativelayout
xmlns
android=
technology_25
schema
technology_1
technology_24
apk
re
technology_1
xmlns
tools=
technology_25
schema
technology_1
technology_24
technology_3
technology_1
layout_width=
match_parent
technology_1
layout_height=
match_parent
technology_3
context=
technology_24
example
tutorialspoint7
myapplication
mainactivity
listview
technology_1
id=
@+id
connector_data_8
technology_1
layout_width=
fill_parent
technology_1
layout_height=
wrap_content
relativelayout
follow
be
the
modify
content
of
the
technology_21
re
layout
list_item
technology_21
technology_21
version=


encoding=
utf

linearlayout
xmlns
android=
technology_25
schema
technology_1
technology_24
apk
re
technology_1
technology_1
layout_width=
fill_parent
technology_1
layout_height=
wrap_content
technology_1
orientation=
vertical
technology_1
padding=
@dimen
activity_horizontal_margin
textview
technology_1
id=
@+id

technology_1
layout_width=
fill_parent
technology_1
layout_height=
wrap_content
technology_1
paddingbottom=
2dip
technology_1
textcolor=
@color
coloraccent
textview
technology_1
id=
@+id
requirement_8
technology_1
layout_width=
wrap_content
technology_1
layout_height=
wrap_content
technology_1
textcolor=
#5d5d5d
technology_1
textstyle=
bold
linearlayout
follow
be
the
content
of
androidmanifest
technology_21

technology_21
version=


encoding=
utf

manifest
xmlns
android=
technology_25
schema
technology_1
technology_24
apk
re
technology_1
package=
technology_24
example
tutorialspoint7
myapplication
us
permission
technology_1
name=
technology_1
permission
internet
component_4
technology_1
allowbackup=
true
technology_1
icon=
@mipmap
ic_launcher
technology_1
label=
@string
app_name
technology_1
supportsrtl=
true
technology_1
theme=
@style
apptheme
activity
technology_1
name=
mainactivity
intent
pattern_2
action
technology_1
name=
technology_1
intent
action

category
technology_1
name=
technology_1
intent
category
launcher
intent
pattern_2
activity
component_4
manifest

s
try
to
run
our
component_4
we
modify
i
assume
you
have
create
your
avd
while
do
environment
setup
to
run
the
component_13
from
technology_1
studio
open
one
of
your
project
s
activity
and
click
run
icon
from
the
toolbar
technology_1
studio
install
the
component_13
on
your
avd
and
start
it
and
if
everything
be
fine
with
your
setup
and
component_4
it
will
display
follow
emulator
window
−
above
example
show
the
connector_data_4
from
technology_23
the
connector_data_4
have
contain
employer
detail
a
well
a
salary
connector_data_7
previous
component_9
component_9
next
component_9
advertisement
about
u
refund
requirement_14
term
of
use
privacy
requirement_14
faq
s
©
copyright

all
right
reserve
we
make
use
of

to
improve
our
requirement_15
by
use
this

you
agree
with
our

requirement_14
agree
more
