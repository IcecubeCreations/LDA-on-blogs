a
web
component_1
design
methodology
bt
live
webinar
and
q&a
web
component_2
and
reverse
pattern_1
pattern_2
live
webinar
16th
register
now
close
toggle
navigation
facilitate
the
technology_1
of
knowledge
and
innovation
in
professional
development
english
edition
english
edition
chinese
edition
japanese
edition
french
edition
contribute
search
sign
up
login
password
forget
password
infoq
account
back
to
login
resend
activation
back
to
login
login
with
twitter
t
have
an
infoq
account
sign
up
notifications1
login
to
unlock
infoq
s
feature
stay
up
to
date
and
connector_1
connector_2
your
favorite
content
follow
your
favorite
editor
and
peer
sign
up
login
t
have
an
account
register
here
logo
back
to
homepage
apr
unique
visitor
news
presentation
podcast
guide
topic
development
technology_2
technology_3
technology_4
technology_5
technology_6
go
technology_7
technology_8
feature
in
development
reproducible
development
with
container
avdi
grimm
describe
the
future
of
development
which
be
already
here
connector_1
a
tour
of
a
devcontainer
and
contrast
it
with
a
deployment
container
all
in
development
architecture
&
design
architecture
requirement_1
architecture
quality_attribute_1
requirement_2
design
requirement_3
study
pattern_3
component_3
mesh
pattern_4
quality_attribute_2
feature
in
architecture
&
design
oren
eini
on
technology_9
include
consistency
guarantee
and
technology_5
a
the
implementation
technology_10
wesley
reisz
talk
to
oren
eini
about
the
history
of
technology_9
technology_9
be
a
fully
pattern_5
technology_11
document
component_4
that
connector_3
both
cp
and
ap
guarantee
at
different
time
the
two
discus
those
cp
ap
quality_attribute_3
component_5
challenge
the
choice
of
implementation
technology_10
technology_12
and
the
current
plan
for
technology_9
which
include
a
component_2
side
sharding
implementation
all
in
architecture
design
requirement_4
ml
&
connector_data_1
engineering
requirement_5
requirement_6
technology_11
component_4
connector_data_1
requirement_7
connector_4
feature
in
requirement_4
ml
&
connector_data_1
engineering
requirement_6
at
the
edge
katharine
jarmul
discus
utilize
quality_attribute_3
connector_data_1
science
and
requirement_6
component_6
such
a
federate
to
from
connector_data_1
at
the
edge
all
in
requirement_4
ml
connector_data_1
eng
culture
&
agile
diversity
leadership
lean
kanban
personal
growth
scrum
sociocracy
craftmanship
team
collaboration
test
ux
feature
in
culture
&
how
to
run
your
technology_13
department
a
coach
have
find
what
i
think
be
my
connector_5
a
an
agile
coach
i
take
the
tough
decision
to
move
sideways
into
technology_13
requirement_8
in
the
hope
of
use
what
i’d
to
one
day
run
my
own
department
i
believe
that
come
from
coach
would
allow
me
to
see
thing
others
could
not
and
create
something
special
time
will
tell
if
i
have
succeed
this
be
the
story
of
where
i
be
up
to
so
far
all
in
culture
devops
infrastructure
continuous
delivery
automation
container
requirement_9
observability
feature
in
devops
panel
quality_attribute_4
component_5
the
panelist
discus
the
quality_attribute_2
for
the
supply
chain
and
quality_attribute_2
risk
measurement
all
in
devops
eventsnew
helpful
connector_6
about
infoq
infoq
editor
contribute
about
c4media
diversity
choose
your
technology_10
en
中文
日本
fr
infoq
live
how
requirement_9
architecture
achieve
cost
connector_7
improve
quality_attribute_5
&
connector_8
requirement_10
register
now
infoq
live
how
to
migrate
an
component_7
to
serverless
and
what
be
the
common
mistake
to
avoid
register
now
qcon
san
francisco
understand
the
emerge
trend
you
should
pay
attention
to
attend
in
person
on
oct
infoq
homepage
a
web
component_1
design
methodology
qcon
san
francisco
oct
uncover
emerge
trend
and
practice
from
domain
expert
a
web
component_1
design
methodology
leia
em
português
bookmark
dec
min
connector_9
by
mike
amundsen
connector_10
for
infoq
join
a
of
expert
increase
your
visibility
grow
your
career
more
design
connector_11
and
maintain
component_8
for
the
web
be
more
than
a
challenge
for
many
requirement_11
it
be
an
imperative
this
series
take
the
reader
on
a
journey
from
determine
the
requirement_12
requirement_3
for
component_8
to
a
design
methodology
meet
implementation
challenge
and
take
the
long
pattern_6
on
maintain
component_8
on
the
web
over
time
along
the
way
there
be
with
influential
individual
and
even
a
suggest
connector_12
connector_data_2
on
component_8
and
relate
topic
this
infoq
be
part
of
the
series
“web
component_8
from
start
to
finish”
you
can
subscribe
to
connector_13
connector_data_3
via
r
relate
sponsor
content
relate
sponsor
protect
identity
quality_attribute_4
digital
component_3
enable
quality_attribute_6
and
quality_attribute_4
component_9
connector_14
to
web
and
requirement_13
component_7
start
free
trial
design
web
component_8
be
more
than
url
technology_14
status
cod
and
connector_data_4
the
component_10
of
design
what
be
essentially
a
look
and
feel
for
your
component_1
be
very
important
and
be
well
worth
the
effort
this
briefly
outline
a
methodology
that
connector_data_5
in
an
component_1
design
that
take
advantage
of
both
technology_14
and
the
web
and
it
can
work
for
more
than
technology_14
if
at
some
point
you
need
to
connector_11
the
same
component_3
over
websockets
technology_15
technology_16
etc
most
of
the
feature
of
the
connector_data_6
component_1
design
will
work
the
same
that
can
make
support
multiple
technology_17
in
the
future
easy
to
connector_11
and
maintain
quality_attribute_7
design
go
beyond
url
status
cod
and
connector_data_7
typically
web
component_1
design
guidance
focus
on
the
the
common
feature
such
a
url
design
proper
use
of
technology_14
feature
such
a
status
cod
and
the
design
of
connector_data_7
that
hold
serialize
connector_data_8
or
connector_data_9
graph
these
be
valuable
implementation
detail
but
not
much
in
the
way
of
component_1
design
and
it
be
the
design
of
the
component_1
the
way
the
essential
feature
of
the
component_3
be
express
and
describe
that
can
make
an
important
contribution
to
the
success
and
quality_attribute_8
of
your
web
technology_18
a
quality_attribute_7
design
component_10
or
methodology
define
a
consistent
quality_attribute_9
set
of
step
to
employ
when
work
to
connector_15
a
component_2
side
component_3
component_11
a
an
quality_attribute_10
quality_attribute_11
web
technology_18
that
mean
that
a
clear
methodology
can
be
connector_16
with
developer
designer
and
architect
in
order
to
help
coordinate
activity
throughout
the
implementation
cycle
an
establish
methodology
can
also
be
refine
over
time
a
each
team
discover
way
to
improve
and
streamline
the
component_10
without
adversely
affect
implementation
detail
in
fact
implementation
detail
can
connector_17
e
g
which
component_12
o
technology_19
and
ui
style
to
employ
independently
of
the
design
component_10
when
these
two
be
cleanly
separate
and
define
a
seven
step
component_1
design
methodology
what
follow
be
a
brief
overview
of
the
design
methodology
cover
in
the
book
restful
web
apis
by
richardson
and
amundsen
there
be
not
enough
room
here
to
go
into
depth
for
each
step
in
the
component_10
but
this
can
give
the
big
picture
also
the
reader
can
use
this
overview
a
a
guide
for
develop
a
unique
web
component_1
design
component_10
that
fit
the
local
skill
and
goal
of
your
group
note
yes
seven
seem
quite
a
few
in
reality
there
be
only
five
design
step
and
two
additional
connector_data_10
in
the
connector_data_2
include
connector_18
and
publish
these
last
two
round
out
the
component_10
to
provide
and
end
to
end
experience
you
should
plan
to
reiterate
through
these
step
a
need
you
connector_1
through
step
draw
state
diagram
and
realize
there
be
more
work
to
be
do
in
step
connector_data_2
all
the
part
when
you
connector_1
around
to
connector_19
the
step
you
discover
a
number
of
thing
miss
in
step
create
a
semantic
profile
etc
the
key
be
to
use
the
component_10
to
connector_15
a
many
detail
a
possible
and
be
will
to
go
back
a
step
or
two
in
order
to
capture
the
connector_data_10
you
miss
along
the
way
iteration
be
the
key
to
build
a
more
complete
picture
of
your
component_3
and
clarify
how
it
can
be
connector_20
to
component_13
component_7
step
connector_data_2
all
the
part
the
first
step
be
to
connector_data_2
all
the
piece
of
connector_data_1
a
component_13
component_7
might
want
to
connector_1
out
of
the
component_3
or
put
into
it
we
ll
connector_data_11
these
the
semantic
descriptor
semantic
because
they
deal
with
the
mean
of
connector_data_1
in
the
component_7
and
descriptor
since
they
describe
what
be
happen
in
the
component_7
itself
note
that
the
point
of
pattern_6
here
be
that
of
the
component_13
not
the
component_3
it
s
important
to
design
the
component_1
a
something
the
component_13
will
be
use
for
example
in
a
quality_attribute_12
to
do
connector_data_2
component_14
you
might
find
the
follow
semantic
descriptor
the
unique
identifier
for
each
component_15
in
the
component_16
title
the
title
of
each
to
do
item
datedue
the
date
the
to
do
item
be
due
for
completion
complete
a
yes
no
flag
indicate
whether
the
to
do
item
have
be
complete
in
a
full
feature
component_7
there
could
be
many
more
semantic
descriptor
to
cover
thing
category
of
to
do
connector_data_10
work
family
gardening
etc
component_9
connector_data_12
for
a
pattern_7
implementation
and
so
on
we
ll
keep
this
one
quality_attribute_12
in
order
to
focus
on
the
component_10
itself
step
draw
state
diagram
the
next
step
be
to
draw
out
state
diagram
for
the
propose
technology_18
each
component_17
in
the
diagram
represent
a
possible
representation
a
document
that
include
one
or
more
of
the
semantic
descriptor
identify
in
step
you
can
use
arrow
to
indicate
transition
from
one
component_17
to
the
next
from
one
state
to
the
next
these
transition
be
initiate
by
technology_17
connector_data_13
t
worry
about
indicate
which
technology_17
be
use
in
each
transition
yet
indicate
whether
the
transition
be
quality_attribute_13
e
g
technology_14
connector_1
unsafe
non
idempotent
e
g
technology_14
or
unsafe
idempotent
put
note
idempotent
action
be
quality_attribute_9
without
unexpected
side
effect
for
example
technology_14
put
be
idempotent
because
the
specification
say
component_18
should
use
the
state
requirement_10
pass
from
the
component_13
to
replace
any
exist
requirement_10
for
the
target
resource
however
technology_14
be
non
idempotent
since
the
technology_14
spec
state
that
requirement_10
should
be
use
to
append
to
an
exist
resource
collection
not
replace
in
this
requirement_3
a
component_13
component_7
for
our
quality_attribute_12
to
do
component_3
might
need
to
connector_14
the
connector_data_2
of
quality_attribute_14
item
be
able
to
pattern_8
that
connector_data_2
pattern_6
a
single
item
and
mark
an
item
complete
many
of
these
action
use
state
requirement_10
to
pass
connector_data_1
between
the
component_13
and
component_2
for
example
the
item
action
allow
the
component_13
to
pass
the
state
requirement_10
title
and
duedate
here
be
a
diagram
that
illustrate
those
action
the
action
show
in
the
diagram
and
connector_data_2
below
be
also
semantic
descriptor
they
describe
the
semantic
action
for
this
component_3
connector_9
connector_data_2
pattern_8
connector_data_2
connector_9
item
create
item
mark
complete
you
might
find
a
you
work
through
the
diagram
that
you
miss
action
or
connector_data_1
connector_data_10
the
component_13
will
actually
want
or
need
that
s
an
opportunity
to
go
back
to
step
to
descriptor
and
or
improve
on
the
diagram
in
step
once
you
have
reiterate
through
these
two
step
you
should
have
a
quality_attribute_7
idea
of
all
the
connector_data_1
point
and
action
the
component_13
will
need
to
connector_21
w
your
component_3
step
reconcile
magic
the
next
step
be
to
reconcile
all
the
magic
in
your
component_3
the
magic
be
all
the
descriptor
name
they
have
no
intrinsic
mean
they
represent
action
or
connector_data_1
element
component_19
will
connector_14
when
connector_22
with
your
component_3
reconcile
these
descriptor
name
mean
adopt
well
name
from
component_20
schema
microformats
dublin
core
iana
connector_23
relation
requirement_10
these
be
all
pattern_9
of
well
define
connector_16
name
when
you
use
name
from
these
component_20
for
your
component_3
it
be
likely
that
developer
have
see
them
before
and
understand
what
they
mean
this
can
improve
the
quality_attribute_8
of
your
technology_18
note
while
it
be
a
quality_attribute_7
idea
to
use
connector_16
name
for
descriptor
on
your
component_3
you
t
need
to
use
them
for
your
internal
implementation
e
g
the
connector_data_1
name
in
a
component_4
the
component_3
itself
can
connector_data_14
the
name
to
the
internal
storage
name
without
any
problem
for
the
sample
to
do
component_3
i
be
able
to
find
acceptable
exist
name
for
all
but
one
of
my
semantic
descriptor
create
item
for
this
requirement_3
i
resort
to
create
a
unique
uri
base
on
rule
from
the
web
connector_24
rfc5988
there
be
requirement_14
off
when
select
well
name
for
your
descriptor
they
be
rarely
a
perfect
match
to
your
internal
connector_data_1
storage
element
and
that
s
ok
here
be
my
connector_data_6
identifier
from
dublin
core
title
name
from
schema
duedate
scheduledtime
from
schema
complete
status
from
schema
connector_9
connector_data_2
collection
from
iana
connector_23
relation
requirement_10
pattern_8
connector_data_2
search
from
iana
connector_23
relation
requirement_10
connector_9
item
item
from
iana
connector_23
relation
requirement_10
create
item
technology_14
mamund
technology_20
rels
create
item
use
rfc5988
mark
complete
edit
from
iana
connector_23
relation
requirement_10
so
base
on
my
name
reconciliation
here
be
my
update
state
diagram
step
select
a
type
the
next
step
in
the
design
component_10
for
your
component_1
be
to
select
a
type
to
use
when
pass
connector_data_15
back
and
forth
between
component_13
and
component_2
one
of
the
hallmark
of
the
web
be
that
connector_data_1
be
pass
a
standardize
document
over
a
uniform
it
be
important
to
select
a
type
that
support
both
the
connector_data_1
descriptor
e
g
identifier
status
etc
a
well
a
the
action
descriptor
e
g
search
edit
etc
there
be
quite
a
few
technology_21
quality_attribute_14
some
of
top
hypermedia
technology_21
a
i
connector_10
this
be
in
no
special
order
hypertext
markup
technology_10
technology_22
hypertext
component_7
technology_10
hal
collection+json
cj
siren
technology_23
technology_18
uniform
basis
for
exchange
representation
uber
it
be
also
important
to
select
a
type
that
will
work
well
with
your
target
technology_17
most
developer
prefer
the
technology_14
technology_17
for
component_3
however
websockets
technology_15
technology_16
and
coap
be
also
use
especially
for
high
quality_attribute_15
short
connector_data_16
pattern_10
implementation
for
this
example
i
ll
use
technology_22
a
the
connector_data_16
technology_21
and
technology_14
a
the
technology_17
technology_22
have
all
the
connector_data_1
descriptor
support
that
s
need
ul
for
connector_data_2
li
for
item
and
span
for
connector_data_1
element
it
also
have
adequate
support
for
action
descriptor
a
for
quality_attribute_13
connector_23
form
method=
connector_1
for
quality_attribute_13
transition
and
form
method=
for
unsafe
transition
note
the
state
diagram
currently
show
the
edit
action
a
idempotent
e
g
technology_14
put
and
technology_22
still
do
not
have
requirement_15
support
for
put
for
this
example
i
ll
use
an
to
help
make
technology_22
s
only
support
idempotent
ok
now
i
can
try
out
the
by
create
some
sample
representation
base
on
the
state
diagram
for
our
example
we
have
only
two
representation
to
render
the
to
do
connector_data_2
and
the
to
do
item
representation
figure
the
to
do
connector_data_2
collection
representation
in
technology_22
technology_22
head
for
test
display
only
title
to
do
connector_data_2
title
style
name
scheduledtime
status
item
{display
block}
style
head
body
for
test
display
only
h1
to
do
connector_data_2
h1
to
do
connector_data_2
collection
ul
li
a
href=
connector_data_2
rel=
item
class=
item
span
class=
identifier
span
a
span
class=
name
first
item
in
the
connector_data_2
span
span
class=
scheduledtime
span
span
class=
status
pending
span
li
li
a
href=
connector_data_2
rel=
item
class=
item
span
class=
identifier
span
a
span
class=
name
second
item
in
the
connector_data_2
span
span
class=
scheduledtime
span
span
class=
status
pending
span
li
li
a
href=
connector_data_2
rel=
item
class=
item
span
class=
identifier
span
a
span
class=
name
third
item
in
the
connector_data_2
span
span
class=
scheduledtime
span
span
class=
status
complete
span
li
ul
search
transition
form
method=
connector_1
action=
connector_data_2
class=
search
legend
search
legend
input
name=
name
class=
identifier
input
type=
submit
value=
name
search
form
create
item
transition
form
method=
action=
connector_data_2
class=
legend
create
item
legend
input
name=
name
class=
name
input
name=
scheduledtime
class=
scheduledtime
input
type=
submit
value=
create
item
form
body
technology_22
figure
the
to
do
connector_data_2
item
representation
in
technology_22
technology_22
head
for
test
display
only
title
to
do
connector_data_2
title
style
name
scheduledtime
status
item
collection
{display
block}
style
head
body
for
test
display
only
h1
to
do
item
h1
a
href=
connector_data_2
rel=
collection
class=
collection
back
to
connector_data_2
a
to
do
connector_data_2
collection
ul
li
a
href=
connector_data_2
rel=
item
class=
item
span
class=
identifier
span
a
span
class=
name
first
item
in
the
connector_data_2
span
span
class=
scheduledtime
span
span
class=
status
pending
span
li
ul
edit
transition
form
method=
action=
connector_data_2
class=
edit
legend
update
status
legend
input
type=
hide
name=
etag
value=
q1w2e3r4t5y6
class=
etag
input
type=
text
name=
status
value=
pending
class=
status
input
type=
submit
value=
update
form
body
technology_22
remember
a
you
work
through
the
representation
sample
of
your
state
diagram
you
find
thing
you
miss
in
early
step
miss
descriptor
connector_25
in
action
descriptor
such
a
idempotency
etc
that
s
fine
now
be
the
time
to
work
these
all
out
before
you
connector_26
this
design
to
once
you
re
satisfy
the
representation
be
complete
there
be
an
additional
step
you
need
to
do
before
start
to
connector_10
create
the
semantic
profile
step
create
a
semantic
profile
a
semantic
profile
be
a
document
that
connector_data_17
all
the
descriptor
in
your
design
and
include
detail
about
each
one
that
will
help
developer
when
build
both
component_13
and
component_2
implementation
the
profile
be
an
implementation
guide
not
an
implementation
description
this
be
an
important
distinction
component_3
description
technology_21
component_3
description
document
technology_21
have
be
around
for
quite
a
while
and
be
handy
when
you
want
to
generate
for
or
document
an
exist
implementation
of
a
component_3
there
be
quite
a
few
technology_21
around
the
top
contender
a
i
connector_10
the
be
web
component_3
definition
technology_10
technology_24
atom
component_3
description
atomsvc
web
component_7
description
technology_10
wadl
blueprint
technology_25
pattern_11
component_7
component_6
technology_10
raml
profile
technology_21
there
be
only
a
few
profile
technology_21
at
the
moment
the
one
i
recommend
be
component_7
level
semantic
profile
alp
technology_23
ld
+
hydra
both
be
relatively
the
technology_23
ld
specification
reach
w3c
recommendation
status
early
in
hydra
be
still
an
unofficial
draft
a
of
this
connector_10
and
have
an
active
of
developer
alp
be
still
in
early
draft
stage
with
the
ietf
since
the
idea
of
a
profile
document
be
to
describe
the
real
life
aspect
of
a
problem
space
not
a
single
implementation
within
that
space
the
technology_21
be
quite
different
than
typical
description
technology_21
figure
the
to
connector_data_2
semantic
profile
in
alp
technology_22
alp
version=
doc
alp
profile
for
infoq
on
technology_18
design
methodology
doc
connector_data_1
descriptor
descriptor
id=
identifier
type=
semantic
ref=
descriptor
id=
name
type=
semantic
ref=
descriptor
id=
scheduledtime
type=
semantic
ref=
descriptor
id=
status
type=
semantic
ref=
action
descriptor
descriptor
id=
collection
type=
quality_attribute_13
ref=
descriptor
id=
item
type=
quality_attribute_13
ref=
descriptor
href=
#identifier
descriptor
descriptor
id=
search
type=
quality_attribute_13
ref=
descriptor
href=
#name
descriptor
descriptor
id=
create
item
type=
unsafe
ref=
descriptor
href=
#name
descriptor
href=
scheduledtime
descriptor
descriptor
id=
edit
type=
idempotent
ref=
descriptor
href=
#identifier
descriptor
href=
#status
descriptor
alp
you
ll
notice
that
this
document
look
a
basic
vocabulary
of
all
the
possible
connector_data_1
requirement_10
and
action
in
the
to
do
component_3
and
that
s
the
idea
component_21
who
agree
to
abide
by
this
profile
can
make
their
own
decision
about
technology_17
connector_data_16
technology_21
and
even
url
component_19
who
agree
to
connector_27
this
profile
will
be
build
to
recognize
and
if
appropriate
activate
the
descriptor
show
in
this
document
this
be
also
a
great
technology_21
for
generate
human
readable
documentation
analyse
similar
profile
track
which
profile
be
most
commonly
use
even
generate
state
diagram
but
that
s
a
subject
for
another
now
that
you
have
the
complete
connector_data_2
of
descriptor
with
reconcile
name
the
annotate
state
requirement_16
and
a
semantic
profile
document
you
re
ready
to
start
cod
a
sample
component_2
and
component_13
step
connector_10
some
at
this
point
you
should
be
able
to
turn
over
your
design
document
state
requirement_16
and
semantic
profile
to
developer
of
both
the
component_2
and
component_13
component_22
in
order
to
start
a
specific
implementation
the
technology_14
component_2
should
connector_11
the
state
diagram
create
in
step
and
connector_data_18
from
the
component_13
should
connector_28
the
proper
state
transition
in
the
component_3
each
representation
connector_29
from
the
component_3
should
be
in
the
technology_21
selected
in
step
and
should
include
a
connector_23
to
the
profile
create
in
step
connector_30
should
include
the
appropriate
hypermedia
control
that
connector_11
the
action
show
in
the
state
requirement_16
and
describe
in
the
profile
document
component_13
and
component_2
developer
can
build
their
implementation
relatively
independently
at
this
point
and
use
test
run
to
validate
compliance
with
the
state
diagram
and
profile
once
you
have
quality_attribute_16
run
there
be
one
more
step
in
our
connector_data_2
publish
step
publish
your
component_1
web
component_8
should
publish
at
least
one
url
that
be
promise
to
always
respond
to
component_19
even
in
the
far
future
i
connector_data_11
this
the
billboard
url
the
one
everyone
it
be
also
a
quality_attribute_7
idea
to
publish
the
profile
document
so
that
implementation
of
the
component_3
can
connector_23
to
it
in
connector_30
you
can
also
publish
human
readable
documentation
etc
to
help
developer
understand
and
use
your
component_3
once
that
be
do
you
should
have
a
well
design
quality_attribute_16
quality_attribute_10
component_3
up
and
run
ready
to
use
in
conclusion
this
cover
a
set
of
step
for
design
component_8
for
the
web
the
focus
be
on
connector_31
the
connector_data_1
and
action
description
correct
and
document
them
in
a
component_23
readable
way
in
order
to
make
it
easy
for
human
developer
to
connector_11
component_19
and
component_18
for
this
design
even
if
they
be
not
in
direct
with
each
other
the
step
be
connector_data_2
all
the
part
gather
all
the
connector_data_1
element
component_19
will
need
in
order
to
connector_21
with
the
component_3
draw
state
diagram
document
all
the
action
state
transition
that
will
be
quality_attribute_14
for
the
component_3
reconcile
magic
clean
up
your
to
match
a
best
possible
well
name
select
a
type
review
connector_data_16
technology_21
to
find
the
one
that
most
closely
align
the
component_3
transition
with
the
target
technology_17
create
a
semantic
profile
connector_10
up
a
profile
document
that
define
all
the
descriptor
use
in
the
component_3
connector_10
some
connector_32
the
profile
document
and
the
state
diagram
to
component_13
and
component_2
developer
and
start
connector_19
to
test
compliance
and
adjust
the
profile
diagram
a
need
publish
your
component_1
publish
your
billboard
url
and
profile
document
so
that
others
can
use
them
to
create
component_21
and
or
component_13
component_7
it
be
likely
that
you
ll
need
to
reiterate
through
some
step
along
the
way
a
you
discover
miss
element
and
make
requirement_14
off
decision
with
your
design
the
sooner
that
happen
in
the
component_10
the
quality_attribute_7
it
s
also
possible
that
you
will
be
able
to
use
this
component_1
design
at
some
point
in
the
future
to
create
implementation
use
technology_21
and
technology_17
that
be
connector_data_13
by
developer
at
some
point
finally
this
methodology
be
one
possible
way
to
create
a
quality_attribute_17
quality_attribute_9
consistent
component_10
for
design
your
web
apis
a
you
work
through
this
example
you
find
it
work
quality_attribute_7
for
you
to
insert
additional
step
collapse
some
and
of
the
connector_data_16
technology_21
and
technology_17
decision
vary
from
one
requirement_3
to
the
next
hopefully
this
give
you
some
idea
on
how
you
can
create
an
optimal
component_1
design
methodology
for
your
organization
and
or
team
about
the
author
mike
amundsen
be
principal
component_1
architect
for
pattern_12
technology_26
help
people
build
great
component_8
for
the
web
an
internationally
author
and
lecturer
mike
travel
throughout
the
u
and
europe
consult
and
speak
on
quality_attribute_3
requirement_17
architecture
web
component_7
development
requirement_9
computing
and
other
subject
he
have
more
than
a
dozen
book
to
his
credit
design
connector_11
and
maintain
component_8
for
the
web
be
more
than
a
challenge
for
many
requirement_11
it
be
an
imperative
this
series
take
the
reader
on
a
journey
from
determine
the
requirement_12
requirement_3
for
component_8
to
a
design
methodology
meet
implementation
challenge
and
take
the
long
pattern_6
on
maintain
component_8
on
the
web
over
time
along
the
way
there
be
with
influential
individual
and
even
a
suggest
connector_12
connector_data_2
on
component_8
and
relate
topic
this
infoq
be
part
of
the
series
“web
component_8
from
start
to
finish”
you
can
subscribe
to
connector_13
connector_data_3
via
r
inspire
by
this
content
connector_10
for
infoq
become
an
editor
for
infoq
be
one
of
the
best
decision
of
my
career
it
have
challenge
me
and
help
me
grow
in
so
many
way
we
technology_27
love
to
have
more
people
join
our
team
thomas
bettslead
editor
architecture
and
design
@infoq
senior
principal
engineer
connector_10
for
infoq
rate
this
adoption
style
author
this
content
be
in
the
architecture
topic
relate
topic
development
web
component_1
component_1
design
architecture
relate
editorial
popular
across
infoq
go
requirement_15
with
technology_28
and
graalvm
why
you
should
care
about
architecture
technology_2
news
roundup
jeps
for
jdk
project
lilliput
milestone
technology_28
technology_19
quarkus
state
of
the
technology_2
ecosystem
report
from
relic
ml
technology_29
to
accelerate
your
work
with
cassie
breviu
release
technology_30
dns
private
resolver
in
preview
relate
content
design
first
approach
to
component_1
development
how
to
connector_11
and
why
it
work
architecture
and
design
infoq
trend
report—april
technology_31
chronicle
the
end
of
the
component_1
strangler
architecting
for
the
edge
jep
component_15
to
extend
pattern_4
match
in
technology_2
cloudflare
d1
provide
quality_attribute_3
technology_32
for
cloudflare
component_24
release
technology_10
requirement_4
train
dataset
massive
technology_2
news
roundup
openjdk
technology_28
connector_data_19
and
cf
payara
component_12
technology_33
technology_34
connector_data_19
how
to
run
your
technology_13
department
a
coach
kalix
build
serverless
requirement_9
requirement_15
requirement_12
crtical
component_25
with
no
component_4
jetpack
bring
update
architectural
and
ui
component_26
and
improve
requirement_2
technology_29
release
technology_30
dns
private
resolver
in
preview
technology_35
support
nitrotpm
and
uefi
quality_attribute_4
boot
requirement_9
introduce
technology_36
quality_attribute_18
technology_37
for
requirement_1
component_4
workload
requirement_4
for
developer
a
future
or
a
reality
quality_attribute_19
by
agreement
requirement_10
outcome
over
impose
solution
technology_38
lambda
now
have
support
for
technology_39
runtime
effectively
pattern_13
your
pattern_13
miedwar
meshbesher
on
use
vigilance
control
meta
artificial_intelligence’s
connector_data_1
set
to
accelerate
renewable
energy
catalyst
discovery
for
hydrogen
fuel
deepmind
introduce
gato
a
generalist
requirement_4
agent
mammoth
stump
in
the
requirement_9
era
meet
eu
regulation
by
be
requirement_9
requirement_15
and
requirement_9
agnostic
go
requirement_15
with
technology_28
and
graalvm
deal
with
thunder
herd
at
braintree
how
norway
s
large
bureaucracy
optimise
for
fast
flow
how
to
prepare
for
the
unexpected
an
influxdata
outage
story
tell
at
kubeconeu
the
what
and
why
of
programmable
pattern_1
state
of
the
technology_2
ecosystem
report
from
relic
+
technology_2
=
♡
a
story
tell
by
martijn
verburg
at
devoxx
uk
trust
drive
development
build
cognitive
and
emotional
pillar
laion
release
five
billion
image
text
pair
dataset
laion
5b
why
you
should
care
about
architecture
microstream
connector_33
support
for
technology_40
technology_2
news
roundup
jeps
for
jdk
project
lilliput
milestone
technology_28
technology_19
quarkus
flutter
now
quality_attribute_16
on
all
support
component_12
extend
material
design
connector_34
goal
to
daily
teamwork
the
future
of
technology_2
a
see
by
mark
little
at
devoxx
uk
requirement_15
technology_2
adoptium
and
fast
pace
technology_38
introduce
storage
optimize
i4i
instance
for
io
heavy
workload
technology_41
studio
chipmunk
bring
animation
preview
cpu
profiler
and
more
requirement_9
introduce
cdn
for
content
delivery
unify
mlops
feature
connector_35
and
component_6
deployment
the
infoq
newsletter
a
round
up
of
last
week’s
content
on
infoq
connector_29
out
every
tuesday
join
a
of
over
senior
developer
pattern_6
an
example
enter
your
e
mail
connector_36
select
your
country
select
a
country
i
to
infoq
technology_20
handle
my
connector_data_1
a
explain
in
this
privacy
notice
we
protect
your
privacy
hello
stranger
you
need
to
register
an
infoq
account
or
login
or
login
to
but
there
s
so
much
more
behind
be
register
connector_1
the
most
out
of
the
infoq
experience
tell
u
what
you
think
allow
technology_22
a
b
br
blockquote
i
li
pre
u
ul
p
me
connector_data_20
to
any
of
my
connector_data_15
in
this
component_27
watch
component_27
state
diagram
to
inform
the
design
of
apis
by
jean
jacques
dubray
re
state
diagram
to
inform
the
design
of
apis
by
cris
fuhrman
re
state
diagram
to
inform
the
design
of
apis
by
mike
amundsen
connector_data_21
be
dead
by
jaime
metcher
re
connector_data_21
be
dead
by
mike
amundsen
state
diagram
to
inform
the
design
of
apis
by
jean
jacques
dubray
your
connector_data_16
be
await
moderation
thank
you
for
participate
in
the
discussion
what
a
novel
idea
glad
to
see
you
catch
up
on
that
recommendation
connector_data_22
back
to
top
connector_data_21
be
dead
by
jaime
metcher
your
connector_data_16
be
await
moderation
thank
you
for
participate
in
the
discussion
great
mike
thank
you
i
the
isn
t
about
type
but
one
thing
in
that
space
do
jump
out
at
me
you
mention
four
technology_23
base
type
and
one
uber
that
u
connector_data_21
in
a
pretty
limit
way
do
this
indicate
a
bias
against
technology_42
if
so
why
it
seem
to
me
that
after
year
of
abuse
of
technology_42
in
hypermedia
component_8
we
finally
have
an
component_7
where
connector_data_21
be
a
strong
choice
it
s
particularly
ironic
that
after
a
decade
of
moan
about
connector_data_21
verbosity
with
which
i
heartily
concur
the
flavour
of
the
month
be
the
much
more
verbose
hal+json
btw
i
t
count
hal
a
an
connector_data_21
type
a
the
bias
towards
technology_43
in
the
documentation
and
the
be
so
strong
a
to
amount
to
defacto
deprecation
of
the
connector_data_21
option
connector_data_22
back
to
top
re
connector_data_21
be
dead
by
mike
amundsen
your
connector_data_16
be
await
moderation
thank
you
for
participate
in
the
discussion
i
t
think
there
be
anything
inherent
in
connector_data_21
that
make
it
quality_attribute_7
for
hypermedia
technology_43
be
more
popular
right
now
i
think
drive
primarily
by
the
popularity
of
technology_8
both
on
the
component_13
and
the
component_2
that
might
connector_17
in
the
future
either
connector_data_21
begin
to
resurge
or
maybe
even
technology_44
start
to
attract
more
attention
connector_data_22
back
to
top
re
state
diagram
to
inform
the
design
of
apis
by
cris
fuhrman
your
connector_data_16
be
await
moderation
thank
you
for
participate
in
the
discussion
craig
larman
have
propose
ssds
a
a
methodology
to
connector_1
from
component_9
step
use
requirement_3
to
pattern_14
connector_37
with
a
component_2
there
s
obviously
a
component_28
and
state
and
it
s
not
quality_attribute_6
rest
he
even
suggest
component_6
them
a
a
state
component_23
so
that
the
component_2
can
do
error
connector_38
when
it
connector_39
a
connector_data_13
that
be
out
of
order
etc
the
methodology
on
this
with
state
diagram
seem
to
apply
to
the
sub
design
of
resource
which
aren
t
part
of
larman
s
methodology
but
could
be
to
achieve
restfulness
it
would
be
great
if
somehow
there
be
a
harmonization
of
these
methodology
for
example
how
to
determine
which
domain
connector_data_8
should
be
restful
the
example
i
always
see
be
beautiful
and
t
describe
how
one
connector_40
to
that
but
i
think
when
design
solution
it
s
not
always
obvious
which
thing
should
be
pattern_15
resource
or
be
it
connector_data_22
back
to
top
re
state
diagram
to
inform
the
design
of
apis
by
mike
amundsen
your
connector_data_16
be
await
moderation
thank
you
for
participate
in
the
discussion
chris
erik
mogensen
do
a
presentation
at
restfest
use
connector_data_21
state
requirement_16
taht
might
be
interest
technology_45
technology_20
restfest
greenville
wiki
mogsiealso
roy
have
say
that
at
one
point
he
want
to
do
his
phd
dissertation
on
harel
state
requirement_16
www
inf
ed
ac
uk
teaching
seoc
2005_200
finally
while
i
think
use
state
requirement_16
diagram
etc
can
help
in
visualize
the
component_3
side
of
the
component_16
i
t
think
they
be
very
important
for
the
component_29
side
irl
we
human
encounter
state
drive
component_5
all
day
and
t
need
the
diagram
in
our
head
in
order
to
connector_21
with
them
connector_data_22
back
to
top
close
your
connector_data_22
quote
original
connector_data_16
allow
technology_22
a
b
br
blockquote
i
li
pre
u
ul
p
me
connector_data_20
to
any
of
my
connector_data_15
in
this
component_27
cancel
close
your
connector_data_22
allow
technology_22
a
b
br
blockquote
i
li
pre
u
ul
p
me
connector_data_20
to
any
of
my
connector_data_15
in
this
component_27
cancel
close
ok
development
how
to
prepare
for
the
unexpected
an
influxdata
outage
story
tell
at
kubeconeu
reproducible
development
with
container
green
development
terminology
and
climate
commitment
explain
by
at
devoxx
uk
architecture
&
design
oren
eini
on
technology_9
include
consistency
guarantee
and
technology_5
a
the
implementation
technology_10
kalix
build
serverless
requirement_9
requirement_15
requirement_12
crtical
component_25
with
no
component_4
architecting
for
the
edge
culture
&
how
connector_31
feedback
from
angry
component_30
help
to
develop
quality_attribute_7
technology_13
how
to
run
your
technology_13
department
a
coach
build
a
culture
of
quality_attribute_20
and
curiosity
requirement_4
ml
&
connector_data_1
engineering
requirement_6
at
the
edge
release
technology_10
requirement_4
train
dataset
massive
requirement_4
for
developer
a
future
or
a
reality
devops
hashicorp
vault
improve
eventual
consistency
with
component_2
side
consistent
connector_data_23
cloudflare
d1
provide
quality_attribute_3
technology_32
for
cloudflare
component_24
effectively
pattern_13
your
pattern_13
miedwar
meshbesher
on
use
vigilance
control
the
infoq
newsletter
a
round
up
of
last
week’s
content
on
infoq
connector_29
out
every
tuesday
join
a
of
over
senior
developer
pattern_6
an
example
connector_1
a
quick
overview
of
content
publish
on
a
variety
of
innovator
and
early
adopter
technology_26
what
you
don’t
that
you
don’t
stay
up
to
date
with
the
late
connector_data_12
from
the
topic
you
be
interest
in
enter
your
e
mail
connector_36
select
your
country
select
a
country
i
to
infoq
technology_20
handle
my
connector_data_1
a
explain
in
this
privacy
notice
we
protect
your
privacy
qcon
development
conference
real
world
technical
talk
no
technology_13
pitch
practical
idea
to
inspire
you
and
your
team
qcon
san
francisco
oct
in
person
qcon
san
francisco
bring
together
the
world
s
most
innovative
senior
engineer
across
multiple
domain
to
connector_32
their
real
world
implementation
of
emerge
trend
and
practice
uncover
emerge
trend
and
practice
to
solve
your
complex
engineering
challenge
without
the
technology_13
pitch
connector_7
your
spot
now
home
create
account
login
qcon
conference
contribute
infoq
editor
about
infoq
about
c4media
technology_46
infoq
developer
requirement_18
diversity
infoq
live
infoq
live
infoq
live
qcon
san
francisco
qcon
plus
follow
u
on
youtube212k
follower
linkedin18k
follower
rss19k
reader
twitter50k
follower
facebook20k
alexanew
stay
in
the
the
infoq
podcast
engineering
culture
podcast
the
architect
newsletter
general
feedback
feedback@infoq
technology_20
advertising
sales@infoq
technology_20
editorial
editors@infoq
technology_20
requirement_18
marketing@infoq
technology_20
infoq
technology_20
and
all
content
copyright
©
c4media
inc
infoq
technology_20
component_31
at
contegix
the
best
isp
we
ve
ever
work
with
privacy
notice
term
and
condition
requirement_19
bt
