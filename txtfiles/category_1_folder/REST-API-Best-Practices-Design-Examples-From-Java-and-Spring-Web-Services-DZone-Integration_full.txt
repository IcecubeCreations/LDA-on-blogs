pattern_1
component_1
best
practice
—
design
example
from
technology_1
and
technology_2
web
component_2
requirement_1
requirement_1
zone
thanks
for
visit
today
edit
profile
manage
subscription
how
to
to
submission
guideline
sign
out
pattern_2
profile
an
manage
my
draft
over
million
developer
have
join
requirement_2
in
join
refcardz
trend
report
webinars
zone
|
agile
requirement_3
requirement_4
requirement_5
component_3
devops
requirement_1
iot
technology_1
pattern_3
open_source
requirement_6
quality_attribute_1
web
dev
requirement_1
zone
pattern_1
component_1
best
practice
—
design
example
from
technology_1
and
technology_2
web
component_2
pattern_1
component_1
best
practice
—
design
example
from
technology_1
and
technology_2
web
component_2
in
the
last
in
this
series
connector_1
out
pattern_1
component_1
best
practice
and
look
at
design
example
from
technology_1
and
technology_2
web
component_4
by
ranga
karanam
core
·
nov
·
requirement_1
zone
·
connector_2
tweet
20k
pattern_2
join
the
and
connector_3
the
full
member
experience
join
for
free
pattern_1
component_1
best
practice
when
design
a
great
pattern_1
technology_3
it
s
important
to
have
great
pattern_3
how
do
you
design
your
pattern_1
technology_3
what
be
the
best
practice
you
will
how
do
you
design
a
great
pattern_1
technology_3
what
should
you
think
about
when
design
a
pattern_1
technology_3
what
be
the
best
practice
in
design
pattern_4
web
component_4
you
also
be
interest
in
top
pattern_1
component_1
best
practice
pattern_1
component_1
this
be
the
last
in
a
series
of
on
pattern_1
apis
introduction
to
pattern_1
component_1
—
pattern_4
web
component_2
pattern_1
vs
technology_4
—
a
few
perspective
design
a
pattern_1
component_1
—
what
be
contract
first
design
a
pattern_1
component_1
—
what
be
first
approach
pattern_1
component_1
—
what
be
hateoas
use
a
component_5
first
approach
who
be
go
to
use
your
component_4
the
component_4
component_5
be
you
look
at
it
from
the
component_5
perspective
if
you
design
an
technology_3
will
your
component_5
be
able
to
understand
your
technology_3
if
you
connector_4
your
resource
will
the
component_5
be
able
to
locate
and
connector_5
them
will
the
component_5
be
able
to
understand
your
uris
what
be
the
type
of
component_4
that
you
provide
be
it
a
requirement_7
component_6
or
be
it
a
web
base
component_6
what
be
the
kind
of
component_7
you
expect
and
be
these
component_5
type
likely
to
connector_6
in
the
future
if
you
connector_7
something
hateoas
think
about
how
your
component_7
would
use
it
before
you
connector_7
it
the
most
important
thing
be
to
have
great
documentation
make
thing
easy
for
your
component_7
so
that
it
connector_8
your
own
time
the
more
component_7
can
do
on
their
own
the
le
work
there
be
for
you
whenever
you
have
a
discussion
or
review
meet
put
the
requirement
of
the
component_5
first
use
a
contract
first
approach
what
be
a
contract
the
creator
of
the
web
component_4
be
consider
a
the
component_4
technology_5
the
component_6
that
connector_9
the
web
component_4
be
the
component_4
component_5
a
contract
be
an
agreement
between
a
component_4
technology_5
and
a
component_4
component_5
about
a
component_4
in
order
the
utilize
the
component_4
well
the
component_4
component_5
need
to
understand
the
contract
fully
a
contract
include
detail
of
many
aspect
of
the
component_4
such
a
how
to
connector_data_1
the
web
component_4
what
transport
be
be
use
what
be
the
connector_data_2
and
connector_10
connector_data_3
this
be
also
connector_11
the
component_4
definition
in
a
contract
first
approach
you
define
the
component_4
contract
first
and
only
then
connector_7
the
component_4
contract
first
with
technology_6
for
example
when
you
define
technology_4
web
component_4
you
use
technology_6
to
define
the
contract
technology_6
define
what
be
the
component_4
the
that
you
be
connector_4
and
the
connector_data_2
and
connector_10
connector_data_3
contract
first
with
technology_7
open
component_1
when
you
use
pattern_4
web
component_4
technology_7
be
a
popular
technology_8
use
to
document
your
web
component_4
technology_7
allow
you
to
define
what
be
the
resource
you
be
connector_12
a
part
of
your
technology_3
it
include
the
detail
of
each
such
a
whether
it
connector_9
technology_9
technology_10
or
both
the
schema
of
the
connector_10
be
also
present
there
it
also
give
the
detail
of
the
connector_10
cod
it
support
you
can
also
see
that
this
particular
resource
technology_11
component_8
support
a
connector_3
in
fact
also
support
a
the
connector_10
schema
if
this
resource
be
see
to
be
the
definition
of
component_8
be
present
in
the
technology_7
contract
a
it
include
a
birthdate
an
a
name
and
an
of
some
also
include
a
description
within
them
in
a
contract
first
approach
you
create
such
a
technology_7
definition
either
by
hand
or
by
use
an
component_6
before
the
component_4
be
connector_7
advantage
of
a
contract
first
approach
by
use
a
contract
first
approach
you
be
think
about
your
component_7
and
how
they
can
use
the
component_4
you
be
initially
not
worry
about
the
implementation
detail
if
you
give
importance
to
the
implementation
early
on
then
technical
detail
creep
into
your
component_4
definition
you
need
your
component_4
definition
to
be
independent
of
the
component_9
be
use
be
it
technology_1
net
or
whatever
define
organizational
technology_12
for
pattern_1
component_10
an
important
reference
for
your
organizational
technology_12
be
yaras
yaras
stand
for
yet
another
pattern_4
component_1
technology_12
yaras
provide
technology_12
guideline
and
convention
to
be
follow
while
develop
pattern_4
web
component_4
it
define
tip
for
thing
such
a
how
you
should
name
your
component_2
how
you
should
connector_data_3
your
connector_data_2
and
connector_10
how
you
should
connector_7
pattern_5
sorting
component_11
and
other
action
how
you
should
approach
versioning
how
you
need
to
approach
component_1
documentation
have
a
single
approach
to
design
component_2
with
pattern_4
web
component_4
you
need
to
connector_13
a
lot
of
complex
issue
before
you
start
design
them
all
the
thing
connector_data_4
above
need
to
be
figure
out
a
an
organization
you
don’t
want
team
that
handle
different
resource
to
approach
thing
differently
for
example
it
be
not
quality_attribute_2
to
have
team
a
adopt
connector_data_2
parameter
base
versioning
and
have
team
b
use
uri
base
versioning
therefore
it
be
important
you
have
clearly
define
organizational
technology_12
to
approach
pattern_4
component_4
customize
yaras
to
organizational
need
the
quality_attribute_2
thing
about
yaras
be
it
can
be
customize
to
meet
the
need
specific
to
an
organization
for
example
you
can
customize
what
the
connector_data_2
and
connector_10
body
need
to
look
choose
a
specific
kind
of
versioning
component_12
since
yaras
be
quite
comprehensive
in
it
coverage
you
can
be
sure
you
haven’t
miss
out
on
any
important
decision
build
a
technology_12
organization
wide
pattern_1
component_1
technology_13
the
typical
technology_13
that
be
use
to
build
pattern_4
web
component_2
in
the
technology_1
world
be
technology_2
mvc
technology_2
pattern_1
and
jax
r
if
you
build
an
organization
specific
technology_13
archetype
reference
component_6
adhere
to
the
common
organization
technology_12
on
top
of
your
prefer
pattern_1
component_1
technology_13
it
would
make
it
easy
for
team
to
adhere
to
your
technology_12
typical
feature
include
connector_data_2
and
connector_10
connector_data_5
error
handle
pattern_5
search
versioning
support
for
mock
connector_10
hateoas
a
technology_12
technology_13
ensure
a
technology_12
way
of
approach
component_4
design
and
implementation
across
the
organization
have
decentralized
governance
of
pattern_1
component_10
create
an
expert
group
of
representative
from
team
build
pattern_1
component_1
and
form
a
governance
team
the
team
be
responsible
for
improve
pattern_1
component_1
technology_12
build
design
your
pattern_1
component_1
technology_13
make
great
use
of
technology_14
whenever
you
think
pattern_4
web
component_4
think
technology_14
technology_14
have
all
the
feature
that
support
you
to
build
great
web
component_4
use
proper
technology_14
connector_data_2
think
about
the
technology_14
connector_data_2
that
you
need
to
make
use
of
when
you
think
of
connector_14
any
identify
the
resource
on
which
it
be
to
be
perform
and
then
seek
out
the
relevant
technology_14
connector_data_2
be
you
connector_15
a
detail
create
something
update
something
that
exist
or
delete
a
thing
that
exist
use
connector_3
for
connector_15
for
create
put
for
update
delete
for
delete
patch
for
partial
connector_data_6
use
appropriate
technology_14
connector_10
status
when
you
connector_7
an
make
sure
you
the
correct
connector_10
status
for
example
when
a
particular
resource
be
not
find
don’t
throw
a
component_13
exception
instead
connector_16
out
the
appropriate
connector_10
in
the
connector_10
connector_data_7
such
a
when
there
be
actually
a
component_13
exception
connector_16
back
a
when
there
be
a
validation
error
connector_16
the
for
a
bad
connector_data_2
focus
on
representation
each
resource
can
have
multiple
representation
—
connector_data_8
or
technology_10
technology_15
the
component_4
component_5
can
choose
the
representation
of
their
choice
the
component_4
three
component_14
when
we
submit
a
connector_3
connector_data_2
to
it
in
this
requirement_8
we
connector_17
the
technology_10
representation
of
the
resource
component_8
when
a
component_5
do
not
specify
a
prefer
representation
we
use
technology_16
the
component_5
can
connector_16
an
connector_18
to
specify
the
representation
the
connector_10
body
now
have
connector_data_8
content
use
plural
always
use
plural
when
you
name
resource
let’s
look
at
a
quality_attribute_3
example
suppose
we
have
a
component_4
that
component_15
a
component_14
resource
the
follow
describe
to
component_7
how
to
connector_5
them
create
a
component_8
component_8
delete
a
component_8
delete
component_8
connector_3
all
component_8
connector_3
component_8
connector_3
one
component_8
connector_3
component_8
prefer
a
plural
component_14
to
component_8
make
uri
more
readable
for
example
if
we
use
component_8
instead
of
component_8
for
the
connector_19
connector_3
component_8
do
not
convey
the
right
connector_data_7
to
the
reader
have
great
documentation
component_7
need
to
understand
how
to
make
the
best
use
of
the
component_4
and
the
best
way
to
help
them
be
by
create
great
documentation
technology_4
web
component_2
can
utilize
the
requirement_9
of
technology_17
while
pattern_4
web
component_2
have
option
of
technology_7
now
open
component_1
documentation
technology_12
choose
the
technology_15
be
one
part
of
generate
quality_attribute_2
documentation
what
also
matter
be
put
in
the
right
amount
of
connector_data_9
to
be
of
assistance
to
the
component_5
the
documentation
need
to
be
complete
and
should
cover
the
follow
point
what
be
the
connector_data_2
and
connector_10
connector_data_3
how
the
component_5
need
to
pattern_6
himself
what
be
the
usage
limit
specify
all
the
connector_10
connector_data_7
type
and
the
relate
status
cod
that
can
be
expect
out
of
the
component_4
have
a
common
pattern_1
component_1
documentation
portal
a
beneficial
thing
to
do
would
be
to
have
a
common
pattern_1
component_1
documentation
portal
across
the
organization
have
a
look
at
one
such
portal
such
a
portal
consolidate
all
the
resource
present
in
the
organization
have
a
component_8
such
a
technology_7
ui
would
have
it
benefit
use
technology_7
ui
you
can
actually
look
at
the
documentation
in
more
detail
this
be
quality_attribute_4
even
by
non
technical
component_8
the
connector_data_9
see
here
include
the
expect
connector_10
technology_15
the
content
type
the
connector_10
cod
support
toy
can
also
try
out
the
technology_15
of
the
documentation
in
a
live
connector_data_2
connector_10
pair
support
versioning
versioning
bring
in
a
lot
of
complexity
for
a
web
component_4
maintain
several
differ
version
of
the
same
web
component_4
be
a
pain
try
avoid
it
when
possible
however
in
certain
scenario
versioning
be
unavoidable
u
start
off
by
look
at
an
example
component_4
suppose
we
have
initially
define
a
component_4
to
have
a
name
personv1
in
this
manner
this
version
of
the
do
not
take
into
account
that
a
name
could
have
many
sub
part
such
a
first
name
and
last
name
have
a
look
a
this
the
second
version
of
the
original
be
update
to
correct
this
anomaly
we
cannot
migrate
the
entire
component_4
to
use
personv2
immediately
there
might
be
other
component_7
who
be
expect
connector_10
in
the
technology_15
of
personv1
this
be
where
versioning
be
need
u
now
look
at
the
option
we
have
to
version
these
two
resource
use
different
uris
one
option
that
we
have
be
to
use
different
uris
for
these
different
resource
in
the
exampel
below
we
use
the
uris
v1
person
and
v2
person
to
differentiate
them
if
you
connector_20
a
connector_3
connector_data_2
for
the
resource
v1
person
you
will
connector_3
the
connector_data_9
correspond
to
v1
for
the
other
resource
use
a
connector_data_2
parameter
the
second
versioning
u
a
connector_data_2
parameter
to
the
uri
person
param
if
we
connector_16
a
parameter
with
version=1
then
we
the
resource
of
type
personv1
for
the
same
uri
a
parameter
with
version=2
a
resource
of
type
personv2
this
be
connector_11
connector_data_2
parameter
versioning
use
a
another
way
you
can
do
versioning
be
by
specify
a
here
we
use
a
name
x
technology_3
version
and
have
label
the
uri
a
person
when
the
requirement_10
be
the
resource
of
type
personv1
be
when
it
requirement_10
be
a
resource
of
type
personv2
be
connector_19
we
be
use
an
attribute
on
a
connector_data_2
to
perform
the
versioning
for
u
use
the
connector_18
the
last
for
achieve
versioning
make
use
of
the
connector_18
if
the
component_5
include
the
first
versioning
connector_data_9
in
the
connector_18
of
the
connector_3
connector_data_2
the
follow
resource
come
back
otherwise
the
resource
of
type
personv2
be
this
be
connector_11
connector_18
versioning
or
type
versioning
because
mime
type
be
the
usually
the
content
of
an
connector_18
compare
the
versioning
technique
we
have
so
far
see
four
type
of
versioning
technique
uri
versioning
connector_data_2
param
versioning
versioning
type
versioning
which
of
these
be
the
best
one
the
truth
be
there
be
no
single
answer
to
this
question
the
fact
of
the
matter
be
that
different
type
of
versioning
be
patronize
by
different
internet
giant
uri
versioning
—
twitter
connector_data_2
param
versioning
—
parameter
versioning
—
type
versioning
—
technology_18
you
need
to
evaluate
these
four
choice
accord
to
your
specific
need
there
be
a
number
of
important
factor
to
consider
uri
pollution
with
uri
versioning
and
connector_data_2
parameter
versioning
we
end
up
pollute
the
uri
space
this
be
because
we
prefix
and
suffix
to
the
core
uri
versioning
avoid
that
misuse
of
technology_14
in
the
requirement_8
of
versioning
and
type
versioning
there
be
a
misuse
of
technology_14
since
they
be
not
originally
mean
for
versioning
pattern_7
a
resource
be
define
by
it
uri
however
if
you
be
not
use
the
uri
to
determine
it
version
but
use
a
base
mechanism
the
versioning
connector_data_9
cannot
be
pattern_7
if
technology_14
pattern_7
be
important
to
you
use
the
uri
or
connector_data_2
parameter
versioning
browser
connector_data_2
executability
both
and
type
versioning
need
the
use
of
technology_8
such
a
postman
to
connector_20
the
browser
connector_data_2
however
if
the
component_7
of
the
component_4
be
not
technically
well
verse
then
uri
or
connector_data_2
parameter
versioning
would
be
preferable
component_1
documentation
you
also
need
to
think
about
how
you
want
to
document
your
apis
the
uri
and
connector_data_2
parameter
versioning
be
easy
to
document
than
the
other
two
versioning
type
realize
that
there
be
no
single
perfect
solution
think
about
error
handle
when
a
component_5
connector_21
a
connector_data_2
to
a
component_4
it
be
important
that
he
connector_22
the
right
connector_10
whenever
something
go
wrong
it
be
important
to
connector_16
an
appropriate
connector_10
when
component_5
connector_data_10
a
non
exist
resource
if
we
connector_16
a
connector_3
connector_data_2
to
search
for
an
exist
component_8
we
connector_3
the
follow
connector_10
if
you
search
for
a
non
existent
component_8
what
you
connector_3
back
be
a
status
of
not
find
this
be
quality_attribute_2
error
handle
because
it
correctly
identify
that
the
resource
be
not
find
and
do
not
a
component_13
error
let’s
now
connector_16
a
connector_3
connector_data_2
to
a
non
existent
uri
you
can
see
that
you
connector_3
a
not
find
a
wrong
url
indicate
a
non
existent
resource
a
look
at
important
connector_10
status
—
success
—
resource
not
find
—
bad
connector_data_2
such
a
validation
error
—
create
—
unauthorized
when
pattern_8
fail
—
component_13
error
error
detail
in
connector_10
body
it
help
if
you
have
a
technology_12
exception
connector_data_3
when
design
your
component_4
for
specific
error
specific
connector_10
connector_data_5
can
be
to
the
component_5
and
this
can
be
a
technology_12
across
the
organization
make
sure
that
the
error
connector_10
be
also
readable
to
the
component_5
without
confusion
use
technology_7
or
open
component_1
documentation
technology_7
be
one
of
the
most
popular
documentation
technology_15
for
pattern_4
web
component_4
it
be
today
support
by
a
wide
variety
of
organization
and
use
in
a
large
number
of
component_4
we
look
at
two
aspect
of
technology_7
here
the
technology_7
documentation
technology_15
technology_7
ui
which
enable
you
to
look
at
the
technology_7
documentation
in
a
visually
please
manner
technology_7
documentation
have
a
look
at
the
follow
technology_7
technology_16
at
a
high
level
it
look
very
similar
to
a
technology_6
definition
it
have
several
important
attribute
component_16
where
the
component_4
be
component_16
basepath
the
path
where
the
component_4
be
component_16
connector_23
what
kind
of
connector_data_10
be
connector_18
produce
what
kind
of
connector_10
be
generate
paths”
the
different
resource
present
in
this
requirement_8
you
have
several
type
of
resource
connector_data_4
when
you
look
at
the
technology_7
documentation
you
can
quickly
determine
the
resource
that
be
present
the
that
be
support
and
the
that
be
relevant
for
each
resource
the
resource
component_8
support
both
connector_3
and
for
connector_3
you
can
see
the
support
connector_data_2
and
connector_10
type
you
also
see
the
different
connector_10
type
it
have
notice
that
for
a
connector_10
a
schema
be
also
mention
a
an
of
component_8
component_8
be
part
of
the
definition
section
at
the
bottom
of
the
document
technology_7
be
completely
independent
of
the
technology_19
you
use
to
connector_7
your
pattern_4
web
component_4
it
be
all
basic
technology_10
at
work
introduce
technology_7
ui
technology_7
be
a
great
ui
technology_8
that
be
useful
to
visualize
technology_7
documentation
for
a
pattern_4
web
component_4
have
a
look
at
the
screenshot
below
note
that
we
have
chosen
a
particular
version
of
a
web
component_4
to
pattern_2
it
documentation
here
be
the
same
screen
in
quality_attribute_2
detail
when
we
come
to
the
homepage
it
describe
the
resource
that
be
connector_data_4
also
the
set
of
support
for
the
resource
url
can
be
see
when
you
click
on
the
connector_3
of
a
particular
resource
you
connector_3
it
detail
you
can
see
the
component_17
schema
be
describe
visually
the
attribute
birthdate
connector_24
name
and
be
also
show
you
can
also
connector_20
a
sample
connector_data_2
and
pattern_2
the
connector_10
use
technology_7
open
component_1
technology_12
technology_8
the
great
thing
about
technology_7
be
there
be
a
lot
of
technology_8
quality_attribute_5
around
it
have
a
look
at
the
follow
component_4
which
we
have
use
early
to
explain
versioning
here’s
a
look
at
the
automatically
generate
documentation
for
this
component_4
there
be
support
in
technology_7
for
both
a
contract
first
approach
and
a
first
approach
do
connector_1
out
our
video
on
the
same
topic
summary
in
this
we
have
a
look
at
the
best
practice
for
build
and
design
pattern_4
web
component_4
further
connector_25
be
the
best
at
your
pattern_1
technology_3
develop
pattern_1
component_10
pattern_1
web
technology_20
component_1
web
component_4
pattern_9
connector_data_10
component_5
design
documentation
uniform
resource
identifier
type
opinion
express
by
contributor
be
their
own
popular
on
ultra
fast
pattern_3
when
microstream
meet
technology_21
create
a
self
component_4
requirement_11
support
requirement_12
without
synchronization
for
many
to
many
association
deployment
of
low
quality_attribute_6
solution
in
the
requirement_5
requirement_1
partner
resource
x
about
u
about
connector_16
feedback
career
sitemap
advertise
advertise
with
contribute
on
submission
guideline
mvb
component_18
become
a
contributor
visit
the
writer
zone
legal
term
of
component_4
privacy
requirement_13
u
park
office
drive
suite
durham
nc
support@dzone
technology_22
+1
s
be
friend
technology_22
be
powered
by
