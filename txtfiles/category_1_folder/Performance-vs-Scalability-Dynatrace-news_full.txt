requirement_1
vs
quality_attribute_1
|
dynatrace
news
component_1
support
technology_1
infrastructure
pattern_1
component_2
&
pattern_2
component_3
quality_attribute_2
digital
experience
requirement_2
requirement_3
requirement_4
automation
solution
technology_2
technology_3
technology_4
technology_5
servicenow
vmware
tanzu
u
s
government
resource
requirement_5
story
technology_6
news
demo
webinars
podcast
component_4
&
support
dynatrace
one
ace
component_4
requirement_2
insight
dynatrace
university
support
center
documentation
dynatrace
requirement_6
about
newsroom
career
partner
leadership
investor
relation
esg
location
pattern_3
login
free
trial
search
home
requirement_1
vs
quality_attribute_1
alois
reitbauer
devops
connector_1
when
people
talk
about
requirement_1
and
quality_attribute_1
they
very
often
use
these
two
word
synonymously
however
they
mean
different
thing
a
there
be
a
lot
of
misunderstanding
on
that
topic
i
think
it
make
sense
to
have
a
on
it
one
of
the
best
explanation
can
be
find
here
it
be
a
nice
explanation
by
werner
vogels
the
cto
of
i
think
everybody
agree
that
he
what
he
be
talk
about
requirement_1
refer
to
the
capability
of
a
component_5
to
provide
a
certain
response_time
component_6
a
define
number
of
component_7
or
component_8
a
certain
amount
of
connector_data_1
so
requirement_1
be
a
quality
metric
unlike
to
what
many
people
think
it
be
not
vage
but
can
be
define
in
number
if
we
realize
that
our
requirement_1
requirement
connector_2
e
g
we
have
to
serve
more
component_9
we
have
to
provide
lower
connector_3
time
or
we
cannot
meet
our
requirement_1
goal
quality_attribute_1
come
into
play
quality_attribute_1
refer
to
the
characteristic
of
a
component_5
to
increase
requirement_1
by
additional
ressources
very
often
people
think
that
there
component_5
be
scalabable
out
of
the
component_10
“if
we
need
to
serve
more
component_9
we
additional
server”
be
a
typical
answer
for
requirement_1
problem
however
this
assume
that
the
component_5
be
quality_attribute_3
mean
additional
resource
really
help
to
improve
requirement_1
whether
your
component_5
be
quality_attribute_3
or
not
quality_attribute_4
on
your
architecture
component_11
not
have
quality_attribute_1
a
a
design
goal
often
do
not
provide
quality_attribute_5
scalabilty
this
infoq
with
cameron
purdy
–
vp
of
development
in
oracle’s
fusion
technology_7
group
and
former
tangosol
ceo
–
provide
a
quality_attribute_5
example
on
limit
quality_attribute_1
of
a
component_5
there
be
also
two
nice
artilces
by
sun’s
wang
yu
on
vertical
and
horizontal
scalabilty
so
how
do
this
relate
to
dynatrace
with
lifecycle
apm
we
define
an
approach
how
to
ensure
requirement_1
and
quality_attribute_1
over
the
component_3
lifecycle
–
from
development
to
production
we
work
with
our
requirement_5
to
make
requirement_1
requirement_7
part
of
their
component_12
go
beyond
requirement_1
test
and
firefighting
when
there
be
problem
in
production
a
scalabilty
problem
be
in
nearly
all
requirement_8
architectural
problem
these
charateristcs
have
to
be
test
already
in
the
development
phase
dynatrace
provide
mean
to
quality_attribute_6
and
automate
requirement_1
requirement_7
in
your
continuous
requirement_9
environment
when
i
talk
to
people
i
sometimes
connector_4
the
feedback
“…
isn’t
that
premature
optimization”
have
a
look
at
the
cool
image
on
premature
optimization
in
k
scott
allen’s
this
be
a
strong
misconception
premature
optimization
would
mean
that
we
always
try
to
do
requirement_1
optimization
whenever
and
wherever
we
can
lifecycle
apm
and
continuous
requirement_1
requirement_7
a
the
development
part
of
it
target
to
connector_4
all
connector_data_2
to
always
about
the
scalabilty
and
requirement_1
characteristcs
of
your
component_3
this
serve
a
a
basis
for
decide
when
and
where
to
optimize
actually
avoid
premature
optimization
in
the
wrong
direction
conclude
we
can
say
that
if
we
want
our
component_11
to
be
quality_attribute_3
we
have
to
take
this
into
consideration
right
from
the
begin
of
development
and
also
pattern_4
throuhout
the
lifecycle
if
we
have
to
ensure
it
we
have
to
pattern_4
it
this
mean
that
requirement_1
requirement_7
must
then
treat
equally
relevant
than
the
requirement_7
of
functional
requirement
#apm
lifecycle
lifecycle
devops
requirement_1
you
this
feel
free
to
connector_1
alois
reitbauer
the
author
alois
be
chief
technology_1
strategist
of
dynatrace
he
be
fanatic
about
pattern_4
devops
and
component_3
requirement_1
he
spend
most
of
his
professional
career
in
build
pattern_1
technology_8
and
quality_attribute_7
up
component_3
he
be
a
regular
conference
speaker
technology_9
book
author
and
sushi
maniac
look
for
answer
start
a
discussion
or
ask
for
help
in
our
q&a
forum
go
to
forum
disclaimer
the
pattern_5
express
on
this
be
my
own
and
do
not
reflect
the
pattern_5
of
dynatrace
llc
or
it
affiliate
you
also
what
be
slos
how
component_13
level
objective
work
with
slis
to
connector_5
on
slas
saif
gunja
stay
update
technology_10
fee
all
connector_data_3
technology_6
news
enter
your
connector_6
x
connector_7
all
digital
gamechangers
watch
every
component_14
from
dynatrace
perform
on
demand
for
free
watch
on
demand
overview
requirement_6
support
technology_1
component_3
requirement_1
pattern_1
apm
infrastructure
pattern_1
requirement_4
automation
component_3
quality_attribute_2
digital
experience
aiops
automate
full
technology_11
davis
requirement_10
component_15
overview
requirement_4
pattern_2
container
pattern_1
devops
observability
requirement_4
pattern_1
component_3
pattern_1
davis
assistant
overview
demo
webinars
&
requirement_5
story
podcast
free
trial
connector_data_4
demo
overview
dynatrace
one
intelligence
hub
expert
component_4
university
support
center
technology_6
news
documentation
overview
leadership
investor
relation
news
technology_12
career
partner
location
esg
u
legal
disclosure
trust
center
dynatrace
status
requirement_11
term
of
use
sitemap
twitter
technology_13
linkedin
youtube
glassdoor
home
©
{currentyear}
dynatrace
llc
all
right
reserve
