home
technology_1
technology_1
technology_1

question
top
technology_1
hashmap
and
concurrenthashmap
question
top
technology_1
connector_data_1
connector_data_2
and
algorithm
question
technology_1
miscelleneous
topic
technology_1

feature
technology_1
basic
topic
technology_2
technology_2
technology_2
question
technology_2
pattern_1
question
technology_2
technology_3
basic
technology_2
technology_2
quality_attribute_1
technology_2
pattern_1
technology_2
transaction
netflix
technology_2
requirement_1
pivotal
requirement_1
foundry
technology_2
+
technology_4
technology_2
+
technology_5
technology_2
+
technology_6
technology_7
graphql
+
technology_2
angular
angular
angular

question
technology_8
primeng

angular4

angular


full
technology_9
full
technology_9

technology_6
technology_7
technology_6
technology_7
technology_6
technology_7
question
technology_10
fuse
question
esb
requirement_2
component_1
bus
question
standalone
technology_6
technology_7
example
technology_6
technology_7
use
technology_2
dsl
and
technology_10
fuse
technology_6
technology_7
+
technology_2
requirement_1
technology_3
netflix
requirement_1
component_2
pivotal
requirement_1
foundry
pattern_2
pattern_2
technology_2
+
technology_4
technology_2
+
technology_6
technology_11
technology_12
technology_12
technology_12
question
technology_10
technology_12
hello
world
hello
world
stateful
knowledge
component_3
use
kiesession
understand
technology_12
decision
component_4
use
quality_attribute_2
example
understand
technology_12
stateful
vs
stateless
knowledge
component_3
backward
chain
quality_attribute_2
example
understand
attribute
salience
update
statement
and
no
loop
use
quality_attribute_2
example
understand
connector_1
control
in
technology_12
use
quality_attribute_2
example
requirement_3
with
technology_2
search
component_5
technology_6
technology_13
elasticsearch
elasticsearch
question
technology_6
technology_13
vs
elasticsearch
technology_14
devops
devops
technology_15

technology_16

webseries
crypto
technology_17
technology_18
certification
az

online
certification
search

technology_2
+
technology_6
technology_7
+
technology_4
hello
world
example
|
javainuse
technology_2
+
technology_6
technology_7
+
technology_4
hello
world
example
in
previous

we
have
connector_2
example
use
technology_2
+rabbitmq
in
this
we
will
be
connector_3
an
example
use
technology_2
+
technology_6
technology_7
+
technology_4
we
have
already
connector_2
quite
a
few
technology_6
technology_7
example
before
why
use
technology_6
technology_7
in
an
requirement_2
a
number
of
component_6
of
different
type
exist
some
of
these
be
component_7
component_6
while
some
be

these
component_6
often
connector_4
with
each
other
and
need
to
be
quality_attribute_3
this
connector_5
or
requirement_3
be
not
easy
a
the
implementation
of
the
component_8
their
connector_data_3
technology_19
differ
one
way
to
achieve
this
be
to
connector_2
which
bridge
these
difference
however
this
will
be
point
to
point
requirement_3
if
tomorrow
again
if
there
be
connector_6
in
a
component_8
the
other
might
also
have
to
be
connector_6
which
be
not
quality_attribute_4
instead
of
this
point
to
point
requirement_3
which
cause
tight
couple
we
can
connector_2
an
additional
pattern_3
to
mediate
the
difference
between
the
component_8
this
connector_data_4
in
loose
couple
and
not
affect
much
our
exist
component_8
technology_6
technology_7
be
a
rule
base
connector_7
and
mediation
component_5
that
provide
a
technology_1
connector_data_5
base
implementation
of
the
requirement_2
requirement_3
pattern_4
use
an
component_9
or
declarative
technology_1
domain
specific
technology_20
to
configure
connector_7
and
mediation
rule
technology_6
technology_7
component_4
of
content
transfer
use
technology_1
dsl
technology_6
technology_7
technology_6
technology_7
technology_1
dsl
+
technology_2
requirement_3
hello
world
example
technology_6
technology_7
exception
handle
use
quality_attribute_2
example
technology_6
technology_7
redelivery
requirement_4
use
example
quality_attribute_3
technology_6
technology_7
and
technology_21
eip
pattern_4
use
technology_6
technology_7
technology_6
technology_7

quality_attribute_3
spring_boot+
technology_6
technology_7
technology_6
technology_7

quality_attribute_3
with
technology_22
db
use
technology_23
query
technology_6
technology_7
eip
splitter
and
aggregator
pattern_4
technology_6
technology_7
unit
test
technology_6
technology_7
+
technology_2
+
quartz
hello
world
example
technology_7
component_10
deployment
on
technology_10
fuse
technology_6
technology_7
+
technology_6
technology_24
technology_25
webservices
technology_6
technology_7
+
technology_26
pattern_5
webservice
technology_6
technology_7
+
cxfrs
pattern_5
webservice
technology_6
technology_7
connector_7
slip
eip
pattern_4
technology_6
technology_7
dynamic
pattern_6
pattern_4
technology_6
technology_7
load
balancer
eip
pattern_4
technology_6
technology_7
pattern_7
technology_6
technology_7
+
technology_11
hello
world
example
technology_6
technology_7
marshal
unmarshalling
technology_27
technology_28
connector_data_1
example
connector_8
and
connector_9
webservices
use
technology_6
technology_7
technology_6
technology_7
connector_10
technology_29
use
gmail
technology_6
technology_7
seda
component_11
hello
world
example
technology_6
technology_7
idempotent
component_12
use
memoryidempotentrepository
and
fileidempotentrepository
technology_2
+
technology_6
technology_7
+
technology_4
hello
world
example
technology_2
+
technology_6
technology_7
technology_30
component_11
+
technology_22
hello
world
example
technology_2
+
technology_6
technology_7
technology_23
component_11
+
technology_22
hello
world
example
technology_2
+
technology_6
technology_7
technology_23
component_11
+
transaction
requirement_5
example
the
project
we
will
be
develop
be
a
follow
the
technology_31
project
be
a
follow
the
pom
technology_27
be
a
follow
project
xmlns=
technology_32
technology_31
technology_6

pom



xmlns
xsi=
technology_32
www
w3


xmlschema
instance
xsi
schemalocation=
technology_32
technology_31
technology_6

pom



technology_32
technology_31
technology_6

technology_33
technology_31



technology_33
modelversion



modelversion

technology_34
javainuse


technology_7
technology_2
boot

version



snapshot
version
parent


springframework
boot


technology_2
boot
starter
parent

version



release
version
relativepath
parent
property
project
build
sourceencoding
utf

project
build
sourceencoding
project
report
outputencoding
utf

project
report
outputencoding
technology_1
version


technology_1
version
property
connector_11
connector_11


springframework
boot


technology_2
boot
starter
web

connector_11
connector_11


technology_6
technology_7


technology_7
technology_2
boot
starter

version



version
connector_11
connector_11


technology_6
technology_7


technology_7
core

version



version
connector_11
connector_11


technology_6
technology_7


technology_7
technology_35

version



version
connector_11
connector_11


technology_6
technology_7


technology_7
technology_4

version



version
connector_11
connector_11
project
create
the
component_13
a
follow
package
technology_34
javainuse
component_13
requirement_6
{
private
empid
private
name
private
designation
private
double
salary
requirement_6
{
}
getname
{
name
}
setname

name
{
this
name
=
name
}
getdesignation
{
designation
}
setdesignation

designation
{
this
designation
=
designation
}
double
getsalary
{
salary
}
setsalary
double
salary
{
this
salary
=
salary
}
getempid
{
empid
}
setempid

empid
{
this
empid
=
empid
}
}
define
the
technology_7
connector_12
we
will
need
to
marshal
the
requirement_6
connector_data_5
to
technology_28
for
this
we
will
make
use
of
technology_6
technology_7
jacksondataformat
create
the
technology_7
connector_12
to
marshal
the
requirement_6
connector_data_5
and
then
connector_10
it
to
the
technology_4
component_14
name
javainuse
also
a
technology_4
exchange
name
javainuse
be
create
package
technology_34
javainuse
connector_12

technology_6
technology_7
builder
routebuilder

technology_6
technology_7
component_11
technology_35
jacksondataformat

springframework
stereotype
component_11
technology_34
javainuse
component_13
requirement_6
@component
rabbitmqroute
extend
routebuilder
{
@override
configure
throw
exception
{
jacksondataformat
jsondataformat
=
jacksondataformat
requirement_6

from
direct
startqueuepoint

idofqueuehere
marshal
jsondataformat
to
technology_4
localhost

javainuse
exchange
queue=javainuse
queue&autodelete=false
end
}
}
create
the
pattern_8
connector_13
connector_14
pattern_5
component_9
to
take
requirement_6
parameter
use
the
technology_7
producertemplate
to
connector_10
requirement_6
connector_data_5
to
technology_4
component_14
package
technology_34
javainuse
pattern_8

technology_6
technology_7
produce

technology_6
technology_7
producertemplate

springframework
web
bind
annotation
requestmapping

springframework
web
bind
annotation
requestmethod

springframework
web
bind
annotation
requestparam

springframework
web
bind
annotation
restcontroller
technology_34
javainuse
component_13
requirement_6
@restcontroller
springrabbitmqcontroller
{
@produce
uri
=
direct
startrabbitmqpoint
private
producertemplate
template
@requestmapping
requirement_7
=
requirement_6
=
requestmethod
connector_14
createemployee
@requestparam

@requestparam
name
@requestparam
designation
{
requirement_6
emp
=
requirement_6
emp
setname
name
emp
setdesignation
designation
emp
setempid

template
asyncsendbody
template
getdefaultendpoint
emp
}
}
finally
create
the
bootstrap
use
the
springbootapplication
annotation
package
technology_34
javainuse

springframework
boot
springapplication

springframework
boot
autoconfigure
springbootapplication
@springbootapplication
springbootrabbitmqapplication
{


args
{
springapplication
run
springbootrabbitmqapplication

args
}
}
in
a
previous
we
have
show
how
to
install
technology_4
and
connector_14
start
start
the
technology_2
component_10
use
the
follow
url
create
an
requirement_6
connector_data_5
technology_32
localhost

requirement_6
id=6&name=emp1&designation=manager
go
to
technology_4
console
we
can
see
that
an
exchange
name
javainuse
and
a
component_14
name
javainuse
be
create
and
there
be
an
requirement_6
connector_data_3
in
it
download
component_15
download
it
technology_2
+
technology_6
technology_7
+
technology_4
see
also
technology_2
hello
world
component_10
create
quality_attribute_2
pattern_8
and
technology_36
pattern_9
use
technology_31
technology_2

technology_2
connector_data_1
technology_37
technology_2
+
quality_attribute_2
quality_attribute_1
configuration
pagination
use
technology_2
quality_attribute_2
example
technology_2
+
technology_21
hello
world
example
technology_2
+
technology_5
example
hello
world
example
technology_2
+
technology_5
understand
the
various
technology_5
annotation
technology_2
technology_2
question
popular

technology_2
question
connector_2
technology_2
quality_attribute_1
and
understand
technology_2
quality_attribute_1
architecture
e
commerce
online
book
component_16
use
angular

+
technology_2
technology_2
+json
web
connector_data_6
jwt
hello
world
example
angular

+
technology_2
component_10
hello
world
example
build
a
real
time
chat
component_10
use
technology_2
+
technology_38
+
technology_4
pivotal
requirement_1
foundry
quality_attribute_5
technology_2
component_10
hello
world
example
quality_attribute_5
technology_2
base
war
component_10
to
technology_15
eip
pattern_4
use
technology_6
technology_7
technology_2
requirement_1
netflix
eureka
+
ribbon
quality_attribute_2
example
technology_2
requirement_1
netflix
hystrix
circuit
breaker
quality_attribute_2
example
technology_2
+
technology_5
example
hello
world
example
technology_2
pattern_1
quality_attribute_2
example
technology_2
+
technology_6
technology_11
example
technology_2
admin
quality_attribute_2
example
technology_2
quality_attribute_1
introduction
to
oauth
technology_2
oauth2
part

connector_15
the
pattern_10
technology_2
oauth2
part

connector_15
the
connector_16
connector_data_6
and
use
it
to
fetch
connector_data_1
technology_10
technology_12
hello
world
stateful
knowledge
component_3
use
kiesession
understand
technology_12
stateful
vs
stateless
knowledge
component_3
technology_10
drool
understand
technology_12
decision
component_4
use
quality_attribute_2
example
see
also
technology_2
pattern_1
question
technology_2
aop
question
angular

question
technology_6
technology_7
question
technology_10
fuse
question
technology_12
question
technology_1

question
technology_2
requirement_1
question
pattern_11
question
technology_1
hashmap
and
concurrenthashmap
question
frequently
ask
question
technology_39
fi
account
receivable
frequently
ask
question
top
technology_39
alv
question
top
technology_39
requirement_8
connector_data_7
administration
question
technology_40
frequently
ask
question
technology_41
esb
frequently
ask
question
technology_6
technology_11
question
tosca
test
technology_17
question
top
technology_31
build
technology_17
question
top
gradle
build
technology_17
question
miscellaneous
topic
©
copyright
javainuse
all
right
reserve
privacy
requirement_4
