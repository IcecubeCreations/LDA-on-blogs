spoil
for
choice
which
requirement_1
technology_1
to
use
–
technology_2
requirement_1
technology_3
esb
or
technology_4
technology_5
kai
waehner
home
highlight
activity
talk
at
international
conference
video
component_1
publication
requirement_2
requirement_2
technology_4
technology_6
requirement_3
requirement_4
intelligence
deep

technology_7
in
memory
jupyter
requirement_5
technology_8
open_source
technology_9
connector_1
technology_10
social
requirement_6
technology_11
requirement_7
requirement_7
technology_4
mesos
requirement_7
requirement_8
technology_12
technology_13
open_source
persistence
component_2
mesh
internet
of
thing
internet
of
thing
requirement_3
iiot
technology_14
open_source
plc4x
requirement_1
requirement_1
component_3
requirement_9
component_4
component_5
blockchain
bpm
eai
esb
it
certification
it
conference
technology_15
jee
pattern_1
pattern_2
technology_16
open_source
technology_4
technology_9
technology_9
connector_2
persistence
component_2
mesh
pattern_3
social
requirement_6
web
technology_1
connector_3
component_6
connector_3
component_6
technology_4
technology_9
requirement_3
confluent
technology_9
connector_2
technology_9
connector_1
ksql
persistence
about
me
stay
in
technology_17
evangelist
–
requirement_3
requirement_2
–
technology_16
–
technology_4
technology_9
technology_17
evangelist
–
requirement_3
requirement_2
–
technology_16
–
technology_4
technology_9
home
highlight
activity
talk
at
international
conference
video
component_1
publication
requirement_2
requirement_7
internet
of
thing
requirement_1
connector_3
component_6
technology_4
sparkbig
databusiness
intelligencedeep
learninghadoopin
memoryjupyterkafka
streamsmachine
learningnosqlopen
sourcepythonsocial
networktensorflow
technology_4
mesoscloud
nativedockerkubernetesopen
sourcepersistenceservice
mesh
big
dataiiotmqttopen
sourceplc4x
technology_4
kafkaapi
managementapplication
serverblockchainbpmeaiesbit
certificationsit
conferencesjava
jeekafka
connectmessagingmicroservicesmiddlewareopen
sourcepersistenceservice
meshsoasocial
networkweb
technology_1
technology_4
kafkabig
dataconfluentkafka
connectkafka
streamsksqlpersistence
about
me
stay
in
search
for
search
eai
esb
technology_15
jee
spoil
for
choice
which
requirement_1
technology_1
to
use
–
technology_2
requirement_1
technology_3
esb
or
technology_4
technology_5

minute
connector_4
three
lightweight
requirement_1
technology_1
be
quality_attribute_1
in
the
technology_18
environment
technology_2
requirement_1
technology_3
esb
and
technology_4
technology_5
they
connector_5
the
well

enteprise
requirement_1
pattern_4
eip
technology_19
www
eaipatterns
technology_20
and
therefore
offer
a
standardize
domain
specific
technology_21
to
quality_attribute_2
component_4
these
requirement_1
technology_1
can
be
use
in
almost
every
requirement_1
project
within
the
technology_18
environment
–
no
matter
which
technology_17
transport
technology_22
or
connector_data_1
technology_23
be
use
all
requirement_1
project
can
be
realize
in
a
consistent
way
without
redundant
boilerplate

this
compare
all
three
alternative
and
discus
their
pro
and
con
bykai
waehner10

total

connector_6



connector_7

people
connector_8
the
story




connector_data_1
exchange
between
requirement_10
increase
a
lot
the
number
of
component_7
which
must
be
quality_attribute_2
increase
too
the
use
different
technology_17
technology_22
and
connector_data_1
technology_23
nevertheless
the
requirement_1
of
these
component_7
shall
be
component_8
in
a
standardize
way
realize
efficiently
and
support
by
automatic
test
three
requirement_1
technology_1
be
quality_attribute_1
in
the
technology_18
environment
which
fulfil
these
requirement
technology_2
requirement_1
technology_3
esb
and
technology_4
technology_5
they
connector_5
the
well

enteprise
requirement_1
pattern_4
eip
technology_19
www
eaipatterns
technology_20
and
therefore
offer
a
standardize
domain
specific
technology_21
to
quality_attribute_2
component_4
these
requirement_1
technology_1
can
be
use
in
almost
every
requirement_1
project
within
the
technology_18
environment
–
no
matter
which
technology_17
transport
technology_22
or
connector_data_1
technology_23
be
use
all
requirement_1
project
can
be
realize
in
a
consistent
way
without
redundant
boilerplate

this
compare
all
three
alternative
and
discus
their
pro
and
con
if
you
want
to

when
to
use
a
more
powerful
requirement_11
component_2
bus
esb
instead
of
one
of
these
lightweight
requirement_1
technology_1
then
you
should
connector_4
this

technology_19
www
kai
waehner
de




when
to
use
technology_4
technology_5
it
explain
when
to
use
technology_4
technology_5
but
the
title
could
also
be
„when
to
use
a
lightweight
requirement_1
framework“
comparison
criterion
several
criterion
can
be
use
to
compare
these
three
requirement_1
technology_1
open_source
basic
concept
architecture
quality_attribute_3
deployment
popularity
commercial
support
ide
support
errorhandling
pattern_5
requirement_11
readiness
domain
specific
technology_21
dsl
number
of
component_9
for

technology_17
and
technology_22
expandability
similarity
all
three
technology_1
have
many
similarity
therefore
many
of
the
above
comparison
criterion
be
even
all
connector_5
the
eips
and
offer
a
consistent
component_8
and
pattern_1
architecture
to
quality_attribute_2
several
technology_17
no
matter
which
technology_17
you
have
to
use
you
always
do
it
the
same
way
i
e
same
syntax
same
technology_24
same
automatic
test
the
only
difference
be
the
the
configuration
of
each
e
g
technology_25
need
a
component_10
name
while
technology_26
need
a
component_11
connector_9
url
imo
this
be
the
most
significant
feature
each
technology_1
us
different
name
but
the
idea
be
the
same
for
instance
„camel
routes“
be
equivalent
to
„mule
flows“
„camel
components“
be
connector_10
„adapters“
in
technology_2
requirement_1
besides
several
other
similarity
exist
which
differ
from
heavyweight
esbs
you
have
to
some
technology_27
to
your
classpath
therefore
you
can
use
each
technology_1
everywhere
in
the
technology_18
environment
no
matter
if
your
project
be
a
technology_15
se
standalone
component_4
or
if
you
want
to
quality_attribute_4
it
to
a
web
container
e
g
technology_28
jee
component_4
component_5
e
g
technology_29
technology_30
container
or
even
to
the
requirement_7
the
technology_27
do
some
quality_attribute_5
configuration
and
you
be
do
then
you
can
start
connector_11
your
requirement_1
stuff
connector_12
transformation
and
so
on
all
three
technology_1
be
open_source
and
offer
familiar
feature
such
a
component_12

forum
mailing
connector_data_2
issue
track
and
pattern_6
for
feature
quality_attribute_6

connector_13
documentation

and

imo
technology_4
technology_5
have
the
most
noticeable

only
the
number
of
release
book
could
be
quality_attribute_6
for
all
three
commercial
support
be
quality_attribute_1
via
different
vendor
technology_2
requirement_1
springsource
technology_19
www
springsource
technology_20
technology_3
esb
mulesoft
technology_19
www
mulesoft

technology_4
technology_5
fusesource
technology_19
fusesource
technology_20
and
talend
technology_19
www
talend
technology_20
ide
support
be
very
quality_attribute_6
even
visual
designer
be
quality_attribute_1
for
all
three
alternative
to
component_8
requirement_1
problem
and
them
generate
the

each
of
the
technology_1
be
requirement_11
ready
because
all
offer
require
feature
such
a
error
handle
automatic
test
transaction
multithreading
quality_attribute_7
and
pattern_7
difference
if
you
one
of
these
technology_1
you
can
the
others
very
easily
due
to
their
same
concept
and
many
other
similarity
next
let’s
discus
their
difference
to
be
able
to
decide
when
to
use
which
one
the
two
most
important
difference
be
the
number
of
support
technology_17
and
the
use
dsl
s
thus
i
will
concentrate
especially
on
these
two
criterion
in
the
follow
i
will
use
snippet
connector_11
the
well

eip
„content
base
router“
in
all
example
judge
for
yourself
which
one
you
prefer
technology_2
requirement_1
technology_2
requirement_1
be
base
on
the
well

technology_2
project
and
extend
the
programming
component_8
with
requirement_1
support
you
can
use
technology_2
feature
such
a
connector_14
injection
transaction
or
quality_attribute_8
a
you
do
in
other
technology_2
project
technology_2
requirement_1
be
awesome
if
you
already
have
connector_15
a
technology_2
project
and
need
to
some
requirement_1
stuff
it
be
almost
no
effort
to
technology_2
requirement_1
if
you
technology_2
itself
nevertheless
technology_2
requirement_1
only
offer
very
rudimenary
support
for
technology_17
–
„basic
stuff“
such
a

technology_31
technology_32
technology_33
technology_19
or
web
component_2
technology_3
and
technology_4
technology_5
offer
many
many
further
component_13
requirement_1
be
connector_5
by
connector_16
a
lot
of
connector_data_3
without
a
real
dsl
a
you
can
see
in
the
follow
snippet

inbound
pattern_8
adapter
id=”incomingorders”
directory=”file
incomingorders”
connector_data_4
type
pattern_9
input
channel=”incomingorders”
connector_data_5
type=”com
kw
dvdorder”
channel=”dvdorders”
connector_data_5
type=”com
kw
videogameorder”
channel=”videogameorders”
connector_data_5
type=”com
kw
otherorder”
channel=”otherorders”
connector_data_4
type
pattern_9

outbound
pattern_8
adapter
id=”dvdorders”
directory=”dvdorders”
technology_32
outbound
pattern_8
adapter
id=”videogamesorders”
destination=”videogameordersqueue”
channel=”videogamesorders”
requirement_12
pattern_8
adapter
id=”otherorders”
level=”info”
you
can
also
use
technology_15
and
annotation
for
some
stuff
but
in
the
end
you
need
a
lot
of
technology_34
honestly
i
do
not
too
much
connector_data_3
declaration
it
be
fine
for
configuration
such
a
technology_25
connector_9
factory
but
not
for
complex
requirement_1
component_14
at
least
it
should
be
a
dsl
with
quality_attribute_6
readability
but
more
complex
technology_2
requirement_1
example
be
really
tough
to
connector_4
besides
the
visual
designer
for
eclipse
connector_data_6
requirement_1
graph
be
ok
but
not
a
quality_attribute_6
and
intuitive
a
it
competitor
therefore
i
would
only
use
technology_2
requirement_1
if
i
already
have
connector_15
an
exist
technology_2
project
and
must
some
requirement_1
component_14
require
only
„basic
technologies“
such
a

technology_31
technology_25
or
technology_26
technology_3
esb
technology_3
esb
be
–
a
the
name
suggest
–
a
full
esb
include
several
additional
feature
instead
of
an
requirement_1
technology_1
you
can
compare
it
to
technology_4
servicemix
which
be
an
esb
base
on
technology_4
technology_5
nevertheless
technology_3
can
be
use
a
lightweight
requirement_1
technology_1
too
–
by
not

and
use
any
additional
feature
besides
the
eip
requirement_1
stuff
a
technology_2
requirement_1
technology_3
only
offer
a
connector_data_3
dsl
at
least
it
be
much
easy
to
connector_4
than
technology_2
requirement_1
in
my
opinion
technology_3
studio
offer
a
very
quality_attribute_6
and
intuitive
visual
designer
compare
the
follow
snippet
to
the
technology_2
requirement_1
from
above
it
be
more
a
dsl
than
technology_2
requirement_1
this
matter
if
the
requirement_1
component_14
be
more
complex
flow
name=”muleflow”

inbound

path=”incomingorders”
choice
when
expression=”payload
instanceof
technology_20
kw
dvdorder”
evaluator=”groovy”

outbound

path=”incoming
dvdorders”
when
when
expression=”payload
instanceof
technology_20
kw
dvdorder”
evaluator=”groovy”
technology_32
outbound

queue=”videogameordersqueue”
when
otherwise
logger
level=”info”
otherwise
choice
flow
the
major
advantage
of
technology_3
be
some
very
interest
connector
to
important
proprietary
such
a
technology_35
technology_36
rendevous
technology_37
siebel
crm
paypal
or
ibm’s
cics
transaction
gateway
if
your
requirement_1
project
require
some
of
these
connector
then
i
would
probably
choose
technology_3
a
disadvantage
for
some
project
might
be
that
technology_3
say
no
to
technology_38
technology_19

mulesoft

technology_38
no
thanks
technology_4
technology_5
technology_4
technology_5
be
almost
identical
to
technology_3
it
offer
many
many
component_9
even
more
than
technology_3
for
almost
every
technology_17
you
could
think
of
if
there
be
no
component_13
quality_attribute_1
you
can
create
your
own
component_13
very
easily
start
with
a
technology_39
archetype
if
you
be
a
technology_2
guy
technology_5
have
awesome
technology_2
requirement_1
too
a
the
other
two
it
offer
a
connector_data_3
dsl
connector_17
from
uri=”file
incomingorders”
choice
when
quality_attribute_5
${in

type}
be
‘com
kw
dvdorder
quality_attribute_5
to
uri=”file
incoming
dvdorders”
when
when
quality_attribute_5
${in

type}
be
‘com
kw
videogameorder’
quality_attribute_5
to
uri=”jms
videogameordersqueue”
when
otherwise
to
uri=”log
otherorders”
otherwise
choice
connector_17
readability
be
quality_attribute_6
than
technology_2
requirement_1
and
almost
identical
to
technology_3
besides
a
very
quality_attribute_6
but
commercial
visual
designer
connector_10
fuse
ide
be
quality_attribute_1
by
fusesource
–
generate
connector_data_3
dsl

nevertheless
it
be
a
lot
of
technology_34
no
matter
if
you
use
a
visual
designer
or
your
technology_34
editor
personally
i
do
not
this
therefore
let’s
show
you
another
awesome
feature
technology_4
technology_5
also
offer
dsl
for
technology_15
technology_40
and
technology_41
you
do
not
have
to
connector_13
so
much
ugly
technology_34
personally
i
prefer
use
one
of
these
fluent
dsl
instead
connector_data_3
for
requirement_1
component_14
i
only
do
configuration
stuff
such
a
technology_25
connector_9
factory
or
technology_26
property
use
technology_34
here
you
can
see
the
same
example
use
a
technology_15
dsl
snippet
from
“file
incomingorders
“
choice
when
body
isinstanceof
technology_20
kw
dvdorder

to
“file
incoming
dvdorders”
when
body
isinstanceof
technology_20
kw
videogameorder

to
“jms
videogameordersqueue
“
otherwise
to
“mock
otherorders
“
the
fluent
programming
dsl
be
very
easy
to
connector_4
even
in
more
complex
example
besides
these
programming
dsl
have
quality_attribute_6
ide
support
than
connector_data_3

completion
refactoring
etc
due
to
these
awesome
fluent
dsl
i
would
always
use
technology_4
technology_5
if
i
do
not
need
some
of
mule’s
excellent
connector
to
proprietary
technology_42
due
to
it
very
quality_attribute_6
requirement_1
to
technology_2
i
would
even
prefer
technology_4
technology_5
to
technology_2
requirement_1
in
most
use
requirement_13
by
the
way
talend
offer
a
visual
designer
generate
technology_15
dsl

but
it
generate
a
lot
of
boilerplate
and
do
not
allow
vice
versa
edit
i
e
you
cannot
edit
the
generate

this
be
a
no
go
criterion
and
have
to
be
fix
soon
hopefully
and
the
winner
is…
…
all
three
requirement_1
technology_1
because
they
be
all
lightweight
and
easy
to
use
–
even
for
complex
requirement_1
project
it
be
awesome
to
quality_attribute_2
several
different
technology_17
by
always
use
the
same
syntax
and
concept
–
include
very
quality_attribute_6
test
support
my
personal
favorite
be
technology_4
technology_5
due
to
it
awesome
technology_15
technology_40
and
technology_43
dsl
combine
with
many
support
technology_17
i
would
only
use
technology_3
if
i
need
some
of
it
unique
connector
to
proprietary
technology_42
i
would
only
use
technology_2
requirement_1
in
an
exist
technology_2
project
and
if
i
only
need
to
quality_attribute_2
„basic
technologies“
such
a
technology_31
or
technology_32
nevertheless
no
matter
which
of
these
lightweight
requirement_1
technology_1
you
choose
you
will
have
much
fun
realize
complex
requirement_1
project
easily
with
low
effort
remember
often
a
fat
esb
have
too
much
requirement_14
and
therefore
too
much
unnecessary
complexity
and
effort
use
the
right
technology_44
for
the
right

best
regard
kai
wähner
twitter
@kaiwaehner
total

connector_6
connector_7

tweet

pin
it

please
leave
this
emptydont‘
miss
my
next

subscribe
we
don’t
spam
connector_4
more
in
our
privacy
requirement_15
connector_18
your
inbox
or
spam
folder
to
confirm
your
subscription
relate
tagsapacheapache
cameleaienterprise
component_4
integrationesbgroovyjavajava
eejeemulemule
esbscalaservicemixspring
integrationsystem
requirement_1
kai
waehner
build
requirement_7
requirement_8
connector_19
infrastructure
for
real
time
connector_data_1
component_6
and
requirement_2


richard
kettelerij
say


at


nice
connector_13
up
kai
there
be
indeed
plenty
of
option
quality_attribute_1
nowadays
i
think
it
be
also
worth
note
that
it’s
possible
to
interconnect
some
or
all
of
the
above
technology_1
when
there’s
a
need
to
do
so
for
example
in
requirement_13
you’re
use
technology_5
and
you
need
a
technology_3
connector
it
worth
consider
to
use
the
muleclient
from
within
you
technology_5
connector_17
or
you
choose
to
put
e
g
technology_45
between
the
two
the
same
apply
to
technology_2
requirement_1
technology_5
even
ship
with
a
si
component_13
out
of
the
component_15
connector_data_7
admin
say


at


richard
i
agree
with
you
though
i
think
this
will
bring
additional
complexity
it
make
sense
if
you
have
to
quality_attribute_2
a
complex
connector
such
a
technology_46
or
technology_36
rendevous
if
you
need
a
“simple
connector”
from
another
technology_1
i
would
prefer
to
build
my
own
component_13
very
easy
with
a
technology_5
archetype
or
by
simply
use
pattern_10
if
quality_attribute_1
for
instance
instead
of
use
mule’s
paypal
connector
in
technology_5
i
would
use
the
paypal
pattern_10
component_3
directly
or
build
a
wrapper
technology_5
component_13
use
the
pattern_10
technology_24
connector_data_7
richard
kettelerij
say


at


kai
i
fully
agree
i
mean
to
make
clear
that
one
benefit
of
these
lightweight
technology_1
be
that
your
le
likely
to
be
lock
up
in
one
since
it’s
mostly
technology_15
and
technology_2
underneath
connector_data_7
gunnar
hillert
say


at


nice
connector_13
up
keep
in
mind
that
technology_2
requirement_1
support
incl
visualization
be
also
bake
into
intellij
idea
–
technology_19

jetbrains
technology_20
idea



in
intellij
idea

technology_2
requirement_1
support
–
technology_19

jetbrains
technology_20
idea


intellij
idea
for
technology_2
requirement_1

pattern_4
thus
you
have
some
choice
here
eclipse
sts
or
idea
connector_data_7
oleg
zhurakousky
say


at


disclaimer
i
be
technology_2
requirement_1
committer
now
to
the
point
although
i
do
the
overall
tone
of
the

i
do
believe
that
some
correction
be
in
order
for
example
you
say
“just
„basic
stuff“
such
a

technology_31
technology_32
technology_33
technology_19
or
web
services…”
first
i
would
not
connector_data_6
it
“just
„basic
stuff”
if
you
be
to
compare
the
adapter
you
have
connector_data_2
with
the
same
of
technology_5
or
technology_3
you’d
quickly
realize
that
they
be
a
feature
full
if
not
more
but
you
also
fail
to
connector_data_2
all
of
the
adapter
and
technology_22
we
currently
support
so
here
be
the
full
connector_data_2
technology_47
technology_2
component_4

feed
e
g
r
atom

technology_31
technology_31
technology_48
gemfire
technology_40
technology_19
rest
technology_33
ip
technology_26
technology_32
technology_49
mail
technology_50
idle
pop3
technology_51
technology_52
technology_53
twitter
web
component_16
technology_54
technology_55
also
it
would
be
nice
to
point
out
in
how
technology_1
such
a
technology_5
decide
to
connector_data_2
their
component_9
which
create
an
appearance
of
the
large
number
for
example
if
you
go
to
this
technology_19
technology_5
technology_4

component_13
technology_56
you
quickly
see
that
technology_5
advertise
gmail
technology_50
mail
pop
technology_57
etc
that
be

component_9
which
handle
exactly
what
si
mail
do
anyway
a
i
say
not
a
bad
overall
cheer
oleg
connector_data_7
claus
ibsen
say


at


disclaimer
i
be
an
technology_4
technology_5
committer
in
term
of
the
number
of
technology_5
component_13
then
there
be
a
lot
and
still
grow
oleg
mention
the
technology_5
component_13
overview
on
the
show
multiple
entry
for
mail
that
be
by
intention
a
this
overview
be
per
technology_17
so
if
people
be
look
for
a
technology_57
technology_50
etc
they
can
find
it
that
say
the
component_12
could
be
use
to
indicate
number
of
different
component_13
where
the
mail
component_13
will
be
only
count
a
one
for
example
in
the
late
technology_5


there
be

component_13
davsclaus
technology_5


components$
l
|
wc
l

so
why
be
there
so
many
component_9
with
technology_5
that
be
because
of
a
very
active
and
engage

which
develop
technology_5
component_13
that
we
connector_20
and
include
in
the
distribution
for
the
upcoming


release
we
have
already
a
technology_58
twitter
and
ssh
and
technology_51
be
in
the
work
connector_data_7
ross
mason
say


at


kai
quality_attribute_6
connector_13
up
thanks
for
connector_21
your
perspective
disclaimer
be
the
founder
of
technology_3
there
be
a
couple
of
thing
i
would
to
on
the
technology_3
side
of
thing
technology_3
connector_data_3
be
base
on
technology_2
and
behave
a
a
technology_2
container
this
mean
anything
you
can
do
in
technology_2
can
be
do
in
technology_3
use
the
‘spring’
namespace
we
love
the
power
of

but
the
connector_data_3
dsl
approach
be
a
nice
way
to
make
thing
readable
and
discoverable
technology_3
requirement_7
connector_2
now
have
over

connector
for
talk
with
saas
social

and
infrastructure
component_17
include
technology_59
paypal
technology_60
technology_61
freshbooks

twitter
linkedin
technology_62
mongohq
pubnub
etc
technology_19
www
mulesoft

muleforge
connector
you
already
mention
our
strong
support
for
requirement_11
connector_22
thanks
for
that
we
also
have
a
requirement_7
component_18
connector_10
ion
that
allow
you
to
create
requirement_7
requirement_1
component_19
and
run
them
with
one
click
from
technology_3
studio
ion
be
multi
tenant
elastic
and
be
super
easy
to
work
with
the
nice
thing
be
that
the
same
that
run
on
the
requirement_7
also
run
on
local
technology_3
instance
technology_19
muleion
technology_20
you
mention
pattern_5
a
an
evaluation
criterion
technology_3
have
requirement_11
grade
requirement_9
capability
for
manage
component_5
group
deployment
requirement_16
analysis
pattern_7
alerting
another
point
be
we
also
have
requirement_4
track
so
that
we
can
track
transaction
across
component_20
technology_19
www
mulesoft
technology_20
requirement_9
console
technology_3
esb
also
fwiw
there
be
two
technology_3
book
in
development
at
the
moment
we
should
see
them
both
publish
this
year
connector_data_7
ilias
tsagklis
say


at


hi
kai
nice

be
there
an
connector_23
i
can
you
in
private
connector_data_7
kai
wähner
say


at


thanks
ilias
look
at
technology_19
www
kai
waehner
de
connector_data_7
kai
wähner
say


at


technology_2
requirement_1
make
a
step
into
the
right
direction
a
technology_43
dsl
=
technology_19

springsource




introduce
technology_2
requirement_1
technology_41
dsl
connector_data_7
anton
arhipov
say


at


do
the
comparison
actually
make
sense
technology_3
be
an
esb
while
technology_5
and
si
be
lightweight
requirement_1
mediator
component_21
though
quite
powerful
it
make
sense
compare
technology_3
and
servicemix
for
instance
but
not
technology_3
vs
si
and
yeah
technology_5
ftw
connector_data_7
oleg
zhurakousky
say


at


you
be
in
a
way
opening
up
a
whole
can
of
pattern_11
with
this
one
😉
basically
you
be
correct
in
a
way
that
be
the
first
thing
to
answer
be
“to
esb
or
not
to
esb”
ross
mason
try
it
in

–
technology_19

mulesoft

to
esb
or
not
to
esb
there
be
even
a
connector_18
connector_data_2
there
i
personally
disagree
with
every
conclusion
there
but
don’t
forget
i
be
bias
after
all
so
you
decide
connector_data_7
kai
wähner
say


at


@anton
the
explain
why
i
think
that
it
be
worthy
to
include
technology_3
too
you
can
use
it
a
quality_attribute_5
lightweight
embed
developer
orient
requirement_1
technology_1
a
you
do
with
technology_5
or
technology_2
requirement_1
connector_data_7
murthy
say


at


i
ask
this
question
in
a
different
entry
but
i
think
this
entry
be
more
appropriate
to
ask
this
question
do
you
consider
muleesb
a
an
requirement_1
technology_1
or
an
esb
the
reason
i
ask
you
mention
that
a
typical
esb
should
offer
feature
bpm
bam
registry
pattern_12
rule
component_21
etc
which
in
my
understand
muleesb
do
not
provide
support
for
out
of
the
component_15
feel
free
to
correct
me
if
my
understand
be
not
correct
connector_data_7
ross
mason
say


at


hi
murthy
technology_3
do
offer
bpm
bam
and
rule
component_21
out
of
the
component_15
bpm
technology_3
include
jbpm
ootb
and
tight
requirement_1
with
activiti
technology_19
www
mulesoft

documentation
display
mule3user
bpm+module+reference
technology_19
www
mulesoft

activiti
bpm
rule
component_21
technology_19
www
mulesoft

documentation
display
mule3user
drools+module+reference
bam
technology_3
requirement_11
allow
you
to
track
requirement_4
level
across
all
your
technology_3
instance
capture
specific
kpis
component_22
a
historical
requirement_12
of
transaction
and
requirement_1
with
3rd
party
busines
intelligence
pattern_13
component_23
technology_63
technology_19
www
mulesoft

documentation
display
mmc
analyzing+business+events
connector_data_7
kai
wähner
say


at


@murphy
technology_3
esb
be
a
full
esb
however
remember
there
be
no
real
definition
of
an
esb
you
should
compare
it
to
technology_4
servicemix
or
technology_64
open_source
or
commercial
technology_42
from
technology_65
technology_37
etc
this
comparison
be
only
about
the
requirement_1
support
so
if
you
need
requirement_1
an
requirement_1
technology_1
i
e
technology_4
technology_5
technology_2
requirement_1
or
the
requirement_1
part
of
technology_3
esb
be
sufficient
connector_data_7
murthy
say


at


hi
ross
thanks
for
the
clarification
i
be
not
aware
about
this
support
will
definitely
try
them
out
connector_data_7
murthy
say


at


hi
kai…that
definitely
connector_23
my
confusion
around
why
technology_3
be
be
compare
against
other
requirement_1
technology_1
if
it
be
consider
a
a
full
blow
esb
thanks
for
your
connector_24
do
you
have
an
entry
that
compare
esbs
a
you
do
for
the
requirement_1
technology_1
connector_data_7
kai
wähner
say


at


@murphy
i
do
not
a
quality_attribute_6
and
uptodate
for
this
topic
it
be
really
tough
to
describe
the
difference
between
esb
technology_42
in
a
short
🙂
connector_data_7
murthy
say


at


@kai
not
a
problem
i
recently
stumble
across
your
and
you
really
have
some
exceptional
entry
on
requirement_1
i
be
an
requirement_1
architect
by
profession
specialize
in
technology_37
fusion
technology_16
and
be
passionate
about
open
component_12
alternative
thanks
for
all
your
connector_24
and
a
great
entry
connector_data_7
rajesh
gheware
say


at


kai
this
be
excellent
and
quality_attribute_5
to
understand
though
take
more
time
to
connector_4
through
appreciate
if
you
can
quality_attribute_2
quality_attribute_6
theme
than
the
current
one
rajesh
gheware
technology_19
rajeshg
info
connector_data_7
rajesh
gheware
say


at


kai
even
the

too
be
interest
i
be
look
for
alternate
option
to
technology_36
iprocess
from
open_source
world
appreciate
if
you
can
provide
any
pointer
to
a
quality_attribute_6
connector_13
up
on
that
rajesh
gheware
technology_19
rajeshg
info
connector_data_7
ranajitjana
say


at


quality_attribute_6

we
have
do
the
similar
comparision
in
our
requirement_10
how
about

technology_64
in
your
comparision
technology_64
give
lot
of
open_source
technology_42
include
governance
one
the
webservices
technology_66
be
base
on
technology_67
we
go
ahead
with
servicemix
a
it
be
have
quality_attribute_6
acceptence
userbase
active
and
technology_2
base
configuration
connector_data_7
kai
wähner
say


at


this
be
a
comparison
about
requirement_1
technology_1
i
e
quality_attribute_2
technology_27
in
your
project
and
“coding
by
hand”
technology_64
be
an
esb
respectively
an
requirement_1
suite
take
a
look
at
this
it
have
technology_64
include
technology_19
www
kai
waehner
de




spoil
for
choice
how
to
choose
the
right
requirement_11
component_2
bus
esb
connector_data_7
idan
say


at


hi
kai
really
nice

make
thing
clear
but
i
would
to
ask
you
about
additional
aspectד
in
your
בomparisons

quality_attribute_9

requirement_16
we
be
create
a
component_20
with
a
low
quality_attribute_9
demand
which
of
the
three
be
excellent
in
those
aspect
thanks
idan
connector_data_7
kai
wähner
say


at


idan
this
question
cannot
be
answer
in
general
for
example
if
you
use
technology_32
then
you
have
to
do
some
requirement_16
test
with
the
technology_25
connector
of
the
technology_1
in
project
i
have
see
requirement_16
quality_attribute_9
be
sufficient
always
however
you
should
probably
do
a
proof
of
concept
to
verify
this
connector_data_7
idan
say


at


hi
kai
accord
to
your
connector_24
yes
–
i
be
use
technology_32
and
ill
do
quality_attribute_9
test
for
sure
i
be
curious
in
your
experience
with
the
different
technology_1
concern
these
aspect
thanks
connector_data_7
ken
say


at


hi
it
would
have
be
interest
to
measure
the
technology_1
by
two
more
criterion

documentation

the
aggressiveness
of
the
requirement_10
to
connector_25
you
towards
“enterprise”
version
if
there
be
such
i
must
say
i
have
a
very
mix
experience
with
technology_3
to
be
polite
and
i
be
focus
on
technology_3
because
it
be
a
recent
experience
everything
seem
to
be
blur
in
the
version
the
documentation
be
sometimes
hilarious
they
seem
to
be
expert
in
make
thing
unclear
or
they
do
not
explain
the
semantics
only
explain
the
obvious
in
different
wording
you
connector_26
almost
daily

and
you
feel
hunt
and
don’t
connector_15
me
start
on
what
they
would
charge
for

day
of
train
the
technology_42
itself
be
make
to
appear
a
unreliable
in
the
version
the
most
interest
connector
and
behaviour
be
reserve
of

to
the
requirement_11
version
a
very
interest
point
the
whole
technology_3
thing
seem
to
be
make
artificially
complicate
a
to
require
special
train
and
explanation
it
seem
very
much
geared
towards
make
lot
of
money
you
don’t
wether
you
be
allow
to
use
mulestudio
in
production
they
always
use
the
word
“evaluation”
you
have
no
idea
what
a
subscription
would
cost
and
there
be
no
way
of
find
unless
you
go
through
the
antiquate
mechanism
of
“call
u
establish
a
meet
discuss…”
blah
blah
blah
in
the
21st
century
no
thank
you
so
for
me
it
be
a
question
of
choose
between
technology_2
and
technology_5
connector_data_7
kai
wähner
say


at


ken
well
the
problem
of
technology_3
be
that
it
be
a
open_source
technology_1
and
the
mulesoft
technology_42
“all
in
one”
technology_4
technology_5
and
technology_2
requirement_1
be
independent
of
technology_44
on
top
of
it
so
i
think
that
both
technology_2
requirement_1
and
technology_4
technology_5
do
not
have
these
problem
you
can
use
the
full
technology_1
without
any
specific
technology_44
from
a
vendor
i
can
talk
especially
about
technology_5
and
talend
technology_44
be
aware
that
i
work
for
talend
there
be
one
documentation
www
help
talend
technology_20
all
connector
be
also
include
within
the
open_source
version
even
b2b
connector
such
a
technology_46
or
technology_59
base
be
the
same
for
open_source
and
requirement_11
version
open_source
version
be
even
release
before
requirement_11
version
imo
technology_4
technology_5
be
the
right
choice
in
most
use
requirement_13
technology_44
from
talend
or
technology_68
former
fusesource
on
top
of
it
reduce
effort
a
lot
connector_data_7
karl
say


at


great

kai
it
give
me
a
comprehensive
image
that
how
quality_attribute_6
an
requirement_1
technology_1
should
be
and
what
feature
it
should
include
so
far
a
i

i
think
technology_4
technology_5
be
the
best
choice
for
my
project
of

i
would
do
the
poc
late
thanks
for
your
connector_7
karl
connector_data_7
usha
say


at


nice

i
be
wonder
if
there
be
any
requirement_16
comparison
between
technology_5
and
si
can
this
become
a
major
factor
when
we
want
to
choose
one
of
these
technology_1
i
personally
felt
that
technology_5
documentation
be
not
great
connector_data_7
kai
wähner
say


at


usha
in
most
use
requirement_13
requirement_16
be
not
an
issue
regard
this
comparison
it
quality_attribute_10
on
the
underlie
technology_17
you
use
e
g
technology_19
technology_31
or
technology_32
both
technology_1
do
not
have
much
overhead
imo
technology_5
documentation
be
very
quality_attribute_6
it
contain
detail
description
and
example
for
all
connector
and
eips
though
it
might
be
a
little
bit
pattern_14
in
some
requirement_13
i
usually
use
to
find
answer
this
way
i
always
find
the
best
connector_27
to
technology_5
documentation
kai
connector_data_7
holger
lober
say


at


hi
kai
nice

there´s
a
technology_1
name
smooks
–
connector_data_1
requirement_1
for
me
it
look
the
same
a
technology_4
technology_5
what´s
the
difference
between
this
two
technology_1
i
that
smooks
can
be
use
together
with
technology_5
when
smooks
act
a
an
component_13
holger
connector_data_7
michael
atkins
say


at


where
be
the
best
place
to
recruit
esb
technology_15
expert
that
can
work
on
dod
project
michael
atkins
ceo
incident
component_14
connector_data_7
kai
wähner
say


at


holger
smooks
be
“just”
for
do
complex
transformation
technology_34
and
non
technology_34
such
a
csv
or
edi
technology_5
be
much
more
it
be
about
connector_12
requirement_11
requirement_1
pattern_4
automatic
conversion

web
component_2
etc
use
smooks
when
you
want
to
do
some
transformation
use
technology_5
for
all
other
stuff
both
be
complementary
by
the
way
kai
connector_data_7
amalan
say


at


kai
it
an
interest
that
help
me
to
understand
all
three
technology_17
with
ease
comparison
a
my
need
be
to
extract
connector_data_1
from
multiple
component_24
say
technology_59
technology_35
technology_69
etc
and
put
into
technology_7
component_20
for
analysis
in
this
requirement_13
should
i
still
go
with
technology_4
technology_5
please
advise
thanks
connector_data_7
kai
wähner
say


at


amalan
yes
technology_5
be
perfect
for
this
use
requirement_13
however
with
technology_5
you
still
have
to
do
a
lot
of
manual
cod
by
yourself
connector_data_1
requirement_1
technology_44
help
a
lot
here
for
example
talend
open
studio
for
requirement_3
be
an
open_source
technology_44
under
technology_4
license
which
will
reduce
your
effort
a
lot
see
technology_19
en
talend
technology_20
technology_42
big
connector_data_1
by
the
way
talend
esb
also
us
technology_5
under
the
hood
🙂
but
for
your
use
requirement_13
talend
open
studio
for
requirement_3
be
easy
to
use
than
talend
open
studio
for
esb
best
regard
kai
connector_data_7
amalan
say


at


thanks
kai
i
have
to
connector_28
this
use
requirement_13
a
an
offer
project
so
that
they
can
extend
this
late
i
start
with
tos_bd
and
technology_3
esb
but
late
i
feel
this
create
an
utility
kind
of
project
and
not
be
consider
to
be
an
quality_attribute_11
project
please
correct
me
if
be
not
correct
thanks
connector_data_7
kai
wähner
say


at


amalan
i
can
speak
especially
about
talend
the
requirement_10
i
work
for
not
so
much
about
technology_3
esb
but
i
think
it
be
the
same
…
it
really
quality_attribute_10
on
what
you
mean
with
“extensible”
you
can
extend
talend
almost
everywhere
you
can
build
your
own
custom
connector
you
can
technology_15
and
other
in
expression
you
can
own
technology_15
and
jar
technology_27
that’s
all
very
easy
and
support
implicitly
within
talend’s
studio
nevertheless
you
still
have
very
cool
graphical
technology_44
which
reduce
effort
a
lot
for
development
and
quality_attribute_12
if
you
do
not
want
to
use
graphical
technology_44
but
cod
within
an
ide
then
technology_4
technology_5
be
the
way
to
go
kai
connector_data_7
cho
say


at


hi
kai
thanks
for
this

please
can
you
present
an
example
how
to
connector_2
to
technology_70
with
technology_2
requirement_1
eip
which
connector
to
use
and
the
property
to
in
the
config
thanks
in
advance
connector_data_7
kai
wähner
say


at


sorry
i
do
not

probably
use
pattern_10
or
technology_71
connector
of
technology_2
requirement_1
kai
connector_data_7
cho
say


at


thanks
for
your
connector_24
sir
connector_data_7
sharathbabu
say


at


very
informative
and
also
very
intellegent

quick
question
do
these
technology_1
offer
pattern_15
support
for
example
in
webpshere
connector_data_8
pattern_16
if
i
run
into
an
exception
in
a
connector_data_8
flow
the
pattern_16
support
roll
back
of
the
connector_data_8
to
the
input
component_10
and
on
the
input
component_10
i
can
set
backout
count
and
backout
component_10
to
control
retry
and
backout
be
something
this
quality_attribute_1
in
the
technology_1
discuss
here
thanks
sharathbabu
connector_data_7
kai
wähner
say


at


yes
transaction
and
requirement_11
requirement_1
pattern_4
such
a
redelivery
be
support
by
these
technology_1
connector_data_7
leave
a
connector_data_7
cancel
replyyour
connector_23
will
not
be
publish
require
be
mark
*comment
*
name
*
*
connector_29
my
name

and
in
this
browser
for
the
next
time
i

pattern_17


you
also
technology_4
technology_9
+
technology_14
=
end
to
end
iot
requirement_1

slide
video
technology_4
technology_9
requirement_3
confluent
eai
internet
of
thing
technology_9
connector_2
pattern_1
pattern_2
technology_14
open_source
connector_3
component_6
bykai
waehner10

technology_14
and
technology_4
technology_9
be
a
perfect
combination
for
end
to
end
iot
requirement_1
from
edge
to
connector_data_1
center
this
discus
two
different
approach
and
refer
to
implementation
on
technology_72
use
technology_4
technology_9
technology_9
connector_2
confluent
technology_14
pattern_18
and
mosquitto
connector_4
more



when
to
use
technology_4
technology_5
component_4
component_5
eai
esb
technology_15
jee
pattern_3
bykai
waehner2

technology_4
technology_5
be
one
of
my
favorite
open_source
technology_1
in
the
technology_18
technology_15
environment
it
enable
easy
requirement_1
of
different
component_7
which
use
several
technology_22
and
technology_17
this
show
when
to
use
technology_4
technology_5
and
when
to
use
other
alternative
connector_4
more



technology_17
evangelist
kai
waehner
build
requirement_7
requirement_8
connector_19
infrastructure
for
real
time
connector_data_1
component_6
and
requirement_2
subscribe
to
my
newsletter
please
leave
this
empty
stay
inform
about

we
don’t
spam
connector_4
our
privacy
requirement_15
for
more
info
connector_18
your
inbox
or
spam
folder
to
confirm
your
subscription
end
to
end
requirement_1
feature


technology_4
technology_9
ksql
and
technology_4
plc4x
for
iiot
connector_data_1
requirement_1
and
component_6

technology_4
technology_9
vs
technology_16
mq
technology_73
esb
–
slide
+
video

deep

example
technology_4
technology_9
+
technology_10
+
kera
+
technology_11
+
technology_74
categoriescategories
select
category
5g
technology_75
gap
airline
airport
allgemein
msk
requirement_2
technology_4
technology_5
technology_4
technology_9
technology_4
mesos
technology_4
technology_76
technology_4
technology_6
component_3
component_3
gateway
component_3
requirement_9
component_4
component_5
architecture
ariba
asset
track
audio
augment
reality
automation
requirement_17
automotive
aviation
technology_77
technology_77
outpost
technology_77
wavelength
technology_78
bank
technology_79
bet
requirement_3
biotech
biotechnology
bitcoin
blockchain
bookmaker
bpm
bs
requirement_4
intelligence
requirement_18
citizen
requirement_7
requirement_7
requirement_8
technology_80
comparison
concur
condition
pattern_5
confluent
confluent
requirement_7
connector_30
car
connector_30
vehicle
conversational
requirement_19
core
bank
crm
crypto
cryptocurrency
cybersecurity
connector_data_1
at
rest
connector_data_1
historian
connector_data_1
hub
connector_data_1
in
motion
connector_data_1
requirement_1
connector_data_1
lake
connector_data_1
mesh
connector_data_1
science
connector_data_1
connector_19
connector_data_1
requirement_20
component_11
databricks
deep

defi
digital
forensics
digital
twin
disaster
recovery
quality_attribute_13
ledger
technology_12
domain
drive
design
eai
edge
edge
computing
eipaas
elasticsearch
elt
energy
requirement_11
architecture
erp
esb
ethereum
technology_73
connector_19
exactly
once
semantics
feature

finance
requirement_17
food
forensics
fraud
fraud
detection
gamble
game
gaming
gcp
technology_81
government
technology_7
healthcare
hivecell
technology_19
hybrid
requirement_7
hyperledger
mq
idoc
iiot
in
memory
industrial
iot
requirement_17


insurance
insurance
requirement_17
requirement_1
internet
of
thing
intrusion
detection
inventory
requirement_9
iota
ipaas
it
certification
it
conference
technology_15
jee
technology_25
jupyter
technology_9
connector_2
technology_9
connector_1
kappa
architecture
ksql
technology_82
technology_13
lake
house
lambda
architecture
large
connector_data_9
component_25
libra
life
science
live
commerce
logistics
requirement_5
component_26
vision
component_27
manufacture
connector_data_8
component_10
pattern_1
pattern_2
technology_16
military
mining
quality_attribute_14
component_16
technology_14
national
quality_attribute_8
nft
nlp
technology_8
oil
and
gas
omnichannel
opc
ua
open
component_3
open
bank
open_source
technology_37
osisoft
technology_83
os
ott
over
the
top
payment
persistence
pharma
plc4x
predictive
quality_attribute_12
sector
technology_10
qcon
qualitrics
technology_84
ransomware
recommendation
redpanda
pattern_10
retail
reverse
technology_73
ripple
rtls
sale
technology_46
technology_46
technology_85
scm
quality_attribute_8
serverless
component_2
mesh
siem
situational
awareness
smart
build
smart
city
smart
grid
pattern_3
technology_71
soar
social
requirement_6
sparkplug
splunk
connector_3
component_6
connector_19
requirement_2
supply
chain
telco
telecom
telecommunication
requirement_17
technology_11
threat
detection
threat
intelligence
tiered
storage
transaction
transportation
trend
uncategorized
use
requirement_13
v2x
video
video
connector_19
virtual
reality
web
technology_1
web
component_2
web3
technology_86
connector_data_3
zero
trust
tag
–
cloudanalytics
technology_4
technology_4
technology_5
technology_4
technology_9
technology_77
requirement_3
businessworks
requirement_7
requirement_7
requirement_8
confluent
deep

technology_12
eai
edge
requirement_11
component_4
requirement_1
requirement_11
component_2
bus
esb
connector_19
technology_7
hybrid
iiot
requirement_1
iot
j2ee
technology_15
jee
technology_9
technology_9
connector_2
technology_9
connector_1
ksql
technology_13
requirement_5
pattern_2
technology_16
technology_14
open_source
technology_37
real
time
pattern_3
streambase
connector_19
requirement_2
connector_3
component_6
talend
technology_87
connector_4
more

views4
minute
connector_4
technology_4
technology_9
biotechnology
healthcare
omnichannel
open
component_3
pharma
open
component_3
and
omnichannel
with
technology_4
technology_9
in
healthcare
bykai
waehner18

connector_4
more

views19
minute
connector_4
msk
technology_4
technology_9
technology_4
technology_76
technology_80
comparison
confluent
requirement_7
mq
technology_25
technology_84
redpanda
comparison
technology_25
connector_data_8
component_10
vs
technology_4
technology_9
bykai
waehner12

connector_4
more

views5
minute
connector_4
technology_4
technology_9
bitcoin
blockchain
cryptocurrency
cybersecurity
connector_data_1
connector_19
ethereum
fraud
detection
technology_4
technology_9
in
crypto
and
finserv
for
cybersecurity
and
fraud
detection
bykai
waehner29

connector_4
more

views4
minute
connector_4
technology_4
technology_9
biotech
confluent
requirement_7
connector_data_1
science
connector_data_1
connector_19
healthcare
insurance
technology_9
connector_1
life
science
requirement_5
requirement_5
and
connector_data_1
science
with
technology_9
in
healthcare
bykai
waehner18


©
kai
waehner
|
imprint
|
connector_data_1
privacy
