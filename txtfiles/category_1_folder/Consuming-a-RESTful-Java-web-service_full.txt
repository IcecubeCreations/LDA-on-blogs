connector_1
a
pattern_1
technology_1
web
component_1
connector_2
start
guide
doc
support
content
what
youâll
connector_3
start
try
what
youâll
build
start
the
component_1
create
pojos
introduce
technology_2
b
and
technology_2
p
use
technology_2
b
connector_1
the
pattern_2
resource
component_2
technology_3
use
technology_2
b
component_2
technology_3
use
technology_2
p
create
additional
pattern_2
resource
run
the
component_3
test
deserialization
test
the
bind
component_2
component_2
with
technology_2
b
test
component_2
with
technology_2
p
test
run
the
test
build
the
component_3
great
work
youâre
do
guide
attribution
tag
connector_1
a
pattern_1
web
component_1

minute
prerequisite
toggle
navigation
component_4
of
content
this
pattern_3
contain
the
guide
documentation
component_5
to
pattern_4
the
guide
in
publish
form
pattern_4
it
on
the
open
liberty

explore
how
to
connector_4
a
quality_attribute_1
pattern_1
web
component_1
and
connector_5
it
resource
in
technology_1
use
technology_2
b
and
technology_2
p
what
youâll
artist
technology_2


{

name
foo

album

{

title
album_one

artist
foo

ntracks


}

{

title
album_two

artist
foo

ntracks


}


}

{

name
bar

album

{

title
foo
walk
into
a
bar

artist
bar

ntracks


}


}

{

name
dj

album


}

you
will
how
to
connector_4
a
pattern_2
component_1
serialize
a
technology_1
connector_data_1
that
contain
a
connector_data_2
of
artist
and
their
album
and
use
two
different
approach
to
deserialize
the

technology_3
resource
the
first
approach
consist
of
use
the
technology_1
component_6
for
technology_3
bind
technology_2
b
to
directly
convert
technology_3
connector_data_3
into
technology_1
connector_data_1
the
second
approach
consist
of
use
the
technology_1
component_6
for
technology_3
component_2
technology_2
p
to
component_2
the
technology_2
the
pattern_2
component_1
that
provide
the
artist
and
album
resource
be
already
connector_6
for
you
when
the
component_7
be
run
this
component_1
be
quality_attribute_2
at
the
technology_4
localhost

artist

which
respond
with
the
artist
technology_2

you
will
connector_7
the
follow
two
use
the
two
deserialization
approach
â¦â
artist
total
to
the
total
number
of
artist
in
the
technology_3
â¦â
artist
total
artist
to
the
total
number
of
album
in
the
technology_3
for
the
particular
artist
if
you
be
interest
in

more
about
pattern_2
component_8
and
how
you
can
connector_6
them
connector_8
create
a
pattern_1
web
component_1
connector_3
start
the
fast
way
to
work
through
this
guide
be
to
clone
the
git
pattern_3
and
use
the
project
that
be
provide
inside
git
clone
technology_4
technology_5
technology_6
openliberty
guide
rest
component_9
technology_1
git
cd
guide
rest
component_9
technology_1
the
start
directory
contain
the
start
project
that
you
will
build
upon
the
finish
directory
contain
the
finish
project
that
you
will
build
before
you
begin
make
sure
you
have
all
the
necessary
prerequisite
try
what
youâll
build
the
finish
directory
in
the
root
of
this
guide
contain
the
finish
component_3
give
it
a
try
before
you
proceed
to
try
out
the
component_3
first
go
to
the
finish
directory
and
run
the
follow
technology_7
goal
to
build
the
component_3
and
quality_attribute_3
it
to
open
liberty
cd
finish
mvn
liberty
run
after
you
see
the
follow
connector_data_4
your
component_3
component_7
be
ready
the
defaultserver
component_7
be
ready
to
run
a
smart
planet
you
can
find
your
component_1
at
the
technology_4
localhost

artist

now
you
can
connector_4
the
at
technology_4
localhost

artist
total
to
see
the
total
number
of
artist
and
you
can
connector_4
the
at
technology_4
localhost

artist
total
artist
to
see
a
particular
artistâs
total
number
of
album
after
you
be
finish
connector_9
out
the
component_3
stop
the
open
liberty
component_7
by
press
ctrl+c
in
the
command
line
component_10
where
you
run
the
component_7
alternatively
you
can
run
the
liberty
stop
goal
from
the
finish
directory
in
another
shell
component_10
mvn
liberty
stop
start
the
component_1
navigate
to
the
start
directory
to
begin
when
you
run
open
liberty
in
development
mode

a
dev
mode
the
component_7
listen
for
connector_10
and
automatically
recompiles
and
quality_attribute_3
your
connector_data_5
whenever
you
connector_11
a
connector_12
run
the
follow
goal
to
start
open
liberty
in
dev
mode
mvn
liberty
dev
after
you
see
the
follow
connector_data_4
your
component_3
component_7
in
dev
mode
be
ready
**************************************************************
*
liberty
be
run
in
dev
mode
dev
mode
hold
your
command
line
component_10
to
listen
for
connector_12
open
another
command
line
component_10
to
continue
or
open
the
project
in
your
editor
the
component_3
that
youâll
build
upon
be
create
for
you
after
your
component_7
be
ready
you
can
connector_4
the
component_1
at
the
technology_4
localhost

artist
url
create
pojos
artist
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest
component_12

15import
jakarta
technology_2
bind
annotation
jsonbcreator
16import
jakarta
technology_2
bind
annotation
jsonbproperty
17import
jakarta
technology_2
bind
annotation
jsonbtransient


tag
artist
20public
artist
{

tag
name

name

end
name

tag
album

album
album

end
album

connector_data_1
property
that
do
not
connector_data_6
to
a
technology_3

tag
jsonbtransient

@jsonbtransient

end
jsonbtransient

boolean
legendary
=
true


artist
{


}


tag
jsonbcreator

@jsonbcreator

end
jsonbcreator

artist

tag
jsonbproperty

@jsonbproperty
name
name

@jsonbproperty
album
album
album
{

end
jsonbproperty


this
name
=
name

this
album
=
album

}


@override

tostring
{

name
+
connector_6
+
album
length
+
album

}
54}

end
artist
album
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest
component_12

15import
jakarta
technology_2
bind
annotation
jsonbcreator
16import
jakarta
technology_2
bind
annotation
jsonbproperty


tag
album
19public
album
{

tag
title

title

end
title


@jsonbproperty
artist

tag
artistname

artistname

end
artistname


@jsonbproperty
ntracks

tag
totaltracks

totaltracks

end
totaltracks


album
{

}


@jsonbcreator

album

@jsonbproperty
title
title

@jsonbproperty
artist
artistname

@jsonbproperty
ntracks
totaltracks
{


this
title
=
title

this
artistname
=
artistname

this
totaltracks
=
totaltracks

}


@override

tostring
{

album
title
+
title
+
by
+
artistname

+
contain
+
totaltracks
+
track

}
53}

end
album
to
deserialize
a
technology_3
connector_data_4
start
with
create
plain
old
technology_1
connector_data_7
pojos
that
represent
what
be
in
the
technology_3
and
whose
instance
member
connector_data_6
to
the
key
in
the
technology_2
for
the
purpose
of
this
guide
you
be
give
two
pojos
the
artist
connector_data_1
have
two
instance
member
name
and
album
which
connector_data_6
to
the
artist
name
and
the
collection
of
the
album
they
have
connector_6
the
album
connector_data_1
represent
a
single
connector_data_1
within
the
album
collection
and
contain
three
instance
member
title
artistname
and
totaltracks
which
connector_data_6
to
the
album
title
the
artist
who
connector_6
the
album
and
the
number
of
track
the
album
contain
introduce
technology_2
b
and
technology_2
p
technology_2
b
be
a
feature
introduce
with
technology_1
ee

and
strengthen
technology_1
support
for
technology_2
with
technology_2
b
you
directly
serialize
and
deserialize
pojos
this
component_6
give
you
a
variety
of
option
for
work
with
technology_3
resource
in
contrast
you
need
to
use
helper
with
technology_2
p
to
component_2
a
technology_3
connector_13
this
pattern_5
be
more
straightforward
but
it
can
be
cumbersome
with
more
complex

technology_2
b
be
build
on
top
of
the
exist
technology_2
p
technology_10
technology_2
b
can
do
everything
that
technology_2
p
can
do
and
allow
for
more
customization
for
serialize
and
deserializing
use
technology_2
b
artist
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest
component_12

15import
jakarta
technology_2
bind
annotation
jsonbcreator
16import
jakarta
technology_2
bind
annotation
jsonbproperty
17import
jakarta
technology_2
bind
annotation
jsonbtransient


tag
artist
20public
artist
{

tag
name

name

end
name

tag
album

album
album

end
album

connector_data_1
property
that
do
not
connector_data_6
to
a
technology_3

tag
jsonbtransient

@jsonbtransient

end
jsonbtransient

boolean
legendary
=
true


artist
{


}


tag
jsonbcreator

@jsonbcreator

end
jsonbcreator

artist

tag
jsonbproperty

@jsonbproperty
name
name

@jsonbproperty
album
album
album
{

end
jsonbproperty


this
name
=
name

this
album
=
album

}


@override

tostring
{

name
+
connector_6
+
album
length
+
album

}
54}

end
artist
technology_2
b
require
a
pojo
to
have
a
default
no
argument
constructor
for
deserialization
and
bind
to
work
properly
the
technology_2
b
component_13
include
a
set
of
default
connector_data_6
rule
which
can
be
run
without
any
customization
annotation
or
custom
configuration
in
some
instance
you
might
find
it
useful
to
deserialize
a
technology_3
connector_data_4
with
only
certain

specific
name
or
with
custom
constructor
in
these
requirement_1
annotation
be
necessary
and
recommend
the
@jsonbproperty
annotation
to
connector_data_6
technology_3
key
to
instance
member
and
vice
versa
without
the
use
of
this
annotation
technology_2
b
will
attempt
to
do
pojo
connector_data_6
match
the
key
in
the
technology_3
to
the
instance
member
by
name
technology_2
b
will
attempt
to
match
the
technology_3
key
with
a
technology_1
or
annotate
with
@jsonbproperty
where
the
requirement_2
in
the
annotation
exactly
match
the
technology_3
key
if
no
annotation
exist
with
the
give
technology_3
key
technology_2
b
will
attempt
to
find
a
match
with
the
same
name
if
no
match
be
find
technology_2
b
attempt
to
find
a
match
getter
for
serialization
or
a
match
setter
for
de
serialization
a
match
occur
when
the
property
name
of
the
match
the
technology_3
key
if
no
match
getter
or
setter
be
find
serialization
or
de
serialization
respectively
fail
with
an
exception
the
artist
pojo
do
not
require
this
annotation
because
all
instance
member
match
the
technology_3
key
by
name
the
@jsonbcreator
and
@jsonbproperty
annotation
to
annotate
a
custom
constructor
these
annotation
be
require
for
proper
parameter
substitution
when
a
custom
constructor
be
use
the
@jsonbtransient
annotation
to
define
an
connector_data_1
property
that
do
not
connector_data_6
to
a
technology_3
property
while
the
use
of
this
annotation
be
quality_attribute_5
practice
it
be
only
necessary
for
serialization
for
more
connector_data_8
on
customization
with
technology_2
b
see
the
official
technology_2
b

connector_1
the
pattern_2
resource
artist
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest
component_12

15import
jakarta
technology_2
bind
annotation
jsonbcreator
16import
jakarta
technology_2
bind
annotation
jsonbproperty
17import
jakarta
technology_2
bind
annotation
jsonbtransient


tag
artist
20public
artist
{

tag
name

name

end
name

tag
album

album
album

end
album

connector_data_1
property
that
do
not
connector_data_6
to
a
technology_3

tag
jsonbtransient

@jsonbtransient

end
jsonbtransient

boolean
legendary
=
true


artist
{


}


tag
jsonbcreator

@jsonbcreator

end
jsonbcreator

artist

tag
jsonbproperty

@jsonbproperty
name
name

@jsonbproperty
album
album
album
{

end
jsonbproperty


this
name
=
name

this
album
=
album

}


@override

tostring
{

name
+
connector_6
+
album
length
+
album

}
54}

end
artist
album
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest
component_12

15import
jakarta
technology_2
bind
annotation
jsonbcreator
16import
jakarta
technology_2
bind
annotation
jsonbproperty


tag
album
19public
album
{

tag
title

title

end
title


@jsonbproperty
artist

tag
artistname

artistname

end
artistname


@jsonbproperty
ntracks

tag
totaltracks

totaltracks

end
totaltracks


album
{

}


@jsonbcreator

album

@jsonbproperty
title
title

@jsonbproperty
artist
artistname

@jsonbproperty
ntracks
totaltracks
{


this
title
=
title

this
artistname
=
artistname

this
totaltracks
=
totaltracks

}


@override

tostring
{

album
title
+
title
+
by
+
artistname

+
contain
+
totaltracks
+
track

}
53}

end
album
the
artist
and
album
pojos
be
ready
for
deserialization
next
weâll
to
connector_5
the
technology_3
connector_13
from
your
pattern_2
component_1
create
the
component_14

src

technology_1
io
openliberty
guide
consumingrest
component_14
technology_1
component_14
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest

15import
technology_1
util
connector_data_2
16import
technology_1
util
connector_14
collector

18import
jakarta
technology_2
jsonarray
19import
jakarta
technology_2

20import
jakarta
w
r
component_9
component_9
21import
jakarta
w
r
component_9
clientbuilder
22import
jakarta
w
r
core
connector_13

24import
io
openliberty
guide
consumingrest
component_12
album
25import
io
openliberty
guide
consumingrest
component_12
artist


tag
component_14
28public
component_14
{

tag
consumewithjsonb

artist
consumewithjsonb

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


tag
readentity

artist
artist
=
connector_13
readentity
artist


end
readentity


connector_13
close

component_9
close


artist

}

end
consumewithjsonb


tag
consumewithjsonp

artist
consumewithjsonp

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


jsonarray
arr
=
connector_13
readentity
jsonarray



connector_13
close

component_9
close


component_14
collectartists
arr

}

end
consumewithjsonp


tag
collectartists

private
artist
collectartists
jsonarray
artistarr
{

connector_data_2
artist
artist
=
artistarr
connector_14
connector_data_6
artistjson
{

jsonarray
albumarr
=

artistjson
getjsonarray
album

artist
artist
=
artist


artistjson
getstring
name

component_14
collectalbums
albumarr

artist

}
connector_15
collector
tolist


artist
toarray

artist
artist
size

}

end
collectartists


tag
collectalbums

private
album
collectalbums
jsonarray
albumarr
{

connector_data_2
album
album
=
albumarr
connector_14
connector_data_6
albumjson
{

album
album
=
album


albumjson
getstring
title


albumjson
getstring
artist


albumjson
getint
ntracks

album

}
connector_15
collector
tolist


album
toarray

album
album
size

}

end
collectalbums
88}

end
component_14
component_2
technology_3
use
technology_2
b
component_14
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest

15import
technology_1
util
connector_data_2
16import
technology_1
util
connector_14
collector

18import
jakarta
technology_2
jsonarray
19import
jakarta
technology_2

20import
jakarta
w
r
component_9
component_9
21import
jakarta
w
r
component_9
clientbuilder
22import
jakarta
w
r
core
connector_13

24import
io
openliberty
guide
consumingrest
component_12
album
25import
io
openliberty
guide
consumingrest
component_12
artist


tag
component_14
28public
component_14
{

tag
consumewithjsonb

artist
consumewithjsonb

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


tag
readentity

artist
artist
=
connector_13
readentity
artist


end
readentity


connector_13
close

component_9
close


artist

}

end
consumewithjsonb


tag
consumewithjsonp

artist
consumewithjsonp

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


jsonarray
arr
=
connector_13
readentity
jsonarray



connector_13
close

component_9
close


component_14
collectartists
arr

}

end
consumewithjsonp


tag
collectartists

private
artist
collectartists
jsonarray
artistarr
{

connector_data_2
artist
artist
=
artistarr
connector_14
connector_data_6
artistjson
{

jsonarray
albumarr
=

artistjson
getjsonarray
album

artist
artist
=
artist


artistjson
getstring
name

component_14
collectalbums
albumarr

artist

}
connector_15
collector
tolist


artist
toarray

artist
artist
size

}

end
collectartists


tag
collectalbums

private
album
collectalbums
jsonarray
albumarr
{

connector_data_2
album
album
=
albumarr
connector_14
connector_data_6
albumjson
{

album
album
=
album


albumjson
getstring
title


albumjson
getstring
artist


albumjson
getint
ntracks

album

}
connector_15
collector
tolist


album
toarray

album
album
size

}

end
collectalbums
88}

end
component_14
pom
technology_11

technology_11
version=


encoding=
utf


project
xmlns=
technology_4
technology_7
technology_12

pom



xmlns
xsi=
technology_4
www
w3


xmlschema
instance
xsi
schemalocation=
technology_4
technology_7
technology_12

pom



technology_4
technology_7
technology_12

technology_13
technology_7



technology_13


modelversion



modelversion



io
openliberty
guide



guide
rest
component_9
technology_1


version


snapshot
version

packaging
war
packaging


property

project
build
sourceencoding
utf

project
build
sourceencoding

project
report
outputencoding
utf

project
report
outputencoding

technology_7
compiler
component_5


technology_7
compiler
component_5

technology_7
compiler
target


technology_7
compiler
target

liberty
configuration

liberty
var
default
technology_4
port

liberty
var
default
technology_4
port

liberty
var
default
technology_4
port

liberty
var
default
technology_4
port

property


connector_16

provide
connector_16

connector_16


jakarta
component_15



jakarta
jakartaee
technology_10


version



version

scope
provide
scope

connector_16

tag
microprofile

connector_16



eclipse
microprofile



microprofile


version


version

type
pom
type

scope
provide
scope

connector_16

end
microprofile

for
test

connector_16



junit
jupiter



junit
jupiter


version



version

scope
test
scope

connector_16

connector_16



technology_14
technology_15



technology_15
component_9


version



final
version

scope
test
scope

connector_16

technology_2
p
ri

connector_16



technology_16



jakarta
technology_2


version



version

scope
test
scope

connector_16

technology_2
b
component_6

tag
yasson

connector_16



eclipse



yasson


version



version

scope
test
scope

connector_16

end
yasson

connector_16


build

finalname
${project
artifactid}
finalname

plugins

plugin



technology_12
technology_7
plugins



technology_7
war
plugin


version



version

plugin

plugin
to
run
unit
test

plugin



technology_12
technology_7
plugins



technology_7
surefire
plugin


version



version

plugin

enable
liberty
technology_7
plugin

plugin


io
openliberty
technology_17



liberty
technology_7
plugin


version



version

plugin

plugin
to
run
functional
test

plugin



technology_12
technology_7
plugins



technology_7
failsafe
plugin


version



version

configuration

systempropertyvariables

technology_4
port
${liberty
var
default
technology_4
port}
technology_4
port

systempropertyvariables

configuration

plugin

plugins

build

project
technology_2
b
be
a
technology_1
component_6
that
be
use
to
serialize
technology_1
connector_data_7
to
technology_3
connector_data_3
and
vice
versa
open
libertyâs
technology_2
b
feature
on
technology_7
central
include
the
technology_2
b
technology_18
through
transitive
connector_16
the
technology_2
b
component_16
be
provide
by
the
microprofile
connector_16
in
your
pom
technology_11

look
for
the
connector_16
with
the
microprofile
artifact

the
consumewithjsonb
in
the
component_14
make
a
connector_2
connector_data_9
to
the
run
artist
component_1
and
connector_17
the
technology_2
to
bind
the
technology_3
into
an
artist

use
the
artist
component_17
type
in
the
readentity
connector_data_10
component_2
technology_3
use
technology_2
p
component_14
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest

15import
technology_1
util
connector_data_2
16import
technology_1
util
connector_14
collector

18import
jakarta
technology_2
jsonarray
19import
jakarta
technology_2

20import
jakarta
w
r
component_9
component_9
21import
jakarta
w
r
component_9
clientbuilder
22import
jakarta
w
r
core
connector_13

24import
io
openliberty
guide
consumingrest
component_12
album
25import
io
openliberty
guide
consumingrest
component_12
artist


tag
component_14
28public
component_14
{

tag
consumewithjsonb

artist
consumewithjsonb

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


tag
readentity

artist
artist
=
connector_13
readentity
artist


end
readentity


connector_13
close

component_9
close


artist

}

end
consumewithjsonb


tag
consumewithjsonp

artist
consumewithjsonp

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


jsonarray
arr
=
connector_13
readentity
jsonarray



connector_13
close

component_9
close


component_14
collectartists
arr

}

end
consumewithjsonp


tag
collectartists

private
artist
collectartists
jsonarray
artistarr
{

connector_data_2
artist
artist
=
artistarr
connector_14
connector_data_6
artistjson
{

jsonarray
albumarr
=

artistjson
getjsonarray
album

artist
artist
=
artist


artistjson
getstring
name

component_14
collectalbums
albumarr

artist

}
connector_15
collector
tolist


artist
toarray

artist
artist
size

}

end
collectartists


tag
collectalbums

private
album
collectalbums
jsonarray
albumarr
{

connector_data_2
album
album
=
albumarr
connector_14
connector_data_6
albumjson
{

album
album
=
album


albumjson
getstring
title


albumjson
getstring
artist


albumjson
getint
ntracks

album

}
connector_15
collector
tolist


album
toarray

album
album
size

}

end
collectalbums
88}

end
component_14
the
consumewithjsonp
in
the
component_14
make
a
connector_2
connector_data_9
to
the
run
artist
component_1
and
connector_17
the
technology_2
this
then
us
the
collectartists
and
collectalbums
helper

these
helper
will
requirement_3
the
technology_3
and
connector_15
it
connector_data_7
into
individual
pojos
notice
that
you
can
use
the
custom
constructor
to
create
instance
of
artist
and
album
create
additional
pattern_2
resource
component_14
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest

15import
technology_1
util
connector_data_2
16import
technology_1
util
connector_14
collector

18import
jakarta
technology_2
jsonarray
19import
jakarta
technology_2

20import
jakarta
w
r
component_9
component_9
21import
jakarta
w
r
component_9
clientbuilder
22import
jakarta
w
r
core
connector_13

24import
io
openliberty
guide
consumingrest
component_12
album
25import
io
openliberty
guide
consumingrest
component_12
artist


tag
component_14
28public
component_14
{

tag
consumewithjsonb

artist
consumewithjsonb

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


tag
readentity

artist
artist
=
connector_13
readentity
artist


end
readentity


connector_13
close

component_9
close


artist

}

end
consumewithjsonb


tag
consumewithjsonp

artist
consumewithjsonp

targeturl
{

component_9
component_9
=
clientbuilder
newclient

tag
connector_2


connector_13
connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

end
connector_2


jsonarray
arr
=
connector_13
readentity
jsonarray



connector_13
close

component_9
close


component_14
collectartists
arr

}

end
consumewithjsonp


tag
collectartists

private
artist
collectartists
jsonarray
artistarr
{

connector_data_2
artist
artist
=
artistarr
connector_14
connector_data_6
artistjson
{

jsonarray
albumarr
=

artistjson
getjsonarray
album

artist
artist
=
artist


artistjson
getstring
name

component_14
collectalbums
albumarr

artist

}
connector_15
collector
tolist


artist
toarray

artist
artist
size

}

end
collectartists


tag
collectalbums

private
album
collectalbums
jsonarray
albumarr
{

connector_data_2
album
album
=
albumarr
connector_14
connector_data_6
albumjson
{

album
album
=
album


albumjson
getstring
title


albumjson
getstring
artist


albumjson
getint
ntracks

album

}
connector_15
collector
tolist


album
toarray

album
album
size

}

end
collectalbums
88}

end
component_14
now
that
you
can
connector_5
a
technology_3
resource
you
can
put
that
connector_data_11
to
use
replace
the
artistresource

src

technology_1
io
openliberty
guide
consumingrest
component_1
artistresource
technology_1
artistresource
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
io
openliberty
guide
consumingrest
component_1

15import
jakarta
technology_2
jsonarray
16import
jakarta
technology_2
bind
jsonb
17import
jakarta
technology_2
bind
jsonbbuilder
18import
jakarta
w
r
connector_2
19import
jakarta
w
r
path
20import
jakarta
w
r
pathparam
21import
jakarta
w
r
produce
22import
jakarta
w
r
core
component_18
23import
jakarta
w
r
core
mediatype
24import
jakarta
w
r
core
uriinfo

26import
io
openliberty
guide
consumingrest
component_12
artist
27import
io
openliberty
guide
consumingrest
component_14

29@path
artist

tag
artistresource
31public
artistresource
{


@context

uriinfo
uriinfo


@get

@produces
mediatype
application_json

tag
getartists

jsonarray
getartists
{

reader
getartists

}

end
getartists


@get

@path
jsonstring

@produces
mediatype
text_plain

tag
getjsonstring

getjsonstring
{

jsonb
jsonb
=
jsonbbuilder
create


artist
artist
=
component_14
consumewithjsonb
uriinfo
getbaseuri
tostring

+
artist

connector_data_12
=
jsonb
tojson
artist


connector_data_12

}

end
getjsonstring


@get

@path
total
{artist}

@produces
mediatype
text_plain

tag
gettotalalbums

gettotalalbums
@pathparam
artist
artist
{

artist
artist
=
component_14
consumewithjsonb
uriinfo
getbaseuri
tostring

+
artist


for

i
=

i
artist
length
i++
{

if
artist
i
name
equal
artist
{

artist
i
album
length

}

}



}

end
gettotalalbums


@get

@path
total

@produces
mediatype
text_plain

tag
gettotalartists

gettotalartists
{

component_14
consumewithjsonp
uriinfo
getbaseuri
tostring

+
artist
length

}

end
gettotalartists
85}

end
artistresource
the
getartists
provide
the
raw
technology_3
connector_data_11
component_1
that
you
connector_18
at
the
begin
of
this
guide
the
getjsonstring
us
technology_2
b
to
the
technology_3
a
a
that
will
be
use
late
for
test
the
gettotalalbums
us
technology_2
b
to
the
total
number
of
album
present
in
the
technology_3
for
a
particular
artist
the


if
this
artist
do
not
exist
the
gettotalartists
us
technology_2
p
to
the
total
number
of
artist
present
in
the
technology_2
the
that
you
connector_6
in
the
component_14
could
be
connector_6
directly
in
the
artistresource

however
if
you
be
connector_1
a
pattern_2
resource
from
a
third
party
component_1
you
should
separate
your
connector_2

connector_data_13
from
your
connector_data_11
consumption
run
the
component_3
the
open
liberty
component_7
be
start
in
development
mode
at
the
begin
of
the
guide
and
all
the
connector_10
be
automatically
pick
up
you
can
find
your
component_1
at
technology_4
localhost

artist
now
you
can
connector_4
the
at
technology_4
localhost

artist
total
to
see
the
total
number
of
artist
and
you
can
connector_4
the
at
technology_4
localhost

artist
total
artist
to
see
a
particular
artistâs
total
number
of
album
test
deserialization
create
the
consumingrestit

src
test
technology_1
it
io
openliberty
guide
consumingrest
consumingrestit
technology_1
consumingrestit
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
it
io
openliberty
guide
consumingrest

15import

junit
jupiter
technology_10
assertion
assertequals

17import
jakarta
technology_2
bind
jsonb
18import
jakarta
technology_2
bind
jsonbbuilder
19import
jakarta
w
r
component_9
component_9
20import
jakarta
w
r
component_9
clientbuilder
21import
jakarta
w
r
core
connector_13

23import

junit
jupiter
technology_10
aftereach
24import

junit
jupiter
technology_10
beforeeach
25import

junit
jupiter
technology_10
beforeall
26import

junit
jupiter
technology_10
test

28import
io
openliberty
guide
consumingrest
component_12
artist

30public
consumingrestit
{


private
port

private
baseurl

private
targeturl


private
component_9
component_9

private
connector_13
connector_13


tag
beforeall

@beforeall

end
beforeall

onetimesetup
{

port
=
component_19
getproperty
technology_4
port

baseurl
=
technology_4
localhost
+
port
+
artist

targeturl
=
baseurl
+
total

}


tag
beforeeach

@beforeeach

end
beforeeach

setup
{

component_9
=
clientbuilder
newclient

}


tag
aftereach

@aftereach

end
aftereach

teardown
{

component_9
close

}


tag
test


@test

end
test


tag
testartistdeserialization

testartistdeserialization
{

connector_13
=
component_9
target
baseurl
+
jsonstring
connector_data_9
connector_2

this
assertresponse
baseurl
+
jsonstring
connector_13


jsonb
jsonb
=
jsonbbuilder
create


expectedstring
=
{\
name\
\
foo\
\
albums\

+
{\
title\
\
album_one\
\
artist\
\
foo\
\
ntracks\
12}
}

artist
expect
=
jsonb
fromjson
expectedstring
artist



actualstring
=
connector_13
readentity



artist
actual
=
jsonb
fromjson
actualstring
artist



assertequals
expect
name
actual

name

expect
name
of
artist
do
not
match


connector_13
close

}

end
testartistdeserialization


tag
test


@test

end
test


tag
testjsonbalbumcount

testjsonbalbumcount
{


artist
=
{
dj
bar
foo
}

for

i
=

i
artist
length
i++
{

connector_13
=
component_9
target
targeturl
+
artist
i
connector_data_9
connector_2

this
assertresponse
targeturl
+
artist
i
connector_13


expect
=
i

actual
=
connector_13
readentity



assertequals
expect
actual
album
count
for

+
artist
i
+
do
not
match


connector_13
close

}

}

end
testjsonbalbumcount


tag
testalbumcountforunknownartist

tag
test


@test

end
test


tag
testjsonbalbumcountforunknownartist

testjsonbalbumcountforunknownartist
{

connector_13
=
component_9
target
targeturl
+
unknown
artist
connector_data_9
connector_2


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
unknown
artist
must
have

album


connector_13
close

}

end
testjsonbalbumcountforunknownartist


tag
test


@test

end
test


tag
testjsonpartistcount

testjsonpartistcount
{

connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

this
assertresponse
targeturl
connector_13


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
expect
number
of
artist
do
not
match


connector_13
close

}

end
testjsonpartistcount


**

*
assert
that
the
give
url
have
the
correct

connector_13


*

tag
assertresponse

private
assertresponse

url
connector_13
connector_13
{

assertequals

connector_13
getstatus
incorrect
connector_13
from
+
url

}

end
assertresponse

end
test
147}
technology_7
find
and
connector_19
all
test
under
the
src
test
technology_1
it
directory
and
each
test
must
be
mark
with
the
@test
annotation
you
can
use
the
@beforeall
and
@afterall
annotation
to
perform
any
one
time
setup
and
teardown
connector_data_14
before
and
after
all
of
your
test
run
you
can
also
use
the
@beforeeach
and
@aftereach
annotation
to
perform
setup
and
teardown
connector_data_14
for
individual
test
requirement_1
test
the
bind
component_2
consumingrestit
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
it
io
openliberty
guide
consumingrest

15import

junit
jupiter
technology_10
assertion
assertequals

17import
jakarta
technology_2
bind
jsonb
18import
jakarta
technology_2
bind
jsonbbuilder
19import
jakarta
w
r
component_9
component_9
20import
jakarta
w
r
component_9
clientbuilder
21import
jakarta
w
r
core
connector_13

23import

junit
jupiter
technology_10
aftereach
24import

junit
jupiter
technology_10
beforeeach
25import

junit
jupiter
technology_10
beforeall
26import

junit
jupiter
technology_10
test

28import
io
openliberty
guide
consumingrest
component_12
artist

30public
consumingrestit
{


private
port

private
baseurl

private
targeturl


private
component_9
component_9

private
connector_13
connector_13


tag
beforeall

@beforeall

end
beforeall

onetimesetup
{

port
=
component_19
getproperty
technology_4
port

baseurl
=
technology_4
localhost
+
port
+
artist

targeturl
=
baseurl
+
total

}


tag
beforeeach

@beforeeach

end
beforeeach

setup
{

component_9
=
clientbuilder
newclient

}


tag
aftereach

@aftereach

end
aftereach

teardown
{

component_9
close

}


tag
test


@test

end
test


tag
testartistdeserialization

testartistdeserialization
{

connector_13
=
component_9
target
baseurl
+
jsonstring
connector_data_9
connector_2

this
assertresponse
baseurl
+
jsonstring
connector_13


jsonb
jsonb
=
jsonbbuilder
create


expectedstring
=
{\
name\
\
foo\
\
albums\

+
{\
title\
\
album_one\
\
artist\
\
foo\
\
ntracks\
12}
}

artist
expect
=
jsonb
fromjson
expectedstring
artist



actualstring
=
connector_13
readentity



artist
actual
=
jsonb
fromjson
actualstring
artist



assertequals
expect
name
actual

name

expect
name
of
artist
do
not
match


connector_13
close

}

end
testartistdeserialization


tag
test


@test

end
test


tag
testjsonbalbumcount

testjsonbalbumcount
{


artist
=
{
dj
bar
foo
}

for

i
=

i
artist
length
i++
{

connector_13
=
component_9
target
targeturl
+
artist
i
connector_data_9
connector_2

this
assertresponse
targeturl
+
artist
i
connector_13


expect
=
i

actual
=
connector_13
readentity



assertequals
expect
actual
album
count
for

+
artist
i
+
do
not
match


connector_13
close

}

}

end
testjsonbalbumcount


tag
testalbumcountforunknownartist

tag
test


@test

end
test


tag
testjsonbalbumcountforunknownartist

testjsonbalbumcountforunknownartist
{

connector_13
=
component_9
target
targeturl
+
unknown
artist
connector_data_9
connector_2


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
unknown
artist
must
have

album


connector_13
close

}

end
testjsonbalbumcountforunknownartist


tag
test


@test

end
test


tag
testjsonpartistcount

testjsonpartistcount
{

connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

this
assertresponse
targeturl
connector_13


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
expect
number
of
artist
do
not
match


connector_13
close

}

end
testjsonpartistcount


**

*
assert
that
the
give
url
have
the
correct

connector_13


*

tag
assertresponse

private
assertresponse

url
connector_13
connector_13
{

assertequals

connector_13
getstatus
incorrect
connector_13
from
+
url

}

end
assertresponse

end
test
147}
pom
technology_11

technology_11
version=


encoding=
utf


project
xmlns=
technology_4
technology_7
technology_12

pom



xmlns
xsi=
technology_4
www
w3


xmlschema
instance
xsi
schemalocation=
technology_4
technology_7
technology_12

pom



technology_4
technology_7
technology_12

technology_13
technology_7



technology_13


modelversion



modelversion



io
openliberty
guide



guide
rest
component_9
technology_1


version


snapshot
version

packaging
war
packaging


property

project
build
sourceencoding
utf

project
build
sourceencoding

project
report
outputencoding
utf

project
report
outputencoding

technology_7
compiler
component_5


technology_7
compiler
component_5

technology_7
compiler
target


technology_7
compiler
target

liberty
configuration

liberty
var
default
technology_4
port

liberty
var
default
technology_4
port

liberty
var
default
technology_4
port

liberty
var
default
technology_4
port

property


connector_16

provide
connector_16

connector_16


jakarta
component_15



jakarta
jakartaee
technology_10


version



version

scope
provide
scope

connector_16

tag
microprofile

connector_16



eclipse
microprofile



microprofile


version


version

type
pom
type

scope
provide
scope

connector_16

end
microprofile

for
test

connector_16



junit
jupiter



junit
jupiter


version



version

scope
test
scope

connector_16

connector_16



technology_14
technology_15



technology_15
component_9


version



final
version

scope
test
scope

connector_16

technology_2
p
ri

connector_16



technology_16



jakarta
technology_2


version



version

scope
test
scope

connector_16

technology_2
b
component_6

tag
yasson

connector_16



eclipse



yasson


version



version

scope
test
scope

connector_16

end
yasson

connector_16


build

finalname
${project
artifactid}
finalname

plugins

plugin



technology_12
technology_7
plugins



technology_7
war
plugin


version



version

plugin

plugin
to
run
unit
test

plugin



technology_12
technology_7
plugins



technology_7
surefire
plugin


version



version

plugin

enable
liberty
technology_7
plugin

plugin


io
openliberty
technology_17



liberty
technology_7
plugin


version



version

plugin

plugin
to
run
functional
test

plugin



technology_12
technology_7
plugins



technology_7
failsafe
plugin


version



version

configuration

systempropertyvariables

technology_4
port
${liberty
var
default
technology_4
port}
technology_4
port

systempropertyvariables

configuration

plugin

plugins

build

project
the
yasson
connector_16
be

in
your
pom
technology_11
so
that
your
test
have
connector_4
to
technology_2
b
the
testartistdeserialization
test
requirement_1
connector_20
that
artist
instance
create
from
the
pattern_2
connector_data_11
and
those
that
be
hardcoded
perform
the
same
the
assertresponse
helper
ensure
that
the
connector_13
you
connector_21
be
valid

component_2
with
technology_2
b
test
consumingrestit
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
it
io
openliberty
guide
consumingrest

15import

junit
jupiter
technology_10
assertion
assertequals

17import
jakarta
technology_2
bind
jsonb
18import
jakarta
technology_2
bind
jsonbbuilder
19import
jakarta
w
r
component_9
component_9
20import
jakarta
w
r
component_9
clientbuilder
21import
jakarta
w
r
core
connector_13

23import

junit
jupiter
technology_10
aftereach
24import

junit
jupiter
technology_10
beforeeach
25import

junit
jupiter
technology_10
beforeall
26import

junit
jupiter
technology_10
test

28import
io
openliberty
guide
consumingrest
component_12
artist

30public
consumingrestit
{


private
port

private
baseurl

private
targeturl


private
component_9
component_9

private
connector_13
connector_13


tag
beforeall

@beforeall

end
beforeall

onetimesetup
{

port
=
component_19
getproperty
technology_4
port

baseurl
=
technology_4
localhost
+
port
+
artist

targeturl
=
baseurl
+
total

}


tag
beforeeach

@beforeeach

end
beforeeach

setup
{

component_9
=
clientbuilder
newclient

}


tag
aftereach

@aftereach

end
aftereach

teardown
{

component_9
close

}


tag
test


@test

end
test


tag
testartistdeserialization

testartistdeserialization
{

connector_13
=
component_9
target
baseurl
+
jsonstring
connector_data_9
connector_2

this
assertresponse
baseurl
+
jsonstring
connector_13


jsonb
jsonb
=
jsonbbuilder
create


expectedstring
=
{\
name\
\
foo\
\
albums\

+
{\
title\
\
album_one\
\
artist\
\
foo\
\
ntracks\
12}
}

artist
expect
=
jsonb
fromjson
expectedstring
artist



actualstring
=
connector_13
readentity



artist
actual
=
jsonb
fromjson
actualstring
artist



assertequals
expect
name
actual

name

expect
name
of
artist
do
not
match


connector_13
close

}

end
testartistdeserialization


tag
test


@test

end
test


tag
testjsonbalbumcount

testjsonbalbumcount
{


artist
=
{
dj
bar
foo
}

for

i
=

i
artist
length
i++
{

connector_13
=
component_9
target
targeturl
+
artist
i
connector_data_9
connector_2

this
assertresponse
targeturl
+
artist
i
connector_13


expect
=
i

actual
=
connector_13
readentity



assertequals
expect
actual
album
count
for

+
artist
i
+
do
not
match


connector_13
close

}

}

end
testjsonbalbumcount


tag
testalbumcountforunknownartist

tag
test


@test

end
test


tag
testjsonbalbumcountforunknownartist

testjsonbalbumcountforunknownartist
{

connector_13
=
component_9
target
targeturl
+
unknown
artist
connector_data_9
connector_2


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
unknown
artist
must
have

album


connector_13
close

}

end
testjsonbalbumcountforunknownartist


tag
test


@test

end
test


tag
testjsonpartistcount

testjsonpartistcount
{

connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

this
assertresponse
targeturl
connector_13


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
expect
number
of
artist
do
not
match


connector_13
close

}

end
testjsonpartistcount


**

*
assert
that
the
give
url
have
the
correct

connector_13


*

tag
assertresponse

private
assertresponse

url
connector_13
connector_13
{

assertequals

connector_13
getstatus
incorrect
connector_13
from
+
url

}

end
assertresponse

end
test
147}
the
testjsonbalbumcount
and
testjsonbalbumcountforunknownartist
test
both
use
the
total
{artist}
which
invoke
technology_2
b
the
testjsonbalbumcount
test
requirement_1
connector_20
that
deserialization
with
technology_2
b
be
do
correctly
and
that
the
correct
number
of
album
be

for
each
artist
in
the
technology_2
the
testjsonbalbumcountforunknownartist
test
requirement_1
be
similar
to
testjsonbalbumcount
but
instead
connector_20
an
artist
that
do
not
exist
in
the
technology_3
and
ensure
that
a
requirement_2
of

be

component_2
with
technology_2
p
test
consumingrestit
technology_1

tag
copyright

*******************************************************************************

*
copyright
technology_8


corporation
and
others

*
all
right
reserve
this
component_11
and
the
accompany
material

*
be
make
quality_attribute_4
under
the
term
of
the
eclipse
license
v1


*
which
accompany
this
distribution
and
be
quality_attribute_4
at

*
technology_4
www
eclipse

legal
epl
v10
technology_9

*

*
contributor

*
corporation
initial
implementation

*******************************************************************************

end
copyright
13package
it
io
openliberty
guide
consumingrest

15import

junit
jupiter
technology_10
assertion
assertequals

17import
jakarta
technology_2
bind
jsonb
18import
jakarta
technology_2
bind
jsonbbuilder
19import
jakarta
w
r
component_9
component_9
20import
jakarta
w
r
component_9
clientbuilder
21import
jakarta
w
r
core
connector_13

23import

junit
jupiter
technology_10
aftereach
24import

junit
jupiter
technology_10
beforeeach
25import

junit
jupiter
technology_10
beforeall
26import

junit
jupiter
technology_10
test

28import
io
openliberty
guide
consumingrest
component_12
artist

30public
consumingrestit
{


private
port

private
baseurl

private
targeturl


private
component_9
component_9

private
connector_13
connector_13


tag
beforeall

@beforeall

end
beforeall

onetimesetup
{

port
=
component_19
getproperty
technology_4
port

baseurl
=
technology_4
localhost
+
port
+
artist

targeturl
=
baseurl
+
total

}


tag
beforeeach

@beforeeach

end
beforeeach

setup
{

component_9
=
clientbuilder
newclient

}


tag
aftereach

@aftereach

end
aftereach

teardown
{

component_9
close

}


tag
test


@test

end
test


tag
testartistdeserialization

testartistdeserialization
{

connector_13
=
component_9
target
baseurl
+
jsonstring
connector_data_9
connector_2

this
assertresponse
baseurl
+
jsonstring
connector_13


jsonb
jsonb
=
jsonbbuilder
create


expectedstring
=
{\
name\
\
foo\
\
albums\

+
{\
title\
\
album_one\
\
artist\
\
foo\
\
ntracks\
12}
}

artist
expect
=
jsonb
fromjson
expectedstring
artist



actualstring
=
connector_13
readentity



artist
actual
=
jsonb
fromjson
actualstring
artist



assertequals
expect
name
actual

name

expect
name
of
artist
do
not
match


connector_13
close

}

end
testartistdeserialization


tag
test


@test

end
test


tag
testjsonbalbumcount

testjsonbalbumcount
{


artist
=
{
dj
bar
foo
}

for

i
=

i
artist
length
i++
{

connector_13
=
component_9
target
targeturl
+
artist
i
connector_data_9
connector_2

this
assertresponse
targeturl
+
artist
i
connector_13


expect
=
i

actual
=
connector_13
readentity



assertequals
expect
actual
album
count
for

+
artist
i
+
do
not
match


connector_13
close

}

}

end
testjsonbalbumcount


tag
testalbumcountforunknownartist

tag
test


@test

end
test


tag
testjsonbalbumcountforunknownartist

testjsonbalbumcountforunknownartist
{

connector_13
=
component_9
target
targeturl
+
unknown
artist
connector_data_9
connector_2


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
unknown
artist
must
have

album


connector_13
close

}

end
testjsonbalbumcountforunknownartist


tag
test


@test

end
test


tag
testjsonpartistcount

testjsonpartistcount
{

connector_13
=
component_9
target
targeturl
connector_data_9
connector_2

this
assertresponse
targeturl
connector_13


expect
=


actual
=
connector_13
readentity



assertequals
expect
actual
expect
number
of
artist
do
not
match


connector_13
close

}

end
testjsonpartistcount


**

*
assert
that
the
give
url
have
the
correct

connector_13


*

tag
assertresponse

private
assertresponse

url
connector_13
connector_13
{

assertequals

connector_13
getstatus
incorrect
connector_13
from
+
url

}

end
assertresponse

end
test
147}
the
testjsonpartistcount
test
us
the
total
which
invoke
technology_2
p
this
test
connector_20
that
deserialization
with
technology_2
p
be
do
correctly
and
that
the
correct
number
of
artist
be

run
the
test
becayse
you
start
open
liberty
in
development
mode
at
the
start
of
the
guide
press
the
enter

key
to
run
the
test
if
the
test
pass
you
see
a
similar
output
to
the
follow
example
t
e
s
t
s
run
it
io
openliberty
guide
consumingrest
consumingrestit
test
run

failure

error

skip

time
elapsed


sec
in
it
io
openliberty
guide
consumingrest
consumingrestit
connector_data_15
test
run

failure

error

skip

when
you
be
do
connector_9
out
the
component_1
exit
development
mode
by
type
q
in
the
command
line
component_10
where
you
run
the
component_7
and
then
press
the
enter

key
build
the
component_3
if
you
be
satisfy
with
your
component_3
run
the
technology_7
package
goal
to
build
the
war
in
the
target
directory
mvn
package
great
work
youâre
do
you
connector_18
a
quality_attribute_1
pattern_1
web
component_1
and
connector_5
it
resource
by
use
technology_2
b
and
technology_2
p
in
open
liberty
guide
attribution
connector_1
a
pattern_1
web
component_1
by
open
liberty
be
license
under
cc
by
nd


copy
to
clipboard
prerequisite
back
to
text
nice
work
where
to
next
what
do
you
think
of
this
guide
thank
you
for
your
feedback
close
thank
you
for
your
feedback
would
you
to
open
an
issue
in
technology_5
yes
no
thank
you
what
could
make
this
guide
quality_attribute_5
raise
an
issue
to
connector_22
feedback
create
a
connector_23
connector_data_9
to
contribute
to
this
guide
need
help
ask
a
question
on
technology_19
overflow
open
liberty
star
our
repo
on
technology_5
star
where
to
next
create
a
pattern_1
web
component_1

minute
connector_1
a
pattern_1
web
component_1
with
technology_20

minute
an
open_source
project
â©
copyright
corp


|
privacy
requirement_4
|
license
|
logo
doc
support
