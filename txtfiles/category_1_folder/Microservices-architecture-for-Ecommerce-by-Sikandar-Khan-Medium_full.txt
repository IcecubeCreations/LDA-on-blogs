pattern_1
architecture
for
e
commerce
|
by
sikandar
khan
|
mediumget
unlimited
accessopen
in
apphomenotificationslistsstorieswritesikandar
khanfollownov

2018·3
min
readmicroservices
architecture
for
e
commercein
e
commerce
your
be
your
company“experience
be
the
name
everyone
give
to
their
mistake
”
—
oscar
wildephoto
by
perry
grone
on
unsplashcase
study
cadenza
a
subscription
base
e
commerce
platformin
the
early
stage
of
cadenza
tech
requirement_1
component_1
we
have
entire
component_2
on
mean
technology_1
in
the
monolithic
environment
we
have

component_3
almost
in
different
category
such
a
component_4
requirement_2
technology_2
requirement_2
etc
and
incur
inr

per
month
on
technology_3
requirement_3
component_2
the
coding_keyword_1
problem
be
the
repetitive
component_1
crash
a
well
a
huge
cost
then
we
have
an
opportunity
to
explore
pattern_1

i
highly
recommend
this
to
next
gen
developer

pattern_1
definition
linkthe
pattern_2
approach
encourage
requirement_1
to
become
more
agile
with
cross
functional
team
responsible
for
each
component_5
pattern_2
architecture
connector_data_1
the
component_1
a
a
set
of
loosely
couple
collaborate
component_5
pattern_1
be
inherently
quality_attribute_1
component_6
connector_1
such
a
requirement_4
connector_data_2
a
in
spotify
or
netflix
can
allow
you
to
adapt
and
test
idea
quickly
and
build
strong
ownership
feel
across
the
team
most
large
quality_attribute_2
web
sit
include
netflix
and
ebay
have
quality_attribute_3
from
a
monolithic
architecture
to
a
pattern_2
architecture
cadenza
first
problem
component_7
crasheswe
start
the
modularising
complete
cadenza
tech
component_1
a
follow
a
component_4
requirement_2
b
technology_2
managementc
order
requirement_2
technology_4
plan
requirement_2
e
payment
managementf
algorithmscadenza2

beta
architectureeach
category
have
almost

or

apis
by
adopt
micro
component_5
pattern_3
we
have
great
extent
advantage
such
a

have
an
opportunity
to
component_8
independent
of
programming
technology_5
&
component_9
eliminate
any
long
term
commitment
to
a
technology_6
technology_1
we
connector_2
payment
component_8
in
technology_7
and
component_4
requirement_2
in
nodejs

multiple
team
work
in
parallel
frontend
backend
and
component_10
devops
team
work
in
parallel
team
love
cod
pattern_1
a
they
be
quite
fine
grain
version
debug
be
easy
peasy

enable
the
continuous
delivery
and
deployment
of
large
complex
component_1
cadenza
second
problem
huge
costsmicroservices
can
be
easily
component_11
in
the
requirement_3
technology_8
environment
or
any
other
component_10
component_2
and
can
be
very
easily
quality_attribute_2
a
each
component_5
can
live
on
it
own
component_10
s
vps
e
etc
when
divide
a
monolithic
component_2
into
small
piece
each
of
them
should
be
easy
to
quality_attribute_4
in
an
automatic
way
nowadays
we
see
two
coding_keyword_1
concept
that
facilitate
such
a
component_12
—
containerization
and
serverless
architecture
by
use
technology_8
we
be
able
to
easily
run
our
pattern_2
orient
component_13
on
our
developer
component_14
and
then
run
the
same
setup
on
pre
and
production
component_10
connector_3
moreserverless
faa

a
a
component_5
be
easy
to
and
connector_4
and
it
allow
you
to
reduce
the
time
to
requirement_5
it
also
allow
u
to
reduce
cost
and
to
quality_attribute_2
easily
connector_3
morecadenza2

beta
architecture
diagramwe’ve
use
both
conventional
component_15
for
nodejs
technology_7
technology_9
component_3
deployment
and
technology_3
lambda
for
serverless
apis
this
hybrid
architecture
help
u
in
cut
down
huge
cost
monthly
requirement_3
recur
cost
reduce
from
40k
to
~7k
this
be
one
of
the
big
achievement
at
cadenza
cadenza
tech
quality_attribute_2
to
serve
10k+
concurrent
component_4
adaptation
of
pattern_4
component_9
strategy
be
one
the
important
decision
in
reduce
the
cost
soon
i
will
be
connector_5
on
it
happy
exploration

—
grow
—
glowreach
me
at
linkedin
more
from
sikandar
khanfollowhead
of
engineering
||
requirement_3
and
quality_attribute_1
component_16
specialistlove
podcast
or
audiobooks
on
the
go
with
our
component_7
try
knowableabouthelptermsprivacyget
the
appget
startedsikandar
khan149
followershead
of
engineering
||
requirement_3
and
quality_attribute_1
component_16
specialistfollowmore
from
mediumkalpit
sharmainfaun
publicationmonolithic
architecturekang
the
creatorgoogle
requirement_3
with
pattern_5
headersandrea
mucciinminos
frameworkmicroservices
online
boutique
—
part
2neeraj
kushwahadebugging
technology_3
technology_10
origin
requestshelpstatuswritersblogcareersprivacytermsaboutknowable
