jakarta
ee

jsoncollectors
and
the
oop
alternative
home
project
hire
me
about
jakarta
ee

jsoncollectors
and
the
oop
alternative
oct


•
tag
oop
jakartaee
refactoring
•
by
amihaiemil
•

with
technology_1
ee

jakarta
ee

there
come
a
version
of
the
technology_2
p
technology_2
component_1
specification
namely
version


one
of
the
thing
this
version
bring
be
the
utility
jsoncollectors
this
be
ok
it
provide
some
useful
collector
to
manipulate
collection
of
jsonvalues
and
turn
them
into
jsonobjects
or
jsonarrays
let’s
see
how
it
work
and
dive
into
a
more
oop
alternative
i’m
go
to
examine
jsonarray
but
this
apply
to
a
well
and
probably
to
the
others
too
tom
&
jerry
a
mouse
in
the
house
by
william
hanna
and
joseph
barbera
straight
to
the
point
with
technology_2
p


you
can
turn
a
collection
of
jsonvalue
into
a
jsonarray
this
connector_data_1
jsonvalue
requirement_1
=
jsonarray
=
requirement_1
connector_1
connector_2
jsoncollectors
tojsonarray
if
you
work
with
technology_1
ee

and
maybe
technology_1

instead
of
technology_1

you
would
have
to
do
the
follow
connector_data_1
jsonvalue
requirement_1
=
jsonarraybuilder
builder
=
technology_2
createarraybuilder
for
jsonvalue
requirement_1
requirement_1
{
builder
=
builder

requirement_1
}
jsonarray
=
builder
build
very
beautiful
and
handy
actually
i’m
not
the
only
one
connector_3
these
example
you
can
already
find
a
few
at
a
first
search
what
i
didn’t
see
however
be
an
oop
approach
the
snippet
above
answer
the
question
“how
do
we
put
these
requirement_1
into
an

”
instead
of
answer
the
question
“how
do
we
make
these
requirement_1
act
a
an

”
it’s
a
very
important
difference
in
the
current
approach
you
have
a
few
issue
duplication
everywhere
you
need
an

you
will
see
those
few
line
of

chain
of
connector_data_2

if
you
don’t
want
to
duplicate
those
line
of

you
have
to
put
them
in
a
somewhere
which
probably
won’t
be
unit
test
couple
if
technology_1
ee

come
and
connector_4
the
jsoncollectors
technology_3
or
any
of
the
connector_1
or
connector_2
connector_4
in
the
future
you
will
have
to
find
all
the
usage
and
edit
your

you’ll
say
that
this
be
a
trivial
example
and
it’s
nothing
to
worry
about
because
there’s
very
little
chance
for
something
to
break
in
the
future
and
you
be
right
but
this
be
a
classic
requirement_2
of
“let’s
turn
x
into
y”
rather
than
“let’s
a
implementation
of
y
base
on
x”
which
would
be
the
correct
connector_data_3
orient
way
so
i
ask
myself
why
didn’t
the
technology_2
p
guy
think
of
this
why
do
they
struggle
to
connector_5
collector
and
other
rocket
stuff
instead
of
simply
provide
the
follow
implementation
of
jsonarray
package
javax
technology_2
**
*
jsonarray
from
a
collection
of
jsonvalues
*
this
be
an
alternative
to
have
a
somewhere
which
connector_data_4
the
builder
*
and

a
jsonarray
*
*
instead
of
have
the
follow
in
your

*
*
jsonarray
arr
=
buildarray
value1
value2
value3
*
*
you
will
have
the
follow
*
*
jsonarray
arr
=
collectedjsonarray
value1
value2
value3
*
final
collectedjsonarray
connector_6
jsonarray
{
**
*
connector_2

*
private
final
jsonarray
connector_2
collectedjsonarray
jsonvalue
requirement_1
{
jsonarraybuilder
builder
=
technology_2
createarraybuilder
for
jsonvalue
requirement_1
requirement_1
{
builder
=
builder

requirement_1
}
this
connector_2
=
builder
build
}
@override
getjsonobject

i
{
this
connector_2
getjsonobject
i
}
@override
jsonarray
getjsonarray

i
{
this
connector_2
getjsonarray
i
}
the
other
of
jsonarray
delegate
to
this
connector_2
}
i
connector_7
this
myself
it
be
quality_attribute_1
component_2
compliant
and
doesn’t
care
who
be
the
technology_2
p
technology_4
yet
it
be
painful
to
connector_7
because
you
have
to
connector_5
all
those
and
delegate
the
work
to
this
connector_2
then
there
should
be
some
unit
test
for
it
i
believe
that
this
should
have
be
ship
with
technology_2
p


it
be
a
mere
wrapper
it
have
a
few
line
in
the
ctor
but
it
spar
our
component_3
of
couple
and
untested

what
do
you
think
how
would
you
have
connector_5
it
connector_8
tweet
submit
on
hackernews
use
syntax
highlight
in
your

to
make
them
more
readable
please
enable
technology_5
to
pattern_1
the

powered
by
disqus

powered
by
disqus
©
amihaiemil
technology_6


illustrate
by
andreea
last
update
at
