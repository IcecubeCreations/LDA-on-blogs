how
to
organize
clean
architecture
to
modular
pattern_1
in
minute
|
hackernoonstart
writingnotificationssee
morestart
writingreaddiscover
sort
by
all
topicstop
storiestechbrieflive
reactionsnoonificationsupertagbookssloggingall
newslettersrandom
storydaily
archivetechall
topic
click
here
aiblockchaincybersecuritydata
sciencedecentralizationfinancefuturismgaminghardware
reviewsmachine
learningmediaprogrammingengineeringroboticsvirtual
realitysoftwareapisarchitectureccodingengineeringjavajavascriptnodejsopen
sourcephpprogrammingpythonreactrubysqlswifttop
storieslatesthow
to
make
a
great
look
even
if
you
can’t
designalexa
technology_1
be
dead
f*ck
the
alternative
an
intro
to
shamir’s
secret
connector_1
cryptographic
algorithmhow
uber
u
requirement_1
to
improve
deliveriesshould
online
component_1
have
union
writewriterbefore
click
submitsubmit
a
draftsubmit
a
draft
a
a
brandwriting
guidesreach
more
peopleyour
connector_data_1
your
adrepublishing
guidebacklinks
guidesearn
cryptocontestsall
contestsgaming
metaverse
contestdecentralized
internet
contestholiday
gear
giveawaynoonieswriting
promptsfind
connector_2
prompt
herefull
connector_data_2
of
prompt
interviewsnoonie
and
startup
winner
or
runner
upinterview
for
your
opinion
on
anythinginterview
for
startup
nomineesinterview
for
noonies
nomineeswhat
be
the
metaverse
interviewdecentralized
interviewlearnself
pace
coursesangular
masterclass
🔗cybersecurity
🔗data
science
bootcamp
🔗java
masterclass
🔗javascript
advance
🔗machine_learning
a
z
🔗python
zero
to
hero
🔗web
development
bootcamp
🔗web
development
mastery
🔗tech
deep
divesagileartificial
intelligencecloud
computingdefidevopsentrepreneurshipethereummarketingnftsnodejsopen
sourcereactsoftware
developmentweb
developmentbuild
skillzzapply
psychology
of
colorsauto
generate
graphicsbuild
frontend
for
ethereum
dappsbuild
a
private
blockchaincreate
generative
art
with
pythonchoose
the
right
technology_2
containerget
feature
on
technology_3
hunt
without
huntergo
serverless
with
awshack
smart
contractshost
your
git
component_2
on
raspberry
piimplement
qa
properlyinsert
binary
tree
in
rustlearn
anythingmeasure
technical
debtprotect
your
with
gulpwrite
nft
smart
contractsaboutcompanycontact
usabout
uscareerspodcastjoin
and
full
connector_data_2
of
social
accountsregular
component_3
updatespeopleceocoomeet
the
teaminvestorsexternal
tech
expertsannual
noonies
awardsshareholder
updatessoftware
by
hackernoonproduct
updatessloggingannual
startup
awardsremove
paywalled
story
from
searchhacker
noon
be
a
gifmobile
component_4
come
soonhelpwriterswe
give
all
the
faqsstory
reject
account
settingshow
to
use
our
editorcontactvisitorswhat
the
faq
sign
upgetting
startedhow
to
navigate
our
sitecontactpartnerpartnershipscreate
a
connector_2
contestmedia
kitwrite
a
a
requirement_2
or
brandsitewide
yellow
billboardnewsletter
adsniche
marketingblog
for
the
corporate
soulthousands
of
customersshophackernoon
merchthe
shirtthe
beaniethe
joggersthe
pb
style
tote
bagspiral
notebookscolorful
masksrainbow
laptop
sleevesand
hn
stickerstech
co
directorycompany
pagesread
about
this
featurebrowse
all
pagesrequest
a
tech
requirement_3
pagebrowse
requirement_3
listfull
startup
listgiantsbrowse
all
companiesamazonapplecoinbaseintelmicrosoftteslacompany
liststartupsbrowse
top
startupsafricaasiaeuropenorth
and
central
americaoceaniasouth
americabrowse
all
startupsreaddiscover
sort
by
all
topicstop
storiestechbrieflive
reactionsnoonificationsupertagbookssloggingall
newslettersrandom
storydaily
archivetechall
topic
click
here
aiblockchaincybersecuritydata
sciencedecentralizationfinancefuturismgaminghardware
reviewsmachine
learningmediaprogrammingengineeringroboticsvirtual
realitysoftwareapisarchitectureccodingengineeringjavajavascriptnodejsopen
sourcephpprogrammingpythonreactrubysqlswifttop
storieslatesthow
to
make
a
great
look
even
if
you
can’t
designalexa
technology_1
be
dead
f*ck
the
alternative
an
intro
to
shamir’s
secret
connector_1
cryptographic
algorithmhow
uber
u
requirement_1
to
improve
deliveriesshould
online
component_1
have
union
writewriterbefore
click
submitsubmit
a
draftsubmit
a
draft
a
a
brandwriting
guidesreach
more
peopleyour
connector_data_1
your
adrepublishing
guidebacklinks
guidesearn
cryptocontestsall
contestsgaming
metaverse
contestdecentralized
internet
contestholiday
gear
giveawaynoonieswriting
promptsfind
connector_2
prompt
herefull
connector_data_2
of
prompt
interviewsnoonie
and
startup
winner
or
runner
upinterview
for
your
opinion
on
anythinginterview
for
startup
nomineesinterview
for
noonies
nomineeswhat
be
the
metaverse
interviewdecentralized
interviewlearnself
pace
coursesangular
masterclass
🔗cybersecurity
🔗data
science
bootcamp
🔗java
masterclass
🔗javascript
advance
🔗machine_learning
a
z
🔗python
zero
to
hero
🔗web
development
bootcamp
🔗web
development
mastery
🔗tech
deep
divesagileartificial
intelligencecloud
computingdefidevopsentrepreneurshipethereummarketingnftsnodejsopen
sourcereactsoftware
developmentweb
developmentbuild
skillzzapply
psychology
of
colorsauto
generate
graphicsbuild
frontend
for
ethereum
dappsbuild
a
private
blockchaincreate
generative
art
with
pythonchoose
the
right
technology_2
containerget
feature
on
technology_3
hunt
without
huntergo
serverless
with
awshack
smart
contractshost
your
git
component_2
on
raspberry
piimplement
qa
properlyinsert
binary
tree
in
rustlearn
anythingmeasure
technical
debtprotect
your
with
gulpwrite
nft
smart
contractsaboutcompanycontact
usabout
uscareerspodcastjoin
and
full
connector_data_2
of
social
accountsregular
component_3
updatespeopleceocoomeet
the
teaminvestorsexternal
tech
expertsannual
noonies
awardsshareholder
updatessoftware
by
hackernoonproduct
updatessloggingannual
startup
awardsremove
paywalled
story
from
searchhacker
noon
be
a
gifmobile
component_4
come
soonhelpwriterswe
give
all
the
faqsstory
reject
account
settingshow
to
use
our
editorcontactvisitorswhat
the
faq
sign
upgetting
startedhow
to
navigate
our
sitecontactpartnerpartnershipscreate
a
connector_2
contestmedia
kitwrite
a
a
requirement_2
or
brandsitewide
yellow
billboardnewsletter
adsniche
marketingblog
for
the
corporate
soulthousands
of
customersshophackernoon
merchthe
shirtthe
beaniethe
joggersthe
pb
style
tote
bagspiral
notebookscolorful
masksrainbow
laptop
sleevesand
hn
stickerstech
co
directorycompany
pagesread
about
this
featurebrowse
all
pagesrequest
a
tech
requirement_3
pagebrowse
requirement_3
listfull
startup
listgiantsbrowse
all
companiesamazonapplecoinbaseintelmicrosoftteslacompany
liststartupsbrowse
top
startupsafricaasiaeuropenorth
and
central
americaoceaniasouth
americabrowse
all
startupswrite
to
earn
kucoin
$1m
programhow
to
organize
clean
architecture
to
modular
pattern_1
in
minute
by@thangchunghow
to
organize
clean
architecture
to
modular
pattern_1
in
minutesoriginally
publish
by
thang
chung
on
15th
reads0
how
to
organize
clean
architecture
to
modular
pattern_1
in
minute
how
can
we
combine
the
clean
architecture
and
modular
pattern_1
the
modular
approach
give
the
benefit
and
apply
clean
architecture
concept
on
it
clean
architecture
have
coin
since
by
uncle
bob
and
by
the
time
it
become
an
important
thing
in
the
architecture
world
we
can
see
technology_4
use
it
by
combination
with
pattern_2
pattern_1
to
build
architecture
for
the
requirement_4
component_5
we
need
to
make
sure
that
the
should
be
independent
enough
so
that
it
can
be
work
by
the
sole
developer
in
different
team
@thangchungthang
chungsoftware
developer
and
architectyou’re
still
concern
about
what
be
the
modern
architecture
at
the
moment
you’re
search
around
to
the
best
architecture
to
apply
for
your
project
go
deeply
into
this
it’s
go
to
help
you
answer
by
your
own
in
term
of
development
the
architecture
of
project
be
really
important
for
the
sake
of
quality_attribute_1
and
re
quality_attribute_2
during
many
project
that
i
have
work
the
architecture
ensure
that
the
that
you
build
have
a
basis
of
the
skeleton
it
the
component_6
or
the
background
of
a
house
upon
on
that
we
have
a
freedom
to
build
anything
we
want
the
question
always
in
my
head
these
day
be
how
can
we
combine
the
clean
architecture
and
modular
pattern_1
i
have
do
some
of
the
experiment
in
the
and
finally
i
decide
to
connector_3
it
out
in
this
the
purpose
be
really
straightforward
for
connector_1
what
i
have
and
more
what
i
connector_4
from
feedback
this
be
base
on
my
experience
in
development
and
how
the
modular
approach
give
the
benefit
and
apply
clean
architecture
concept
on
it
modular
patternsthe
modular
approach
for
the
architecture
be
also
a
topic
that
we
have
talk
a
lot
in
our
requirement_3
back
to
year
ago
i
work
on
the
big
project
that
have
a
lot
of
people
involve
and
in
that
time
we
have
organize
the
architecture
to
the
modular
approach
and
by
the
time
we
that
with
the
modular
we
can
cut
the
large
monolith
into
many
vertical
small
monolith
and
make
the
team
work
more
easily
because
each
team
only
need
to
focus
on
the
that
they
work
could
anyone
remember
about
the
conflict
in
the
big
project
could
you
spend
the
half
of
day
or
more
to
merge
the
cod
it
be
really
a
nightmare
isn’t
it
so
in
the
modular
approach
we
need
to
make
sure
that
the
should
be
independent
enough
so
that
it
can
be
work
by
the
sole
developer
in
different
team
it
should
be
in
logical
design
style
and
give
u
strong
point
ashelp
our
component_7
be
able
to
quality_attribute_3
quality_attribute_4
quality_attribute_5
and
quality_attribute_6
break
large
monolith
technology_5
into
a
quality_attribute_7
composite
of
collaborate
in
monolith
style
help
newcomer
to
easy
to
understand
the
requirement_2
feature
and
the
requirement_5
of
the
component_7
because
it
be
small
enough
open
the
door
to
migrate
into
the
pattern_3
architecture
if
need
but
it
be
not
easy
to
adopt
it
from
my
point
of
pattern_4
clean
architecturethe
clean
architecture
have
coin
since
by
uncle
bob
and
by
the
time
it
become
an
important
thing
in
the
architecture
world
we
can
see
technology_4
use
it
by
combination
with
pattern_2
pattern_1
to
build
the
architecture
for
the
requirement_4
component_5
a
couple
of
out
there
also
propose
to
use
clean
architecture
for
the
web
component_4
in
early
this
year
uncle
bob
publish
the
book
name
“clean
architecture
a
craftsman’s
guide
to
connector_data_3
and
design”
if
you
have
never
connector_5
that
book
before
i
highly
recommend
you
to
take
a
look
at
it
this
book
mention
a
lot
of
best
practice
when
use
solid
design
pattern_1
and
some
of
tip
and
trick
in
deployment
work
a
well
a
bit
overview
about
the
clean
architecture
if
you
have
already
please
skip
this
and
jump
over
to
the
implementation
section
accord
to
clean
architecture
we
need
to
ensure
some
of
the
important
point
below1
independent
of
technology_6
the
architecture
do
not
quality_attribute_8
on
the
existence
of
some
technology_7
of
feature
lade
this
allow
you
to
use
such
technology_6
a
technology_8
rather
than
have
to
cram
your
component_7
into
their
limit
constraint
quality_attribute_9
the
requirement_2
rule
can
be
test
without
the
ui
component_8
web
component_2
or
any
other
external
element
independent
of
ui
the
ui
can
connector_6
easily
without
connector_6
the
rest
of
the
component_7
a
web
ui
could
be
replace
with
a
console
ui
for
example
without
connector_6
the
requirement_2
rule
independent
of
component_8
you
can
swap
out
technology_9
or
technology_10
component_2
for
mongo
bigtable
technology_11
or
something
else
your
requirement_2
rule
be
not
bind
to
the
component_8
independent
of
any
external
agency
in
fact
your
requirement_2
rule
simply
don’t
anything
at
all
about
the
outside
world
and
it
follow
strictly
the
diagramimplementation“talk
be
cheap
show
me
the
”
—
linus
torvaldslet
start
off
with
the
story
today
any
project
have
to
analyze
and
ask
the
requirement_6
about
what
they
want
to
do
for
their
component_7
and
what
they
need
for
their
component_7
to
act
for
they
will
give
u
bunch
of
use
requirement_7
or
component_9
story
if
there
be
an
agile
project
and
the
final
step
we
will
have
to
draw
the
use
requirement_7
diagram
for
those
people
that
could
not
catch
what
i
say
so
far
i
would
to
analyze
an
example
in
the
component_10
domain
say
we
want
to
build
the
that
have
some
of
the
feature
connector_5
the
see
the
of
this
some
of
the
in
the
and
we
definitely
have
a
way
to
crud
action
on
and
beside
of
that
we
also
need
to
login
into
the
component_7
before
we
can
modify
the
and
base
on
the
requirement
of
feature
for
this
component_4
we’re
go
to
end
up
with
the
use
requirement_7
diagram
belownow
be
the
time
i
will
show
you
how
can
i
apply
the
modular
pattern_1
to
this
example
if
you
look
at
the
diagram
above
you
will
notice
that
we
only
have
thing
for
manage
be
pattern_5
and
connector_7
some
idea
from
domain
drive
design
tackle
complexity
in
the
heart
of
and
connector_8
domain
drive
design
book
be
the
quality_attribute_10
start
point
from
my
point
of
pattern_4
in
this
requirement_7
be
bind
component_11
pattern_1
i
separate
my
component_4
domain
out
to
the
connector_9
control
component_11
component_11
and
component_11
i
divide
it
into
bind
component_11
because
my
domain
knowledge
that
it
will
be
different
from
others
due
to
different
domain
expert
but
at
least
it
need
to
sort
out
the
requirement_2
need
put
them
together
and
we
have
a
diagram
likelets
explain
a
bit
about
the
diagram
above
the
connector_9
control
component_11
with
the
red
color
be
for
pattern_5
and
pattern_6
connector_data_4
the
component_11
fill
with
green
color
be
for
requirement_8
include
set
up
the
status
assignment
and
theme…
the
third
one
be
the
component_11
which
manage
it
own
and
tag
a
you
can
see
the
component_11
have
the
relationship
with
others
for
more
connector_data_5
of
how
can
we
design
the
bind
component_11
root
aggregate
please
come
to
quality_attribute_11
aggregate
design
you
will
the
huge
of
useful
thing
you
have
my
promise
too
much
for
the
theory
now
jump
into
the
due
to
the
limitation
of
this
i
only
can
show
you
one
bind
component_11
and
i
would
to
choose
the
component_11
because
i
think
this
be
the
most
interest
in
the
rest
you
can
have
a
look
at
my
technology_12
cod
—
the
connector_10
give
you
at
the
end
of
this
so
far
some
of
you
will
question
that
what
the
heck
clean
architecture
involve
into
this
don’t
panic
me
show
you
the
project
connector_data_3
then
you
have
the
rest
be
it
clean
for
connector_data_3
the
project
by
the
time
i
find
out
that
the
quality_attribute_12
connector_data_3
do
not
only
help
comer
easy
to
catch
up
and
work
on
it
but
also
help
reader
easy
to
figure
out
what
we
want
to
do
and
navigate
through
the
large
base
for
those
people
want
to
run
this
example
project
i
use
technology_13
core
to
implementation
so
that
you
need
to
install
at
least
the
run
time
environment
now
i
start
to
explain
about
the
connector_data_3
above
first
we
have
the
technology_6
folder
in
the
diagram
that
contain
all
the
stuff
relate
to
necessary
technology_14
for
the
project
remember
that
we’re
go
to
avoid
use
the
abstraction
in
our
but
use
the
composition
composition
over
inheritance
in
oop
the
blogcore
core
will
not
need
to
quality_attribute_8
on
any
technology_6
or
technology_7
but
on
technology_13
technology_15
definitely
some
of
the
requirement_7
we
connector_data_6
it
vanilla
additionally
we
have
project
blogcore
infrastructure
blogcore
infrastructure
aspnetcore
and
blogcore
infrastructure
efcore
that
will
quality_attribute_8
on
entityframeworkcore
aspnetcore
and
others
technology_7
technology_16
technology_17
fluentvalidation
mediatr…second
component_12
folder
in
the
middle
of
the
diagram
we
use
it
for
put
the
component_13
project
there
you
can
see
i
have
component_13
one
for
the
component_14
blogcore
technology_18
and
another
for
the
single
component_15
component_4
blogcore
component_5
third
migration
folder
be
use
to
do
the
migrate
work
in
this
requirement_7
we
migrate
connector_data_7
for
the
connector_9
control
component_11
component_11
and
component_11
we
can
choose
to
migrate
use
component_16
technology_6
migration
and
seed
connector_data_7
for
them
otherwise
you
can
also
use
the
t
technology_19
script
to
do
the
migration
it
be
up
to
you
i
don’t
say
which
one
be
quality_attribute_10
than
others
finally
we
have
the
folder
that
contain
the
heart
of
this
component_4
we
have
divide
it
into
bind
component_11
folder
here
and
make
our
architecture
more
clearly
each
bind
component_11
have
sub
project
e
g
blogcore
postcontext
and
blogcore
postcontext
core
blogcore
postcontext
core
only
contain
domain
connector_data_8
contract
and
which
be
really
quality_attribute_10
for
another
project
reference
the
rule
be
if
we
have
another
that
want
to
use
some
of
the
connector_data_9
so
that
it
should
reference
the
name
core
and
to
the
inside
this
project
only
quality_attribute_8
on
the
in
another
this
will
make
loose
couple
for
those
we
will
connector_4
a
lot
of
benefit
with
this
approach
see
the
bind
component_11
connector_data_3
in
the
detailsi
think
we
should
deep
dive
into
some
of
the
to
understand
more
about
how
can
we
connector_11
the
clean
architecture
with
the
modular
pattern_1
for
this
project
we
have
technology_20
component_16
that
act
root
aggregate
in
the
component_11
asthen
we
have
the
postgenericrepository
cswe
need
to
create
the
technology_21
for
the
postcontext
technology_20
asin
clean
architecture
the
use
requirement_7
be
very
important
and
should
be
design
very
carefully
in
my
project
i
name
it
a
listoutpostbybloginteractor
csafter
component_17
the
requirement_2
requirement_7
for
the
bind
component_11
we
need
to
aggregate
some
of
the
connector_data_7
relate
to
the
connector_9
control
bind
component_11
and
in
this
requirement_7
we
connector_4
the
author
connector_data_5
of
it
and
use
the
iuserrepository
to
connector_4
the
author’s
detail
connector_data_5
so
that
we
introduce
another
connector_12
listoutpostbyblogpresenter
csand
we
need
to
have
a
place
to
register
these
connector_13
connector_data_8
so
the
connector_13
injection
come
into
play
and
we
use
technology_16
in
this
project
the
idea
be
the
will
register
all
the
connector_13
it
own
yes
that’s
enough
then
we
only
need
to
introduce
the
component_14
for
what
we
didrecaptoday
i
have
walk
you
through
the
journey
of
how
can
we
make
the
modular
work
well
in
the
clean
architecture
we
at
least
what
be
modular
what
it’s
actually
important
we
run
through
some
of
the
overview
of
clean
architecture
and
some
of
the
strong
point
of
it
a
well
and
the
last
but
not
least
we
how
to
connector_11
it
use
technology_13
core
what
be
not
cover
in
this
be
the
connector_data_7
flow
synchronize
between
bind
component_11
unit
test
deployment
for
the
clean
architecture…i’m
go
to
connector_3
more
about
them
if
you
guy
interest
in
drop
the
connector_data_10
in
the
component_18
below
the
component_19
for
this
can
be
find
at
technology_22
technology_23
technology_1
thangchung
corethanks
for
connector_5
if
you
enjoy
this
be
sure
to
click
👏
symbol
below
so
others
will
see
it
0by
thang
chung
@thangchung
developer
and
architectonly
god
and
i
what
i
m
do
commentssignup
or
login
to
join
the
discussionenter
the
debug
connector_2
contesttags#clean
architecture#aspnetcore#modular#software
architecture#microsoftrelated
storieshow
to
find
the
stinky
part
of
your
part
xix
publish
at
by
mcsee
#code
smell
run
chromecast
on
surfacepublished
at
by
digitforpc
#use
netflix
with
chromecast
optimize
component_8
with
opentelemetry
publish
at
by
rahulra1
#debugging
how
a
unicorn
startup
in
japan
leverage
the
power
of
microservicespublished
at
by
gong023
#software
architecture
why
you
should
build
your
next
fintech
component_5
in
pythonpublished
at
by
rohansinghh
#fintech
requirement_4
component_5
development
join
hackernoon
aboutcareerscontactcookiesemailshelpprivacytermsreadarchiveleaderboardnoonificationsignuptech
brieftech
tagstop
storieswritedistributioneditor
tipsguidelinesnew
storyperkspromptswhy
writepartnerbillboardbrand
publishingcase
studiescontestsniche
marketingnewsletterwriting
conteststhe
hackernoon
newsletterquality
weekly
connector_14
about
technology_24
infiltrate
everythingsubscribefree
yes
i
agree
to
connector_15
about
tech
eat
the
world
