
important
thing
you
need
to
before
you
connector_1
a
refinitiv
real
time
component_1
|
refinitiv
developer
loading
developer
developer
component_2
component_2
use
requirement_1
use
requirement_1


technology_1
technology_1
video
video
q&a
q&a
thankyouerrormodal
cancel
success
form
thank
you
thank
you
for
your
feedback
an
error
occur
support
ticket
number
your
support
ticket
have
be
create
and

to
you
we
will
review
your
connector_data_1
and
connector_2
back
to
you
shortly
via

please
try
again
late
the
attach

s
be
not
connector_3
because
of
invalid

s
close
home
catalog

important
thing
you
need
to
before
you
connector_1
a
refinitiv
real
time
component_1

important
thing
you
need
to
before
you
connector_1
a
refinitiv
real
time
component_1
olivier
davant
technology_2
manager
technology_2
manager
overview
it
be
a
matter
of
fact
that
develop
component_3
for
refinitiv
real
time
feed
&
distribution
component_4
be
easy
than
ever
this
be
due
to
a
large
extent
to
the
ease
of
use
of
the
requirement_2
connector_data_1
component_5
that
be
one
of
the
two
component_2
quality_attribute_1
a
part
of
the
refinitiv
real
time
technology_3
connector_4
this
to
find
out
more
about
this
however
even
if
this
component_5
be
easy
to
use
than
any
other
component_5
of
the
previous
generation
you
still
need
to
master
a
number
of
concept
before
can
you
start
build
your
first
component_1
these
concept
be
explain
in
the
exhaustive
documentation
set
that
come
with
the
refinitiv
real
time
technology_3
but
a
everyone

hundred
of
component_6
of
document
be
rarely
the
first
choice
when
developer
start
with
a
technology_4
for
this
reason
i
think
that
it
would
be
beneficial
to
summarize
these
concept
in
this

i
hope
it
will
be
of
interest
to
you
and
that
it
will
help
you
to
connector_2
start
with
refinitiv
real
time
component_1
development
content
refinitiv
real
time
component_7
connector_5
a
consolidate
global
connector_data_2
fee
the
refinitiv
real
time
component_7
be
quality_attribute_2
via
refinitiv
real
time
distribution
component_8
a
well
a
requirement_3
base
delivery
the
refinitiv
real
time
ecosystem
be
make
up
of
pattern_1
component_9
and
hybrid
component_3
refinitiv
real
time
component_3
use
the
pattern_2
paradigm
connector_data_2
connector_data_3
be
uniquely
identify
by

element
name
type
and
component_10
you
can
choose
from
several
different
component_2
to
build
your
component_1
refinitiv
real
time
component_2
be
pattern_3
orient
refinitiv
real
time
component_2
be
pattern_4
be
describe
by
dictionary
you
be
not
alone
–
the
force
not
be
with
you
but
the
refinitiv
developer
be

refinitiv
real
time
component_7
connector_5
a
consolidate
global
connector_data_2
fee
skip
this
section
refinitiv
real
time
be
a
low
quality_attribute_3
consolidate
global
connector_data_2
fee
that
can
connector_5
full
tick
depth
of
requirement_4
connector_data_2
this
global
consolidate
fee
connector_6
your
component_3
to
thousand
of
exchange
and
otc
requirement_5
requirement_4
and
this
coverage
be
grow
all
the
time
the
refinitiv
real
time
component_10
can
be
connector_7
either
via
a
quality_attribute_4
refinitiv
real
time
distribution
component_8
formerly

a
trep
or
via
the
requirement_3
base
refinitiv
real
time
optimize
component_10
rrto
use
the
quality_attribute_4
distribution
component_8
it
be
possible
to
connector_7
the
connector_data_2
a
a
full
tick
conflate
and
or
delay
component_10
a
per
your
need
and
requirement
the
requirement_3
base
rrto
component_10
be
currently
connector_5
a
a
bandwidth
optimize
requirement_6
component_10
although
there
be
discussion
around
provide
a
full
tick
component_10
via
the
requirement_3
in
the
future

–
refinitiv
real
time
component_7
be
quality_attribute_2
via
the
refinitiv
real
time
distribution
component_8
a
well
a
requirement_3
base
delivery
skip
this
section
the
refinitiv
real
time
connector_data_2
can
be
connector_5
to
your
component_3
either
via
the
requirement_3
base
refinitiv
real
time
optimize
component_10
or
via
a
quality_attribute_4
refinitiv
real
time
distribution
component_4
rtds
the
rtds
give
you
connector_8
to
the
real
time
connector_data_2
fee
and
optionally
to
other
vendor
connector_data_2
feed
you
can
even
use
rtds
to
publish
your
own
connector_data_2
and
connector_data_2
component_11
the
delivery
be
chosen
by
requirement_4
connector_data_2
team
generally
quality_attribute_5
on
criterion

the
use
requirement_1
do
you
want
to
connector_7
or
to
publish
connector_data_2
or
both
do
you
need
fault
tolerance
do
you
want
to
be
able
to
run
several
instance
of
your
component_1
prod
backup
and
dev
the
number
of
component_3
and
component_12
that
connector_9
to
the
component_13
connector_data_2
quality
you
need
full
tick
conflate
and
or
delay
the
quality_attribute_2
bandwidth
to
connector_9
to
the
component_13
…

the
refinitiv
real
time
distribution
component_8
rtds
can
support
pattern_1
component_9
and
hybrid
component_3
skip
this
section
the
purpose
of
the
rtds
be
not
only
to
connector_7
refinitiv
real
time
connector_data_2
but
optionally
publish
your
own
connector_data_2
for
others
to
connector_7
indeed
the
rtds
component_14
be
highly
quality_attribute_6
real
time
connector_10
architecture
and
a
such
they
be
extensively
use
a
technology_5
enabling
an
ecosystem
of
financial
component_1
while
technology_6
connector_11
component_7
and
connector_12
a
certain
set
of
capability
e
g
content
workflow
etc
component_9
use
these
capability
for
their
specific
purpose
e
g
requirement_5
screen
component_1
black
component_15
algorithmic
requirement_5
component_1
etc
in
some
requirement_1
a
single
component_1
can
even
a
both
a
component_16
and
a
technology_6
to
leverage
and
requirement_7
to
exist
connector_data_2
e
g
a
computation
component_17
requirement_7

component_18
etc
under
this
approach
refinitiv
real
time
and
rtds
component_3
can
be
of
one
of
the

follow
type
component_16
component_1
component_3
that
subscribe
to
connector_data_2
connector_data_3
and
or
contribute
to
connector_data_2
connector_data_3
quality_attribute_2
on
the
component_13
note
the
concept
of
contribution
be
explain
in
the
section
below
technology_6
component_1
component_3
that
publish
connector_data_2
connector_data_3
and
optionally
connector_13
contribution
from
component_16
component_1
note
technology_6
component_3
can
be
either
interactive
or
non
interactive
please
consult
the
relate

to
more
on
this
subject
hybrid
component_1
component_3
that
be
able
to
connector_7
connector_data_2
from
the
real
time
component_13
transform
it
and
republish
it
for
other
connector_14
component_1

refinitiv
real
time
component_3
use
the
pattern_2
paradigm
skip
this
section
the
exchange
of
real
time
connector_data_2
between
rtds
and
refinitiv
real
time
component_3
rely
on
the
pattern_2
paradigm
on
refinitiv
real
time
component_8
this
paradigm
be
complete
by
the
concept
of
connector_data_2
contribution
publication
technology_6
component_3
publish
connector_data_2
item
aim
at
component_16
component_1
whenever
a
connector_data_2
item
connector_15
the
technology_6
keep
component_16
component_3
update
by
publish
the
requirement_7
on
the
real
time
component_13
subscription
component_16
component_3
subscribe
to
one
or
more
connector_data_2
connector_data_3
publish
by
one
or
more
technology_6
when
a
component_16
subscribe
to
a
connector_data_2
item
a
dedicate
connector_16
connector_17
be
open
between
the
component_13
and
the
component_1
for
this
specific
connector_data_2
item
then
the
component_13
us
this
connector_16
connector_17
to
keep
the
component_16
component_1
update
with
the
late
requirement_7
publish
by
the
technology_6
contribution
coding_keyword_1
optionally
a
component_16
component_1
can
issue
a
coding_keyword_1
connector_data_1
that
contain
a
connector_data_2
contribution
for
a
specific
item
publish
by
a
technology_6
when
it
connector_18
the
contribution
the
technology_6
have
the
option
to
either
positively
acknowledge
it
ack
or
negatively
acknowledge
it
nak
then
quality_attribute_5
on
it
internal
component_19
the
technology_6
can
connector_19
the
contribute
connector_data_2
to
an
external
component_8
or
re
publish
it
or
use
it
for
any
other
purpose
note
technology_6
component_3
must
be
programmatically
ready
to
connector_13
contribution
coding_keyword_1
connector_data_1
not
all
of
them
be
connector_11
to
do
so
these

concept
be
illustrate
below
for
the
contribution
part
the
technology_6
be
represent
re
publish
the
connector_data_2
this
be
an
example
a
explain
above
this
behavior
be
totally
dependent
on
the
technology_6
implementation
note
the
refinitiv
real
time
distribution
component_8
provide
additional
and
more
complex
mean
to
exchange
connector_data_2
between
component_3
e
g
private
connector_17
generic
messages…
these
advance
concept
be
not
cover
by
this

please
consult
the
real
time
technology_3
documentation
for
more
detail
on
these
topic

–
connector_data_2
connector_data_3
be
uniquely
identify
by

element
name
type
and
component_10
skip
this
section
a
connector_data_2
item
on
the
component_13
be
the
representation
of
a
real
world
financial
connector_data_4
the
quotation
of
a
requirement_4
or
it
order
book
because
these
real
world
financial
connector_data_5
can
be
of
different
type
quotation
order
book…
the
connector_data_2
connector_data_3
represent
them
use
different
connector_data_2
connector_data_6
and
have
different
behavior
for
example
the
quotation
of
the
airbus
requirement_4
requirement_5
on
euronext
paris
level

connector_data_2
be
represent
by
a
connector_data_2
item
connector_20
technology_7
pa
that
be
make
of
a
connector_data_7
of

these
contain
the
different
requirement_7
of
the
requirement_4
quotation
bid
ask…
the
order
book
for
the
same
airbus
requirement_4
level

connector_data_2
be
represent
by
another
connector_data_2
item
also
connector_20
technology_7
pa
that
be
make
of
several
connector_data_8
of

each
connector_data_7
of
represent
a
specific
order
of
the
book
the
of
one
connector_data_7
hold
the
different
requirement_7
of
an
order
requirement_8
size
side…
in
order
to
identify
connector_data_2
item
we
use
their
name
e
g
technology_7
pa
but
a
you
can
see
in
the
above
example
two
connector_data_2
connector_data_3
represent
different
real
world
connector_data_5
relate
to
the
same
requirement_4
have
the
same
name
for
this
reason
we
need
an
additional
element
to
distinguish
connector_data_2
connector_data_3
on
the
component_13
this
second
element
be
the
connector_data_2
item
type
that
can
be
for
example
mmt_market_price
for
a
level1
requirement_4
requirement_8
connector_data_2
or
mmt_market_by_order
for
a
full
order
book
a
third
element
be
also
require
because
connector_data_2
connector_data_3
with
the
same
name
and
the
same
type
can
potentially
be
publish
by
different
component_7
of
the
component_13
a
k
a
component_20
for
example
your
component_13
might
provide
multiple
component_7
publish
connector_data_2
from
different
vendor
this
be
the
reason
why
the
publish
component_10
must
also
be
indicate
to
completely
identify
a
connector_data_2
item
on
the
component_13
these
three
element
name
type
component_10
uniquely
identify
each
connector_data_2
item
of
the
real
time
component_13
you
need
to
indicate
them
whenever
you
subscribe
to
or
publish
any
connector_data_2
item
with
the
above
example
the
airbus
level

requirement_4
requirement_8
would
be
identify
by
name
technology_7
pa
type
mmt_market_price
component_10
elektron_dd
the
airbus
level

full
order
book
would
be
identify
by
name
technology_7
pa
type
mmt_market_by_order
component_10
elektron_dd
about
connector_data_2
item
name
the
financial
world
us
different
identification
cod
for
name
financial
instrument
quality_attribute_5
on
the
location
of
the
exchange
one
cod
component_8
or
another
be
use
one
can
mention
the
cusip
number
use
in
the
u
s
and
canada
the
sedol
cod
use
in
the
unite
kingdom
or
the
wertpapierkennnummer
use
in
germany
for
obvious
reason
a
consolidate
global
connector_data_2
fee
refinitiv
real
time
need
a
unify
cod
component_8
that
allow
identify
financial
instrument
requirement_5
all
over
the
world
a
a
financial
instrument
be
requirement_5
on
several
requirement_4
exchange
e
g
the
apple
inc
requirement_4
be
requirement_5
on
the
nasdaq
the
york
requirement_4
exchange
the
xetra…
this
cod
component_8
must
be
able
to
uniquely
identify
an
instrument
on
a
specific
exchange
this
be
not
a
characteristic
every
cod
component_8
offer
for
example
the
isin

that
be
an
international

doesn’t
distinguish
instrument
requirement_5
on
several
exchange
because
of
that
an
isin
alone
be
not
enough
to
identify
an
instrument
it
must
be
complete
by
an
exchange
to
be
quality_attribute_7
in
order
to
solve
the
issue
relate
to
the
global
name
and
the
uniqueness
of
name
reuters
define
it
own
cod
component_8
base
on
rics
reuters
instrument
cod
this
cod
component_8
be
international
and
uniquely
identify
instrument
requirement_5
on
different
exchange
for
example
race
mi
be
the
ric
refer
to
ferrari
be
requirement_5
on
the
milan
requirement_4
exchange
while
race
n
refer
to
the
same
requirement_4
requirement_5
on
the
york
requirement_4
exchange
it
be
important
to
note
that
refinitiv
real
time
component_21
and
their
component_2
be
instrument
agnostic
this
mean
that
your
component_3
component_16
and
technology_6
can
use
the
name
component_8
they
want
a
long
a
they
use
the
same
however
it
be
worth
mention
that
rics
be
largely
use
on
refinitiv
real
time
component_13
for
example
all
refinitiv
real
time
component_7
use
rics
about
connector_data_2
item
type
the
domain
type
of
a
connector_data_2
item
be
a
unique
number
that
define
the
connector_data_2
construct
the
semantics
and
the
behavior
of
the
item
because
different
connector_data_2
connector_data_3
relate
to
the
same
financial
instrument
can
use
the
same
name
it
be
important
to
indicate
the
domain
type
when
an
component_1
publish
or
subscribe
to
an
item
for
example
the
“6758
t”
ric
associate
with
the
mmt_market_price

domain
type
refer
to
the
level

“sony
corp
”
requirement_4
quotation
while
the
“6758
t”
ric
with
the
mmt_market_by_order

domain
type
refer
to
the
level

full
order
book
of
the
same
requirement_4
about
component_7
technology_6
component_3
publish
connector_data_2
connector_data_3
on
rtds
via
component_10
each
component_10
have
a
unique
name
and
a
unique
coding_keyword_2
a
component_10
can
provide
connector_data_2
connector_data_3
for
one
or
several
domain
type
it
be
important
to
note
that
several
component_7
can
provide
connector_data_2
connector_data_3
with
the
same
name
and
the
same
domain
type
but
not
necessarily
with
the
same
connector_data_2
for
this
reason
connector_data_2
connector_data_3
with
identical
name
and
domain
type
but
publish
via
different
component_7
must
be
consider
a
different
item
for
example
two
different
technology_6
could
publish
a
mmt_market_price

connector_data_2
item
with
the
same
ric
but
with
requirement_7
calculate
by
two
different
algorithm

–
you
can
choose
from
several
different
component_2
to
build
your
component_1
skip
this
section
in
order
to
publish
or
connector_7
connector_data_2
from
a
refinitiv
real
time
component_8
your
component_1
need
to
leverage
one
of
the
refinitiv
real
time
apis
quality_attribute_5
on
the
technology_8
and
the
technology_9
you
use
to
build
it
several
option
be
at
your
disposal
either
you
use
the
real
time
technology_3
and
it
technology_10
that
connector_12
the
two
follow
apis
the
requirement_2
transport
component_5
eta
this
be
a
low
level
component_5
quality_attribute_2
for
technology_11
and
technology_12
technology_13
it
have
be
design
for
component_3
demand
very
high
quality_attribute_8
&
ultra
low
quality_attribute_3
the
requirement_2
connector_data_1
component_5
ema
this
be
a
high
level
component_5
quality_attribute_2
for
technology_11
and
technology_13
ema
be
build
on
top
of
eta
and
provide
both
ease
of
use
&
high
requirement_9
or
you
use
the
technology_14
component_5
connector_21
by
the
component_13
the
technology_14
component_5
for
for
requirement_8
connector_10
and
real
time
component_10
this
component_5
have
the
same
level
of
abstraction
than
ema
but
work
with
connector_data_9
connector_22
technology_15
connector_data_10
exchange
with
the
component_13
via
websockets
thanks
to
the
technology_14
technology_9
this
component_5
can
easily
be
quality_attribute_9
into
a
multitude
of
component_22
technology_9
environment
such
a
script
and
web
note
this
component_5
be
quality_attribute_2
start
with
rtds


it
doesn’t
yet
support
the
publication
feature
strategic
component_2
vs
component_23
component_2
developer
who
work
with
previous
refinitiv
real
time
component_2
be
interest
in
understand
what
strategic
component_5
roughly
correspond
to
what
component_23
technology_4
the
follow
diagram
give
an
overview
of
these
equivalence
note
upa
the
ultra
requirement_9
technology_4
be
rename
to
eta
the
requirement_2
transport
technology_4
upa
and
eta
be
the
same
technology_4
in
this
picture
sfc
and
the
rfa
component_23
component_5
be
represent
at
the
same
level
a
ema
but
they
do
not
provide
the
exact
same
set
of
feature
the
same
apply
to
the
technology_16
technology_4
the
technology_17
component_5
and
eta

refinitiv
real
time
component_2
be
pattern_3
orient
skip
this
section
refinitiv
real
time
component_2
be
pattern_3
orient
component_2
that
rely
on
connector_data_2
component_24
and
connector_data_10
to
connector_13
and
publish
connector_data_2
item
in
the
refinitiv
real
time
documentation
you
will
often
find
reference
to
these
component_11
connector_data_10
and
technology_18
these
be
usually
connector_20
by
their
acronym
dmm
rdm
omm
and
rwf
this
section
give
you
an
overview
of
these
acronym
and
the
relate
concept
domain
connector_data_1
component_24
dmm
they
describe
a
specific
arrangement
of
connector_data_2
construct
semantics
and
behavior
that
define
real
world
connector_data_2
connector_data_4
for
example
a
specific
dmm
have
be
define
to
describe
level
i
requirement_4
requirement_8
instrument
and
their
relate
behavior
three
different
dmms
have
be
define
to
describe
the
different
type
of
level
ii
connector_data_2
full
order
book
requirement_4
depth
connector_data_11
requirement_4
maker
quote
&
requirement_5
connector_data_11
there
be
more
dmms
include
one
that
describe
yield
curve
even
if
a
number
of
domain
connector_data_1
component_24
already
exist
dmms
can
be
define
to
represent
other
connector_data_5
of
your
component_1
domain
each
dmm
have
a
unique
domain
type
numeric
requirement_7
use
to
identify
it
it
be
important
to
note
that
dmms
be
not
handle
by
any
of
our
real
time
component_2
with
the
exception
of
the
“login”
“source
directory”
and
“dictionary”
component_24
handle
by
ema
their
connector_data_2
connector_data_12
semantics
and
behavior
be
document
and
must
be
manage
at
a
high
level
of
the
component_1
our
component_2
transport
the
domain
type
requirement_7
so
that
the
component_1

what
kind
of
connector_data_2
it
connector_18
and
how
to
handle
it
refinitiv
domain
component_24
rdm
an
rdm
be
a
dmm
define
by
refinitiv
the
connector_data_7
of
rdms
their
relate
connector_data_2
construct
their
semantics
and
their
behavior
be
define
in
the
“rdm
usage
guide”
provide
with
the
real
time
technology_3
documentation
all
rdms
have
a
domain
type
requirement_7
le
than

component_25
define
domain
component_11
a
component_25
define
domain
component_11
be
a
domain
connector_data_1
component_11
define
by
a
party
other
than
refinitiv
these
be
define
to
solve
a
specific
component_25
need
which
be
not
resolvable
through
the
use
of
an
rdm
any
component_25
define
component_11
must
have
a
domain
type
requirement_7
between

and

if
need
domain
component_11
designer
can
work
with
refinitiv
to
define
their
component_24
a
technology_19
rdms
this
allow
for
the
most
seamless
quality_attribute_10
with
future
rdm
definition
and
with
other
refinitiv
real
time
technology_2
open
connector_data_1
component_11
omm
omm
be
the
collection
of
connector_data_1
coding_keyword_3
and
connector_data_2
construct
for
represent
connector_data_2
container
fieldlist
connector_data_13
vector…
and
primitive
type
dmms
and
rdms
rely
on
omm
to
define
their
relate
connector_data_2
connector_data_12
reuters
wire
technology_18
rwf
rwf
be
the
encode
representation
of
omm
rwf
be
a
highly
optimize
binary
technology_18
design
to
reduce
the
cost
of
connector_data_2
distribution
a
compare
to
component_23
wire
technology_18
the
refinitiv
technology_14
component_5
us
a
technology_15
representation
of
omm
with
display
ready
connector_data_2
requirement_7
these
technology_15
connector_data_10
transport
the
same
dmms
and
rdms
than
the
real
time
technology_3
apis
a
for
the
real
time
technology_3
component_1
technology_14
component_3
must
rely
on
the
domain
type
to
properly
handle
the
connector_data_10
they
connector_13

refinitiv
real
time
component_2
be
pattern_4
skip
this
section
refinitiv
real
time
component_2
be
pattern_5
and
pattern_4
component_2
that
rely
on
the
pattern_2
paradigm
this
mean
that
you
cannot
connector_2
a
connector_data_2
item
via
the
coding_keyword_4
requirement_7
of
a
quality_attribute_11
connector_data_14
with
a
real
time
technology_4
you
must
connector_data_14
to
subscribe
to
the
connector_data_2
item
you
be
interest
in
wait
for
the
component_5
to
connector_data_14
back
asynchronously
the
that
you
define
with
the
requirement_7
of
the
item
you
connector_data_9
if
you
indicate
an
interest
in
update
the
component_5
keep
you
update
by
connector_23
your
again
with
the
late
requirement_7
publish
for
the
connector_data_2
item
further
below
be
two
example
of
this
workflow
one
for
a
level

connector_data_2
item
e
g
a
requirement_4
and
one
for
a
level

connector_data_2
item
e
g
a
full
order
book
in
order
to
understand
these
workflow
make
sure
you
be
familiar
with
the

follow
concept
note
for
the
sake
of
quality_attribute_12
and
because
it
be
the
most
widespread
use
requirement_1
the
explanation
and
example
give
in
this
section
be
from
the
perspective
of
a
component_16
component_1
the
same
concept
or
sometimes
the
opposite
concept
relate
to
technology_6
and
hybrid
component_3
can
be
deduce
from
these
explanation
important
concept
skip
these
concept
subscription
this
be
the
action
of
indicate
your
interest
in
connector_24
the
requirement_7
of
a
specific
connector_data_2
item
a
subscription
be
do
by
connector_23
one
of
the
real
time
apis
for
example
with
the
requirement_2
connector_data_1
component_5
ema
you
subscribe
to
a
connector_data_2
item
by
connector_23
the
registerclient
of
the
ommconsumer

when
you
subscribe
to
a
connector_data_2
item
you
expect
the
component_5
to
connector_25
you
and
connector_data_10
that
contain
the
requirement_7
and
status
of
the
connector_data_2
item
you
subscribe
to
if
you
be
not
interest
anymore
in
connector_24
for
a
connector_data_2
item
you
can
close
the
subscription
a
k
a
unsubscribe
with
ema
this
be
do
by
connector_23
the
unregister
of
the
ommconsumer

connector_data_2
item
connector_17
the
action
of
subscribe
to
a
connector_data_2
item
open
a
connector_17
by
which
you
will
connector_13
the
and
connector_data_10
that
contain
the
requirement_7
and
status
of
the
subscribe
item
with
ema
this
connector_17
be
identify
by
the
numerical
handle
coding_keyword_4
by
the
registerclient
when
you
subscribe
image
the
image
of
a
connector_data_2
item
be
the
complete
set
of
requirement_7
that
represent
the
item
this
set
of
requirement_7
be
define
by
the
component_11
type
of
the
connector_data_2
item
you
subscribe
to
component_3
often
need
to
keep
a
local
e
g
in
memory
representation
of
connector_data_2
connector_data_3
image
this
pattern_6
of
image
be
not
manage
by
our
real
time
component_2
but
must
be
connector_11
by
the
component_1
and
keep
up
to
date
thanks
to
the
connector_data_10
it
connector_18
from
the
technology_4
image
requirement_7
come
with
the
refresh
connector_data_10
connector_26
by
the
technology_4
with
ema
these
connector_data_10
be
connector_26
via
the
onrefreshmsg
pattern_7
of
the
ommconsumerclient
register
in
the
subscription
phase
for
level

connector_data_2
item
refresh
connector_data_10
contain
the
complete
set
of
requirement_7
of
the
image
on
the
contrary
for
level

connector_data_2
connector_data_3
refresh
connector_data_10
not
be
complete
and
only
contain
a
part
of
the
image
because
level

image
can
be
very
large
they
be
transport
in
a
sequence
of
refresh
and
update
connector_data_10
that
must
be
consolidate
by
the
component_1
connector_data_15
an
update
be
the
subset
of
requirement_7
of
a
connector_data_2
item
that
recently
connector_15
the
update
doesn’t
contain
the
complete
image
but
only
the
requirement_7
that
connector_15
apply
these
requirement_7
to
the
late
image
of
a
connector_data_2
item
allow
keep
it
up
to
date
connector_data_15
be
connector_26
by
the
component_5
via
update
connector_data_1
with
ema
these
connector_data_10
be
connector_26
via
the
onupdatemsg
pattern_7
of
the
ommconsumerclient
register
at
subscription
time
update
connector_data_10
always
contain
requirement_7
for
piece
of
connector_data_2
that
the
component_1
already
connector_13
status
status
indicate
the
state
of
a
connector_data_2
item
requirement_7
or
the
state
of
the
relate
connector_17
status
be
connector_26
by
the
component_5
via
status
connector_data_1
with
ema
these
connector_data_10
be
connector_26
via
the
onstatusmsg
pattern_7
of
the
ommconsumerclient
register
at
subscription
time
workflow
example
level

connector_data_2
item
example
skip
this
workflow
this
example
illustrate
the
possible
connector_27
between
an
component_1
and
the
requirement_2
connector_data_1
component_5
when
subscribe
to
a
level

connector_data_2
item
a
requirement_4
quotation
this
include
the
subscription
the
reception
of
connector_data_2
several
image
and
update
and
status
the
subscription
close
step

the
component_1
connector_data_16
registerclient
to
subscribe
to
a
level

connector_data_2
item
and
to
register
a
component_22
pattern_7
connector_data_4
this
connector_data_4
will
be
use
by
the
component_5
to
connector_25
connector_data_10
to
the
component_1
among
other
parameter
the
component_1
indicate
the
name
of
the
item
the
component_10
it
be
publish
on
and
it
component_11
type
e
g
appl
o
elektron_dd
mmt_market_price

after
the
registerclient
coding_keyword_4
the
component_1
wait
for
ema
to
connector_25
connector_data_10
relate
to
the
subscribe
connector_data_2
item
step

ema
connector_28
a
refresh
connector_data_1
to
the
component_1
via
the
onrefreshmsg
component_22
pattern_7
since
this
refresh
connector_data_1
be
for
a
level

connector_data_2
item
it
contain
the
complete
connector_data_7
of
of
the
item
the
component_1
can
optionally
pattern_6
this
connector_data_2
create
a
local
representation
of
the
connector_data_2
item
image
step

&

ema
connector_28
several
update
connector_data_10
to
the
component_1
via
the
onupdatemsg
component_22
pattern_7
each
update
connector_data_1
contain
the
subset
of
the
connector_data_2
item
that
connector_15
if
it
preserve
an
image
of
the
item
the
component_1
can
update
it
with
these
requirement_7
step

ema
connector_28
a
status
connector_data_1
to
the
component_1
via
the
onstatusmsg
component_22
pattern_7
this
connector_data_1
contain
a
suspect
connector_data_2
state
indicate
that
the
connector_data_2
connector_29
for
the
item
be
not
quality_attribute_13
anymore
one
possible
reason
for
this
be
that
the
technology_6
component_1
have
be
disconnect
from
it
component_20
of
connector_data_2
for
example
quality_attribute_5
on
their
internal
component_19
and
purpose
component_3
behave
differently
when
they
connector_13
this
kind
of
status
for
example
a
calculation
component_17
decide
to
stop
calculation
and
raise
an
alert
while
a
desktop
component_1
eikon
decide
to
continue
display
the
connector_data_2
but
with
a
particular
background
color
red
to
inform
the
component_25
that
the
display
connector_data_2
be
not
quality_attribute_13
anymore
step

ema
connector_28
a
refresh
connector_data_1
with
an
ok
connector_data_2
state
this
indicate
that
the
issue
that
cause
the
suspect
connector_data_2
state
be
now
solve
and
that
the
connector_data_2
be
quality_attribute_13
again
the
refresh
connector_data_1
also
contain
a
fresh
and
complete
connector_data_7
of
that
the
component_1
can
use
to
refresh
the
image
of
the
connector_data_2
item
step


&

ema
regularly
connector_28
update
connector_data_10
to
keep
the
component_1
update
with
the
late
connector_30
of
the
connector_data_2
item
step

the
component_1
connector_data_16
unregister
to
close
the
subscription
when
connector_23
unregister
the
component_1
indicate
the
connector_17
handle
the
registerclient
coding_keyword_4
at
step1
after
unregister
coding_keyword_4
ema
will
not
connector_25
any
connector_data_1
to
the
component_1
for
this
item
connector_17
level

connector_data_2
item
example
skip
this
workflow
this
example
illustrate
possible
connector_27
between
an
component_1
and
the
requirement_2
connector_data_1
component_5
when
subscribe
to
a
level

connector_data_2
item
an
order
book
this
include
the
subscription
the
reception
of
connector_data_2
the
image
via
several
connector_data_10
and
the
update
and
the
subscription
close
step

the
component_1
connector_data_16
registerclient
to
subscribe
to
a
level

connector_data_2
item
and
to
register
a
component_22
pattern_7
connector_data_4
this
connector_data_4
will
be
use
by
the
component_5
to
connector_25
connector_data_10
to
the
component_1
among
other
parameter
the
component_1
indicate
the
name
of
the
item
the
component_10
it
be
publish
on
and
it
component_11
type
e
g
appl
o
elektron_dd
mmt_market_by_order

after
the
registerclient
coding_keyword_4
the
component_1
wait
for
ema
to
connector_25
connector_data_10
relate
to
the
subscribe
connector_data_2
item
step

ema
connector_28
a
refresh
connector_data_1
to
the
component_1
via
the
onrefreshmsg
component_22
pattern_7
since
the
refresh
connector_data_1
be
for
a
level

connector_data_2
item
and
because
level

connector_data_2
connector_data_3
image
be
very
large
this
refresh
connector_data_1
not
contain
the
complete
order
book
this
be
the
requirement_1
here
a
the
refresh
contain
an
indication
that
it
be
not
complete
if
the
component_1
want
to
build
a
local
representation
of
the
order
book’s
image
it
must
pattern_6
the
connector_29
order
and
consolidate
the
image
when
it
will
connector_13
the
other
order
via
subsequent
refresh
and
update
connector_data_1
step

ema
connector_28
a
second
refresh
that
contain
additional
order
the
component_1
can
use
it
to
consolidate
the
order
book’s
image
step

ema
connector_28
an
update
connector_data_1
that
contain
requirement_7
for
already
connector_29
order
the
component_1
can
use
this
connector_data_1
to
consolidate
the
order
book’s
image
it
be
important
to
note
that
at
this
point
the
image
of
the
order
book
be
still
not
complete
step

ema
connector_28
a
third
refresh
connector_data_1
that
be
indicate
a
complete
this
connector_data_1
contain
the
last
order
need
to
complete
the
image
the
component_1
can
use
them
to
consolidate
the
order
book’s
image
from
this
point
the
image
can
be
consider
a
complete
step


&

ema
regularly
connector_28
update
connector_data_10
to
keep
the
component_1
update
with
the
late
connector_30
of
the
order
book
these
connector_data_15
can
be
use
to
update
the
order
book’s
image
step

the
component_1
connector_data_16
unregister
to
close
the
subscription
when
connector_23
unregister
the
component_1
indicate
the
connector_17
handle
the
registerclient
coding_keyword_4
at
step1
after
unregister
coding_keyword_4
ema
will
not
connector_25
any
connector_data_1
to
the
component_1
for
this
item
connector_17

–
be
describe
by
dictionary
most
of
the
connector_data_3
quality_attribute_1
on
refinitiv
real
time
component_21
use
the
connector_data_7
connector_data_2
connector_data_12
this
connector_data_2
connector_data_12
be
make
of
a
connector_data_7
of

requirement_7
pair
that
transport
several
requirement_7
of
an
item
level

connector_data_2
connector_data_3
or
individual
order
of
level

order
book
be
quality_attribute_14
example
of
connector_data_3
make
of
connector_data_7
each
element
of
a
connector_data_7
have
a
unique
coding_keyword_2
fid
and
a
requirement_7
omm
connector_data_10
that
contain
connector_data_8
only
transport
these
two
element
other
connector_data_11
the
name
of
the
or
the
type
be
define
within
a
dictionary
that
be
either
download
from
the
real
time
component_13
or
provide
a
a
beside
the
component_1
our
real
time
component_2
extensively
use
this
dictionary
to
decode
the
they
connector_13
from
the
component_13
component_1
on
the
other
hand
do
not
always
need
to
use
this
dictionary
indeed
most
of
them
in
advance
the
they
need
and
their
type
this
allow
them
to
hardcode
this
connector_data_11
within
their
component_20

for
example
an
component_1
that
calculate
the
cross
between
two
currency
could
connector_31
bid
and
ask
use
hardcoded
fids

and

or
name
“bid”
and
“ask”
and
then
directly
try
to
connector_31
their
requirement_7
a
real64
requirement_7
the
component_1
doesn’t
need
any
dictionary
for
this
the
field’s
connector_data_11
can
be
hardcoded
a
it
be
very
unlikely
that
the
fids
name
or
type
of
bid
and
ask
connector_15
anytime
soon
on
the
other
hand
a
more
generic
component_1
that
would
display
metadata
about
the
it
connector_18
would
need
to
connector_31
this
connector_data_11
from
the
dictionary
in
any

you
need
the
dictionary
either
in
a
human
readable
technology_18
–
to
find
out
a
a
developer
what
to
hardcode
in
your
component_1
–
or
programmatically
so
that
your
component_1
can
connector_8
the
metadata
a
human
readable
version
of
the
dictionary
can
be
connector_data_9
from
the
administrator
of
your
real
time
component_13
alternatively
you
can
use
the
dictionary
example
provide
with
the
real
time
technology_3
but
it’s
best
to
use
to
the
dictionary
of
the
component_13
dictionary
example
“rdmfielddictionary”
can
be
find
in
the
“cpp
c\etc”
or
the
“java\etc”
folder
of
the
real
time
technology_3
technology_13
or
technology_11
edition
respectively
programmatically
connector_data_11
be
quality_attribute_15
via
the
datadictionary
connector_data_4
with
eta
this
connector_data_4
must
be
initialize
with
a
dictionary
load
from
a
or
download
from
the
component_13
with
ema
the
datadictionary
connector_data_4
can
be
connector_31
from
a
connector_data_7
use
the
ema
dictionaryutility

note
the
dictionary
be
complete
by
another
dictionary
use
for
enumerate
requirement_7
this
dictionary
connector_20
enumtype
coding_keyword_5
define
all
possible
requirement_7
of
every
enumerate

the
version
of
this
dictionary
be
quality_attribute_2
alongside
the
dictionary
“rdmfielddictionary”
programmatically
the
datadictionary
connector_data_4
include
enumerate
requirement_7
connector_data_11

–
you
be
not
alone
–
the
force
not
be
with
you
but
the
refinitiv
developer
be
if
you
be
an
experience
developer
who
have
previously
work
with
component_23
refinitiv
real
time
component_2
rfa
you
will
probably
find
the
move
to
ema
very
easy
on
the
other
hand
if
you
do
not
have
any
prior
experience
with
this
kind
of
component_2
or
if
you
start

the
lower
level
requirement_2
transport
component_5
eta
you
need
help
at
some
point
if
you
find
yourself
in
this
situation
remember
that
you
be
not
alone
a
lively
of
developer
compose
of
refinitiv
requirement_10
and
requirement_11
be
here
to
help
you
this
can
be
join
on
the
refinitiv
developer
component_13
via
the
developer
portal
there
you
will
find
there


and
plenty
of
other
refinitiv
component_5
relate

material
you
can
also
ask
question
to
the
and
find
the
answer
you
need
on
the
discussion
forum
don’t
hesitate
to
join
the
refinitiv
developer

it
be
in
free
connector_8
and
open
to
everyone
register
here
and
connector_2
full
connector_8
to
the
best

content
for
refinitiv
apis
my
other

if
you

this

you
be
interest
in
connector_32
my
other

introduction
to
the
refinitiv
component_5
sample
technology_20
group
simplify
content
connector_8
in
ema
the
ema
ease
of
use
in
action
video

a
quality_attribute_11
marketprice
connector_data_4
for
ema
quality_attribute_11
chain
connector_data_5
for
ema
relate

introduction
refinitiv
component_5
sample
technology_20
group
simplify
content
connector_8
in
ema
the
ema
ease
of
use
in
action
video

a
quality_attribute_11
marketprice
connector_data_4
for
ema
quality_attribute_11
chain
connector_data_5
for
ema
ftlscreen
welcome
help
u
personalise
your
experience
by
complete
your
profile
screen
name
requirement_12
name
speak
technology_8
s
optional
programming
technology_8
s
optional
connector_33
my
full
name
country
and
technology_8
with
other
developer
connector_33
the
requirement_12
i
work
for
and
my
connector_34
with
other
developer
i
agree
to
term
&
condition
and
privacy
requirement_13
connector_25
me
connector_35
about
financial
&
risk
resource
include
technology_2
or
component_10
back
complete
profile
{
connector_data_1
{
companyname
{
trengtext
please
enter
the
requirement_12
name
in
correct
technology_18
require
please
enter
the
requirement_12
name
}
screenname
{
answerhubscreenname
please
enter
the
name
in
correct
technology_18
require
please
enter
your
screen
name
}}
rule
{
companyname
{
trengtext
true
require
true}
screenname
{
answerhubscreenname
true
require
true}}}
ftlerrorscreen
there
be
some
problem
with
the
connector_data_9
connector_25
close
versuccessmodal
close
verification
successfully
do
thank
you
for
register
you
will
typically
connector_13
your
confirmation
within

min
with
further
instruction
on
how
to
proceed
with
connector_8
to
developer
close
feedbackmodal
close
feedback
first
name
last
name
connector_34
feedback
type
general
feedback
about
this
report
a
problem
with
this
problem
type
break
connector_36
image
not
display
component_6
not
display
other
subject
connector_data_1
attach
to
connector_37
attachment

connector_data_17
limit
attach
back
submit
{
connector_data_1
{
feedbacklastname
{
require
please
enter
last
name
}
feedbackfirstname
{
require
please
enter
first
name
}
problemtype
{
require
please
select
problem
type
}
feedbackemail
{
tremail
please
enter
correctly
require
please
enter

}
connector_data_1
{
require
please
enter
connector_data_1
}
feedbacksubject
{
require
please
enter
subject
}
feedbacktype
{
require
please
select
feedback
type
}}
rule
{
feedbacklastname
{
require
true}
feedbackfirstname
{
require
true}
problemtype
{
require
true}
feedbackemail
{
tremail
true
require
true}
connector_data_1
{
require
true}
feedbacksubject
{
require
true}
feedbacktype
{
require
true}}}
refinitiv
requirement_13
privacy
statement
term
of
use
copyright
do
not
sell
my
info
