comparison
of
technology_1
connector_data_1
and
technology_2
serialization
requirement_1
·
mirko
serticwww
mirkosertic
de
technology_3
&
goodiesinteresting
booksmy
favorite
postingsblogcomparison
of
technology_1
connector_data_1
and
technology_2
serialization
performancethu


by
mirko
sertic5
minute
connector_1
timeperformance
serializationonce
i
try
to
figure
out
the
difference
between
technology_1
connector_data_1
and
technology_2
technology_4
connector_data_2
serialization
requirement_1
i
want
to
which
one
have
the
quality_attribute_1
run
time
requirement_1
and
thus
quality_attribute_2
quality_attribute_1
here
be
the
connector_data_3
the
test
setup
be
a
window

64bit
component_1
with
intel
core2
quad
q9450
cpu
@2
66ghz
technology_4
runtime
be


0_07
quite
old
i

the
profile
test
requirement_2
be
to
serialize
and
deserialize
a
quality_attribute_3
technology_4
connector_data_2
with
technology_2
and
technology_5
i
want
to
run
the
component_2



and

time
in
contrast
i
use
technology_6
technology_5
technology_4
objectoutputstream
and
kryo
the
follow
component_3
show
the
measure
type1000
runs10000
runs100000
runs1000000
runsjettison
technology_6
marshalling168ms863ms2537ms16659msjettison
technology_6
unmarshalling136ms764ms2229ms12303mssdk
technology_1
connector_data_1
marshalling109ms598ms2019ms10513mssdk
technology_1
connector_data_1
unmarshalling763ms5574ms29958ms249972mssdk
objectoutputstream
marshalling71ms243ms470ms1873msgoogle
kryo
marshalling14ms85ms290ms2557msi
use
jettison



for
the
test
surprisingly
it
seem
that
connector_data_1
marshal
be
quite
fast
even
fast
than
technology_6
but
it
create
more
redundant
connector_data_4
but
connector_data_1
unmarshalling
be
terribly
slow
compare
to
technology_6
and
it
also
connector_2
bad
under
heavy
load
probably
due
to
the
connector_data_1
dom
create
a
lot
of
small
connector_data_2
and
this
cause
heavy
garbage
collector
load
the
non
human
readable
serialization
objectoutputstream
or
kryo
perform
quality_attribute_1
than
technology_2
or
connector_data_1
at
serialization
time
funny
isnât
it
it
you
want
to
more
about
technology_4
serialization
requirement_1
you
can
consult
technology_7
technology_8
eishay
technology_9
serializers
wiki
technology_6
test
requirement_2
component_4

coding_keyword_1

codehaus
jettison
technology_6
jsonexception
coding_keyword_1

codehaus
jettison
technology_6
coding_keyword_2
coding_keyword_1

codehaus
jettison
connector_data_5
configuration
coding_keyword_1

codehaus
jettison
connector_data_5
mappednamespaceconvention
coding_keyword_1

codehaus
jettison
connector_data_5
mappedxmlstreamreader
coding_keyword_1

codehaus
jettison
connector_data_5
mappedxmlstreamwriter
coding_keyword_1
javax
technology_5
bind
jaxbcontext
coding_keyword_1
javax
technology_5
bind
jaxbexception
coding_keyword_1
javax
technology_5
bind
marshaller
coding_keyword_1
javax
technology_5
bind
unmarshaller
coding_keyword_1
javax
technology_5
bind
annotation
xmlaccesstype
coding_keyword_1
javax
technology_5
bind
annotation
xmlaccessortype
coding_keyword_1
javax
technology_5
bind
annotation
xmlrootelement
coding_keyword_1
javax
technology_5
connector_3
xmlstreamexception
coding_keyword_1
javax
technology_5
connector_3
xmlstreamreader
coding_keyword_1
javax
technology_5
connector_3
xmlstreamwriter
coding_keyword_1
technology_4
io
stringwriter
coding_keyword_3
jsonperformance
{
@xmlrootelement
@xmlaccessortype
xmlaccesstype

coding_keyword_3
coding_keyword_4
simpleobject
{
private
coding_keyword_5
name1
private
coding_keyword_5
name2
protect
simpleobject
{
}
coding_keyword_3
simpleobject
coding_keyword_5
aname1
coding_keyword_5
aname2
{
name1
=
aname1
name2
=
aname2
}
coding_keyword_3
coding_keyword_5
getname1
{
coding_keyword_6
name1
}
coding_keyword_3
coding_keyword_5
getname2
{
coding_keyword_6
name2
}
}
coding_keyword_3
coding_keyword_4
coding_keyword_7
coding_keyword_8
coding_keyword_5
args
throw
jaxbexception
jsonexception
xmlstreamexception
{
jaxbcontext
thecontext
=
jaxbcontext
newinstance
simpleobject

configuration
theconfig
=
configuration
mappednamespaceconvention
theconvention
=
mappednamespaceconvention
theconfig
simpleobject
theobject
=
simpleobject
mirko
sertic
long
theruns
=

marshal
component_5
out
coding_keyword_9
requirement_1
test
run
long
thecurrenttime
=
component_5
currenttimemillis
for
coding_keyword_10
i
=

i
theruns
i++
{
stringwriter
thewriter
=
stringwriter
xmlstreamwriter
thexmlwriter
=
mappedxmlstreamwriter
theconvention
thewriter
marshaller
themarshaller
=
thecontext
createmarshaller
themarshaller
marshal
theobject
thexmlwriter
}
component_5
out
coding_keyword_9
component_5
currenttimemillis
thecurrenttime
+
m
component_2
time
unmarshalling
coding_keyword_5
thejson
=
{\
simpleobject\
{\
name1\
\
mirko\
\
name2\
\
sertic\
}}
thecurrenttime
=
component_5
currenttimemillis
for
coding_keyword_10
i
=

i
theruns
i++
{
xmlstreamreader
thexmlreader
=
mappedxmlstreamreader

coding_keyword_2
thejson
theconvention
unmarshaller
theunmarshaller
=
thecontext
createunmarshaller
simpleobject
theresult
=
simpleobject
theunmarshaller
unmarshal
thexmlreader
}
component_5
out
coding_keyword_9
component_5
currenttimemillis
thecurrenttime
+
m
component_2
time
component_5
out
coding_keyword_9
do
}
}xml
testcase
component_4

coding_keyword_1
javax
technology_5
bind
jaxbcontext
coding_keyword_1
javax
technology_5
bind
jaxbexception
coding_keyword_1
javax
technology_5
bind
marshaller
coding_keyword_1
javax
technology_5
bind
unmarshaller
coding_keyword_1
javax
technology_5
bind
annotation
xmlaccesstype
coding_keyword_1
javax
technology_5
bind
annotation
xmlaccessortype
coding_keyword_1
javax
technology_5
bind
annotation
xmlrootelement
coding_keyword_1
technology_4
io
stringreader
coding_keyword_1
technology_4
io
stringwriter
coding_keyword_1
technology_4
io
writer
coding_keyword_3
xmlperformance
{
@xmlrootelement
@xmlaccessortype
xmlaccesstype

coding_keyword_3
coding_keyword_4
simpleobject
{
private
coding_keyword_5
name1
private
coding_keyword_5
name2
protect
simpleobject
{
}
coding_keyword_3
simpleobject
coding_keyword_5
aname1
coding_keyword_5
aname2
{
name1
=
aname1
name2
=
aname2
}
coding_keyword_3
coding_keyword_5
getname1
{
coding_keyword_6
name1
}
coding_keyword_3
coding_keyword_5
getname2
{
coding_keyword_6
name2
}
}
coding_keyword_3
coding_keyword_4
coding_keyword_7
coding_keyword_8
coding_keyword_5
args
throw
jaxbexception
{
jaxbcontext
thecontext
=
jaxbcontext
newinstance
simpleobject

simpleobject
theobject
=
simpleobject
mirko
sertic
long
theruns
=

component_5
out
coding_keyword_9
requirement_1
test
run
long
thecurrenttime
=
component_5
currenttimemillis
for
coding_keyword_10
i
=

i
theruns
i++
{
writer
thewriter
=
stringwriter
marshaller
themarshaller
=
thecontext
createmarshaller
themarshaller
marshal
theobject
thewriter
}
component_5
out
coding_keyword_9
component_5
currenttimemillis
thecurrenttime
+
m
component_2
time
coding_keyword_5
thexml
=
technology_5
version=\

0\
encoding=\
utf
8\
standalone=\
yes\
simpleobject
name1
mirko
name1
+
name2
sertic
name2
simpleobject
thecurrenttime
=
component_5
currenttimemillis
for
coding_keyword_10
i
=

i
theruns
i++
{
unmarshaller
theunmarshaller
=
thecontext
createunmarshaller
simpleobject
theresult
=
simpleobject
theunmarshaller
unmarshal

stringreader
thexml
}
component_5
out
coding_keyword_9
component_5
currenttimemillis
thecurrenttime
+
m
component_2
time
component_5
out
coding_keyword_9
do
}
}objectoutputstream
testcase
component_4

coding_keyword_1
javax
technology_5
bind
jaxbexception
coding_keyword_1
technology_4
io
bytearrayoutputstream
coding_keyword_1
technology_4
io
ioexception
coding_keyword_1
technology_4
io
objectoutputstream
coding_keyword_1
technology_4
io
serializable
coding_keyword_3
objectstreamperformance
{
coding_keyword_3
coding_keyword_4
simpleobject
connector_4
serializable
{
private
coding_keyword_5
name1
private
coding_keyword_5
name2
protect
simpleobject
{
}
coding_keyword_3
simpleobject
coding_keyword_5
aname1
coding_keyword_5
aname2
{
name1
=
aname1
name2
=
aname2
}
coding_keyword_3
coding_keyword_5
getname1
{
coding_keyword_6
name1
}
coding_keyword_3
coding_keyword_5
getname2
{
coding_keyword_6
name2
}
}
coding_keyword_3
coding_keyword_4
coding_keyword_7
coding_keyword_8
coding_keyword_5
args
throw
jaxbexception
ioexception
{
simpleobject
theobject
=
simpleobject
mirko
sertic
long
theruns
=

component_5
out
coding_keyword_9
requirement_1
test
run
long
thecurrenttime
=
component_5
currenttimemillis
for
coding_keyword_10
i
=

i
theruns
i++
{
objectoutputstream
thestream
=
objectoutputstream

bytearrayoutputstream
thestream
writeobject
theobject
}
component_5
out
coding_keyword_9
component_5
currenttimemillis
thecurrenttime
+
m
component_2
time
component_5
out
coding_keyword_9
do
}
}google
kryo
testcase
component_4

coding_keyword_1
javax
technology_5
bind
jaxbexception
coding_keyword_1
technology_4
io
*
coding_keyword_1
technology_4
technology_10
bytebuffer
coding_keyword_1
technology_8
esotericsoftware
kryo
*
coding_keyword_3
kryoperformance
{
coding_keyword_3
coding_keyword_4
simpleobject
connector_4
serializable
{
private
coding_keyword_5
name1
private
coding_keyword_5
name2
protect
simpleobject
{
}
coding_keyword_3
simpleobject
coding_keyword_5
aname1
coding_keyword_5
aname2
{
name1
=
aname1
name2
=
aname2
}
coding_keyword_3
coding_keyword_5
getname1
{
coding_keyword_6
name1
}
coding_keyword_3
coding_keyword_5
getname2
{
coding_keyword_6
name2
}
}
coding_keyword_3
coding_keyword_4
coding_keyword_7
coding_keyword_8
coding_keyword_5
args
throw
jaxbexception
ioexception
{
simpleobject
theobject
=
simpleobject
mirko
sertic
kryo
thekryo
=
kryo
thekryo
register
simpleobject

long
theruns
=

component_5
out
coding_keyword_9
requirement_1
test
run
long
thecurrenttime
=
component_5
currenttimemillis
for
coding_keyword_10
i
=

i
theruns
i++
{
thekryo
writeobject
bytebuffer
allocate

theobject
}
component_5
out
coding_keyword_9
component_5
currenttimemillis
thecurrenttime
+
m
component_2
time
component_5
out
coding_keyword_9
do
}
}
pevious
coding_keyword_11
build
portal
with
technology_4
technology_11
and
some
microdata
next
coding_keyword_11
validation
with
jsr303
and
technology_12
git
revision
63a36b0loading

©
mirko
sertic
·
imprint
impressummirko
serticjosefine
mauser
str

mã¼nstergermany
back
to
top
