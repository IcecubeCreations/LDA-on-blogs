technology_1
—
redirect
to
different
pattern_1
base
on
component_1
role
|
by
zeba
rahman
|
fabcoding
|
mediumget
unlimited
accessopen
in
apphomenotificationslistsstorieswritepublished
infabcodingzeba
rahmanfollowaug
2020·5
min
readlaravel
—
redirect
to
different
pattern_1
base
on
component_1
roleobjectivein
this
we
shall
have
a
project
name
‘mystore’
which
can
have
kind
of
component_1
either
‘admin’
or
‘seller’
they
will
have
separate
requirement_1
with
separate
feature
and
requirement_2
when
a
component_1
requirement_3
in
to
our
they
will
be
redirect
to
a
requirement_1
accord
to
their
role
also
the
connector_1
should
be
protect
mean
the
requirement_3
in
component_1
should
not
be
able
to
connector_2
the
requirement_1
or
any
of
the
inside
component_2
of
the
other
role
even
if
they
type
the
url
in
the
browser
so
u
begin
if
you
be
to
technology_1
i
recommend
go
through
this
to
how
to
set
up
technology_1
and
create
and
run
technology_1
project
step
1configuring
projectafter
create
the
technology_1
project
we
will
run
a
couple
of
quick
command
for
scaffolding
the
pattern_2
component_3
composer
require
technology_1
uiphp
artisan
ui
technology_2
authand
then
run
this
command
to
compile
it
npm
install
&&
npm
run
devnow
run
the
project
in
your
browser
you
should
be
able
to
see
a
work
component_2
you
should
also
be
able
to
click
on
the
login
and
register
to
go
their
respective
form
and
use
them
to
register
and
login
step
2set
up
component_1
role
attribute
to
component_4
tablewe
will
be
use
a
quality_attribute_1
attribute
in
the
component_4
component_5
to
identify
the
role
of
the
component_1
for
this
example
the
component_1
role
can
either
be
‘admin’
or
‘seller’
go
to
the
component_4
component_5
migration
it
will
be
present
in
a
mystore
component_6
migration
xxx
xxx
xxx_create_users_table
phpadd
a
column
name
‘role’
which
will
component_7
the
role
of
the
component_1
up
{
schema
create
component_1
blueprint
$table
{
$table
role
}
}run
the
commandphp
artisan
migratewe
also
need
to
this
to
the
registration
component_8
open
mystore
component_9
technology_3
pattern_3
auth
registercontroller
technology_4
a
line
for
the
column
in
both
the
validator
and
the
create
protect
validator
$data
{
validator
make
$data
role
=
require
max
}protected
create
$data
{
component_1
create
role
=
$data
role
}now
u
create
component_1
one
for
each
of
our
role
admin
and
seller
we
will
do
this
use
seed
run
the
follow
command
to
create
a
seederphp
artisan
make
seeder
userstableseedercheck
mystore
component_6
seed
for
the
newly
create
userstableseeder
phpreplace
the
run
with
the
followingpublic
run
{
db
component_5
component_1
truncate
for
clean
early
connector_data_1
to
avoid
duplicate
entry
db
component_5
component_1
insert
name
=
the
admin
component_1
=
iamadmin@gmail
technology_5
role
=
admin
password
=
hash
make
password
db
component_5
component_1
insert
name
=
the
seller
component_1
=
iamaseller@gmail
technology_5
role
=
seller
password
=
hash
make
password
}in
the
same
folder
open
databaseseeder
technology_4
and
inside
the
run
the
connector_data_2
to
our
seeder
$this
connector_data_2
userstableseeder
now
run
the
commandscomposer
connector_data_3
autoloadphp
artisan
db
seednow
you
can
test
the
login
use
these
newly
create
account
credentialsstep
3create
separate
requirement_1
and
routesgo
to
mystore
resource
pattern_1
create
folder
name
admin
and
seller
and
create
a
requirement_1
technology_6
technology_4
inside
each
of
these
u
populate
with
some
basic
content
for
distinction
admin
requirement_1
technology_6
php@extends
layout
component_9
@section
content
div
class=
container
div
class=
row
justify
content
center
div
class=
col
md
div
class=
card
div
class=
card
{{
__
requirement_1
}}
div
div
class=
card
body
@if
component_10
status
div
class=
alert
alert
success
role=
alert
{{
component_10
status
}}
div
@endif
{{
__
hello
administrator
you
be
requirement_3
in
}}
div
div
div
div
div
@endsectionseller
requirement_1
technology_6
php@extends
layout
component_9
@section
content
div
class=
container
div
class=
row
justify
content
center
div
class=
col
md
div
class=
card
div
class=
card
{{
__
requirement_1
}}
div
div
class=
card
body
@if
component_10
status
div
class=
alert
alert
success
role=
alert
{{
component_10
status
}}
div
@endif
{{
__
hello
seller
you
be
requirement_3
in
}}
div
div
div
div
div
@endsectionalso
to
create
pattern_3
run
the
follow
commandsphp
artisan
make
pattern_3
admin
dashboardcontrollerphp
artisan
make
pattern_3
seller
dashboardcontrollergo
to
the
newly
create
under
mystore
component_9
technology_3
pattern_3
and
modify
them
to
the
pattern_1
that
we
create
above
admin
dashboardcontroller
technology_4
phpnamespace
app\http\controllers\admin
use
app\http\controllers\controller
use
illuminate\http\request
dashboardcontroller
extend
pattern_3
{
__construct
{
$this
technology_7
auth
}
index
{
pattern_1
admin
requirement_1
}}seller
dashboardcontroller
technology_4
phpnamespace
app\http\controllers\seller
use
app\http\controllers\controller
use
illuminate\http\request
dashboardcontroller
extend
pattern_3
{
__construct
{
$this
technology_7
auth
}
index
{
pattern_1
seller
requirement_1
}}now
create
connector_1
for
these
requirement_1
go
to
mystore
connector_1
web
technology_4
and
the
follow
connector_3
connector_4
admin_dashboard
admin\dashboardcontroller@index
connector_3
connector_4
seller_dashboard
seller\dashboardcontroller@index
now
you
can
open
your
browser
and
try
the
url
with
the
above
connector_1
and
you
should
see
the
two
distinct
skeleton
requirement_1
step
4redirect
during
loginlets
now
connector_5
the
login
to
connector_6
the
component_1
role
during
login
and
redirect
the
component_1
to
the
respective
dashbaord
go
to
mystore
component_9
technology_3
pattern_3
auth
logincontroller
technology_4
find
the
redirect
methodprotected
$redirectto
=
routeserviceprovider
home
remove
this
line
and
replace
it
with
the
below
which
connector_7
role
and
connector_3
redirectto
{
$role
=
auth
component_1
role
switch
$role
{
requirement_4
admin
admin_dashboard
break
requirement_4
seller
seller_dashboard
break
default
home
break
}}make
sure
to
include
this
line
at
the
top
since
we
be
use
auth
use
illuminate\support\facades\auth
also
apply
the
same
conditional
component_8
to
another
component_9
technology_3
technology_7
redirectifauthenticated
technology_4
connector_8
the
handle
to
the
follow
handle
$request
closure
$next
$guard
=
{
if
auth
guard
$guard
connector_6
{
$role
=
auth
component_1
role
switch
$role
{
requirement_4
admin
redirect
admin_dashboard
break
requirement_4
seller
redirect
seller_dashboard
break
default
redirect
home
break
}
}
$next
$request
}and
you’re
do
you
can
now
go
to
your
browser
and
try
requirement_3
in
with
the
admin
and
seller
account
and
you
will
be
redirect
to
the
respective
requirement_1
step
5protect
the
routesfor
now
if
you
be
requirement_3
in
a
a
seller
and
you
type
the
admin
requirement_1
connector_3
url
in
your
browser
it
work
this
be
not
ideal
we
need
to
protect
the
connector_1
use
a
technology_7
in
the
folder
mystore
component_9
technology_3
technology_7
create
a
role
technology_4
and
the
follow
for
role
connector_6
phpnamespace
app\http\middleware
use
closure
use
illuminate\auth\middleware\role
a
technology_7
use
illuminate\support\facades\auth
role
{
handle
$request
closure
$next
$role
{
if
auth
connector_6
this
isnt
necessary
it
should
be
part
of
your
auth
technology_7
redirect
home
$user
=
auth
component_1
if
$user
role
==
$role
$next
$request
redirect
home
}}in
requirement_4
you
want
to
support
multiple
role
for
a
different
kind
of
component_11
you
would
pass
an
of
role
and
use
foreach
to
loop
through
them
and
connector_6
go
to
component_9
technology_3
kernel
technology_4
and
this
technology_7
to
the
routemiddleware
arrayprotected
$routemiddleware
=
role
=
\app\http\middleware\role
now
u
apply
this
technology_7
to
our
connector_1
go
back
to
the
mystore
connector_1
web
technology_4
and
modify
the
connector_3
definition
connector_3
connector_4
admin_dashboard
admin\dashboardcontroller@index
technology_7
role
admin
connector_3
connector_4
seller_dashboard
seller\dashboardcontroller@index
technology_7
role
seller
that’s
it
now
go
back
to
your
browser
requirement_3
in
a
seller
role
and
try
opening
the
requirement_1
of
the
admin
role
and
vice
versa
it
should
redirect
to
the
give
connector_3
that
be
home
…originally
publish
at
fabcoding
5more
from
fabcodingapp
&
web
development
&
tipsread
more
from
fabcodingrecommended
from
mediumdonna
tamflutter
toggle
in
multiple
row
with
spacing
and
round
cornersantoine
fortincode
review
be
so
underrate
michael
vinh
xuan
thanhinthe
academythe
solution
architectdipak
girihow
to
run
technology_8
inside
technology_8
containerjournal
of
open
hwopen
hardware
distribution
&
documentation
work
group
interlude
—
adjust
the
compassjoseph
k
abeactive
associationscfpcarlawhat
be
tdd
and
it
benefitsrakesh
tripathipython
component_12
to
sort
the
connector_data_4
accord
to
the
column
use
lambdaabouthelptermsprivacyget
the
appget
startedzeba
rahman132
followersapp
developer
|
fabcoding
comfollowmore
from
mediumm
alfa
rizamake
car
rental
admin
use
technology_1
part
requirement_5
userwahyudibuild
web
component_9
sosmed
with
technology_1
part
upinderjitslaravel
8fickreey
hidayatcrazy
technology_1
livewire
make
me
easy
to
build
my
e
commerce
admin
panel
and
technology_9
part
helpstatuswritersblogcareersprivacytermsaboutknowable
