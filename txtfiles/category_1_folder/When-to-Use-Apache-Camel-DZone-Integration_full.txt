when
to
use
technology_1
technology_2
requirement_1
requirement_1
zone
thanks
for
visit
today
edit
profile
manage
subscription
how
to
to
submission
guideline
sign
out
pattern_1
profile
an
manage
my
draft
over
million
developer
have
join
requirement_2
in
join
refcardz
trend
report
webinars
zone
|
agile
requirement_3
requirement_4
requirement_5
component_1
devops
requirement_1
iot
technology_3
pattern_2
open_source
requirement_6
quality_attribute_1
web
dev
requirement_1
zone
when
to
use
technology_1
technology_2
when
to
use
technology_1
technology_2
when
to
use
technology_1
technology_2
a
popular
technology_4
technology_3
environment
and
when
to
use
other
alternative
by
kai
wähner
core
·
jun
·
requirement_1
zone
·
connector_1
tweet
33k
pattern_1
join
the
and
connector_2
the
full
member
experience
join
for
free
technology_1
technology_2
be
one
of
my
favorite
open_source
technology_5
in
the
technology_4
technology_3
environment
it
enable
easy
requirement_1
of
different
component_2
which
use
several
technology_6
and
technology_7
this
show
when
to
use
technology_1
technology_2
and
when
to
use
other
alternative
the
problem
requirement_7
component_3
requirement_1
eai
requirement_7
component_3
requirement_1
be
necessary
in
almost
every
requirement_8
due
to
technology_8
and
component_3
quality_attribute_2
these
component_2
create
several
problem
paradigm
come
up
every
decade
for
example
component_4
component_5
connector_3
pattern_3
architecture
technology_9
or
requirement_5
computing
besides
different
technology_6
and
technology_7
emerge
instead
of
connector_4
connector_data_1
in
in
the
past
many
year
ago
technology_10
component_1
be
use
often
today
sometimes
even
technology_11
component_1
be
require
in
some
usecases
pattern_4
remote
connector_data_2
or
pattern_5
pattern_6
be
use
to
connector_5
via
several
technology_7
such
a
technology_12
technology_13
web
component_6
pattern_7
or
technology_14
a
lot
of
silo
exist
nevertheless
all
component_2
and
technology_8
of
these
decade
have
to
connector_5
with
each
other
to
work
together
perfectly
requirement_7
requirement_1
pattern_8
eip
of
you
could
reinvent
the
wheel
for
each
problem
connector_6
some
spaghetti
and
the
component_2
work
together
unfortunately
your
requirement_9
will
not
the
long
term
perspective
of
this
solution
requirement_7
requirement_1
pattern_8
www
eaipatterns
technology_15
help
to
fragment
problem
and
use
standardize
way
to
quality_attribute_2
component_3
use
these
you
always
use
the
same
concept
to
transform
and
connector_7
connector_data_3
thus
it
be
a
quality_attribute_3
idea
to
forget
about
reinvent
the
wheel
each
time
you
have
a
problem
alternative
for
quality_attribute_2
component_7
three
alternative
exist
for
quality_attribute_2
component_3
eips
can
be
use
in
each
solution
solution
own
custom
solution
connector_8
a
individual
solution
that
work
for
your
problem
without
separate
problem
into
little
piece
this
work
and
be
probably
the
fast
alternative
for
small
use
requirement_10
you
have
to
all
by
yourself
quality_attribute_4
will
probably
be
high
if
team
member
connector_9
solution
requirement_1
technology_5
use
a
technology_5
which
help
to
quality_attribute_2
component_2
in
a
standardize
way
use
several
requirement_1
pattern_8
it
reduce
effort
a
lot
every
developer
will
easily
understand
what
you
do
if
he
the
use
technology_5
solution
requirement_7
component_6
bus
esb
use
an
requirement_7
component_6
bus
to
quality_attribute_2
your
component_3
under
the
hood
the
esb
also
u
an
requirement_1
technology_5
but
there
be
much
more
requirement_11
such
a
requirement_12
component_8
requirement_9
a
registry
or
requirement_12
activity
pattern_9
you
can
usually
configure
connector_10
and
such
stuff
within
a
graphical
component_9
–
you
have
to
decide
at
your
own
if
that
reduce
complexity
and
effort
usually
an
esb
be
a
complex
technology_8
the
curve
be
much
high
but
therefore
you
connector_2
a
very
powerful
technology_16
which
should
offer
all
your
need
what
be
technology_1
technology_2
technology_1
technology_2
be
a
lightweight
requirement_1
technology_5
which
connector_11
all
eips
thus
you
can
easily
quality_attribute_2
different
component_2
use
the
require
pattern_8
you
can
use
technology_3
technology_17
technology_18
technology_19
or
technology_20
almost
every
technology_7
you
can
imagine
be
quality_attribute_5
for
example
technology_21
technology_22
technology_14
technology_23
technology_24
technology_12
technology_14
technology_25
technology_26
technology_27
and
many
many
more
of
most
esbs
also
offer
support
for
them
besides
own
custom
component_10
can
be
create
very
easily
you
can
quality_attribute_6
technology_1
technology_2
a
standalone
component_3
in
a
web
container
e
g
technology_28
or
technology_29
in
a
jee
component_3
component_5
e
g
technology_30
a
or
technology_31
a
in
an
technology_32
environment
or
in
combination
with
a
technology_17
container
if
you
need
more
connector_data_4
about
technology_1
technology_2
please
go
to
it
web
a
start
point
technology_21
technology_2
technology_1
this
be
no
technical
introduction
j
when
to
use
technology_1
technology_2
technology_1
technology_2
be
awesome
if
you
want
to
quality_attribute_2
several
component_2
with
different
technology_6
and
technology_7
why
there
be
one
feature
besides
support
so
many
technology_7
and
besides
support
different
programming
technology_33
which
i
really
appreciate
a
lot
every
requirement_1
u
the
same
concept
no
matter
which
technology_6
you
use
no
matter
which
technology_7
you
use
no
matter
which
domain
specific
technology_33
dsl
you
use
–
it
can
be
technology_3
technology_34
technology_20
or
technology_17
technology_18
you
do
it
the
same
way
always
there
be
a
component_11
there
be
a
component_12
there
be
there
be
eips
there
be
custom
processor
component_13
e
g
for
custom
transformation
and
there
be
parameter
e
g
for
credential
here
be
one
example
which
contain
all
of
these
concept
use
the
technology_3
dsl
from
„activemq
orderqueue“
transaction
requirement_2
„processing
order“
to
mock
“notyetexistinginterface“
now
let’s
look
at
another
example
use
the
technology_19
dsl
„file
incomingorders
noop=true“
component_8
transformationprocessor
to
„jdbc
orderdatastore“
if
you
be
a
developer
you
should
be
able
to
recognize
what
these
connector_12
do
don’t
you
two
other
very
important
feature
be
the
support
for
error
handle
e
g
use
a
dead
letter
component_14
and
automatic
test
you
can
test
everything
very
easily
use
a
technology_2
extension
of
junit
and
again
you
always
use
the
same
concept
no
matter
which
technology_7
you
have
to
support
technology_1
technology_2
be
mature
and
production
ready
it
offer
quality_attribute_7
transaction
support
pattern_10
and
pattern_9
commercial
support
be
quality_attribute_5
by
fusesource
technology_21
fusesource
technology_15
technology_8
requirement_7
technology_2
when
not
to
use
technology_1
technology_2
well
yes
there
exist
some
use
requirement_10
where
i
would
not
use
technology_1
technology_2
i
have
illustrate
this
in
the
follow
graphic
remember
the
three
alternative
i
mention
above
own
custom
requirement_1
requirement_1
technology_5
requirement_7
component_6
bus
if
you
have
to
quality_attribute_2
one
or
two
technology_7
e
g
connector_13
a
or
connector_14
a
technology_35
connector_data_3
it
be
probably
much
easy
and
fast
to
use
some
well
technology_36
such
a
technology_1
technology_37
io
or
technology_17
jmstemplate
but
please
do
always
use
these
helper
pure
or
technology_35
requirement_1
with
try
catch
error
be
soooo
ugly
although
fusesource
offer
commercial
support
i
would
not
use
technology_1
technology_2
for
very
large
requirement_1
project
an
esb
be
the
right
technology_16
for
this
in
most
requirement_10
it
offer
many
additional
feature
such
a
bpm
or
bam
of
you
could
also
use
several
single
technology_5
or
technology_8
and
„create“
your
own
esb
but
this
be
a
waste
of
time
and
money
in
my
opinion
several
production
ready
esbs
be
already
quality_attribute_5
usually
open_source
solution
be
more
lightweight
than
commercial
technology_8
such
a
technology_31
connector_data_3
pattern_11
you
probably
need
a
day
or
two
to
install
the
evaluation
version
of
this
technology_8
well
open_source
esbs
be
technology_1
servicemix
technology_38
esb
and
technology_39
esb
by
the
way
do
you
that
some
esb
base
on
the
technology_1
technology_2
technology_5
e
g
technology_1
component_6
mix
and
the
talend
esb
thus
if
you
technology_1
technology_2
you
could
also
use
technology_1
servicemix
or
the
commercial
fuse
esb
which
be
base
on
servicemix
conclusion
technology_1
technology_2
be
an
awesome
technology_5
to
quality_attribute_2
component_2
with
different
technology_7
the
best
thing
be
that
you
always
use
the
same
concept
besides
support
for
many
many
technology_7
quality_attribute_3
error
handle
and
easy
automatic
test
make
it
ready
for
requirement_1
project
because
the
number
of
component_2
and
technology_7
in
each
requirement_8
will
increase
further
technology_1
technology_2
have
a
great
future
today
we
have
component_3
silo
in
ten
year
we
will
probably
have
requirement_5
silo
which
be
quality_attribute_6
in
goggle
component_15
component_16
technology_40
ec3
or
any
other
requirement_5
component_6
so
i
hope
that
technology_1
technology_2
will
not
oversleep
to
be
ready
for
the
requirement_5
era
too
e
g
by
offer
component_10
to
connector_15
to
requirement_5
technology_5
easily
but
that’s
future…
at
the
moment
you
really
should
try
this
technology_5
out
if
you
have
to
quality_attribute_2
component_2
in
the
technology_4
technology_3
environment
by
the
way
i
that
i
praise
technology_2
in
this
but
i
be
neither
a
technology_2
committer
nor
work
for
fusesource
i
really
this
technology_5
technology_1
technology_2
requirement_7
component_6
bus
component_3
requirement_7
requirement_1
open_source
it
technology_5
domain
specific
technology_33
requirement_7
component_3
requirement_1
concept
generic
programming
opinion
express
by
contributor
be
their
own
popular
on
debug
the
technology_3
connector_data_3
component_6
technology_14
component_17
use
lightrun
functional
vs
non
functional
requirement
the
full
guide
definition
and
technical
example
extraordinary
terraform
best
practice
that
will
connector_9
your
infra
world
role
of
development
team
in
an
agile
environment
requirement_1
partner
resource
x
about
u
about
connector_16
feedback
career
sitemap
advertise
advertise
with
contribute
on
submission
guideline
mvb
component_18
become
a
contributor
visit
the
writer
zone
legal
term
of
component_6
privacy
requirement_13
u
park
office
drive
suite
durham
nc
support@dzone
technology_15
+1
s
be
friend
technology_15
be
powered
by
