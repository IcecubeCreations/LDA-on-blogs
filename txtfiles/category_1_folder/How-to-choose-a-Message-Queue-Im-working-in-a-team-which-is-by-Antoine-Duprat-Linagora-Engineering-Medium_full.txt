how
to
choose
a
connector_data_1
component_1
i’m
work
in
a
team
which
is…
|
by
antoine
duprat
|
linagora
engineering
|
mediumget
unlimited
accessopen
in
apphomenotificationslistsstorieswritepublished
inlinagora
engineeringantoine
dupratfollowfeb

2018·4
min
readhow
to
choose
a
connector_data_1
queuei’m
work
in
a
team
which
be
develop
a
mail
component_2
james
this
project
be
a
subpart
of
the
openpaas
project
involve
multiple
team
in
this
mail
component_2
we
need
to
connector_1
a
quality_attribute_1
mail
component_1
a
mail
component_1
be
a
mandatory
component_3
of
technology_1
component_2
it
allow
uncouple
connector_2
connector_data_2
from
their
component_4
the
current
implementation
rely
on
an
embed
technology_2
component_2
with
decade
old
technology_3
implementation
time
have
come
for
a
little
lift
up
but
a
mail
component_1
be
a
complex
system…
not
only
should
it
be
an
quality_attribute_2
work
component_1
but
also
many
additionnal
feature
should
be
connector_1
priority
you
might
want
to
give
a
high
priority
to
your
organisation

compare
to
spamdelays
maybe
you
don’t
want
to
connector_3
too
much
mail
at
once
maybe
you
need
to
wait
a
bit
before
re
connector_3
an
to
a
remote
mail
component_2
in
requirement_1
of
errors…management
mail
component_2
administrator
expect
to
inspect
the
content
of
the
mail
component_1
remove
the
element
they
want
amongst
other…we
could
not
connector_1
it
in
a
straightforward
and
production
grade
fashion
on
top
of
technology_4
thus
we
decide
to
look
for
alternative
solution
and
connector_data_1
component_1
every
openpaas
team
be
use
connector_data_1
component_1
we
have
to
choose
the
one
that
quality_attribute_3
fit
people
need
define
requirementsthe
first
step
be
to
about
the
requirement
of
each
team
then
to
summarize
them
in
order
to
perform
this
we
decide
to
each
team
leader
we
define
a
connector_data_3
of
topic
to
discus
feature
they
connector_1
and
will
connector_1
on
top
of
a
connector_data_1
queuelimitations
they
currently
encounterexperience
with
this
connector_data_1
component_1
technologywe
digged
quite
far
and
discuss
some
pattern_1
topic
at
least
once
vs
at
most
onceavailability
vs
consistencymanagement
capabilites
component_1
size
browse
…as
a
conclusion
openpaas
be
abstract
the
connector_data_1
component_1
technology_5
behind
a
pattern_2
technology_6
this
component_5
allow
one
to
do
pattern_3
to
specific
topic
to
perform
pattern_4
and
to
connector_4
work
use
work
component_1
openpaas
also
us
the
connector_data_1
component_1
to
allow
some
component_6
to
connector_5
between
them
this
include
connector_data_4
from
the
mail
component_2
jamesfrom
the
calendar
component_7
sabre
from
the

servicemost
of
our
use
requirement_1
be
rely
on
at
least
one
delivery
but
some
of
them
would
benefit
from
an
exactly
once
semantic
we
tend
to
favor
consistency
and
want
a
much
requirement_2
capability
a
we
can
this
allow
u
to
extract
core
requirement
we
need
basic
pattern_2
capabilitieswe
need
consistency
at
least
one
semanticas
a
bonus
advance
requirement_2
capabilitiesbut
we
also

some
criterion
which
be
not
subject
to
the

maturity
of
the
projectcommunityperformances
…hopfully
after
run
the

there
be
no
contradiction
such
a
one
team
need
quality_attribute_4
and
an
other
one
consistency
those

help
u
a
lot
in
order
to
exclude
some
implementation
from
our
final
choice
short
listthere
be
so
many
connector_data_1
component_8
implementation
that
we
decide
to
limit
the
number
of
candidate
here
be
the
connector_data_3
of
the
selected
for
study
rabbitmqkafkarocketmqqpidartemisnsqzeromqi
will
present
here
the
one
that
catch
our
attention
the
most
technology_4
be
the
connector_data_1
component_1
currently
be
use
by
openpaas
so
no
migration
would
be
necessary
it
offer
a
quality_attribute_3
and
mature

some
problem
regard
cluster
have
be
report
include
connector_data_1
loss
and
manual
reconciliation
upon
component_9
the
bad
point
of
this
solution
be
that
it
doesn’t
fit
the
advance
requirement_2
feature
need
by
james
we
selected
it
for
further
investigation
and
the
quality
of
it
documentation
have
be
a
decisive
factor
technology_7
be
a
cut
edge
connector_6
component_10
it
fulfill
the
connector_data_5
feature
a
it
connector_7
a
quality_attribute_1
requirement_3
some
feature
of
a
mail
component_1
be
easy
to
connector_1
it
be
strong
and
mature
and
it
be
think
to
cluster
a
a
primary
concern
replay
be
a
core
concept
however
it’s
architecture
be
complex
and
involve
a
technology_8
quorum
we
selected
it
a
well
rocketmq
be
a
promissing
newly
bear
technology_9
project
however
despite
quality_attribute_3
requirement_4
and
an
impressive
feature
set
the
be
not
very
mature
mostly
center
around
the
alibaba
requirement_5
the
project
be
still
under
development
so
we
concidered
despite
all
of
it
advantage
choose
it
would
not
be
a
wise
choice
artemis
be
the
hornetq
donate
to
the
technology_9
foundation
and
adopt
by
the
technology_2
project
a
rock
solid
connector_data_1
component_1
but
sadly
cluster
it
be
hard
some
old
school
techonogies
include
technology_10
be
involve
thus
we
decide
to
not
investigate
further
nsq
be
decentralized
pattern_2
component_7
the
pattern_2
pattern_5
we
want
be
support
but
only
a
hack
allow
to
gain
*durability*
cluster
be
a
primary
citizen
concept
but
at
the
cost
of
feature
technology_11
be
not
support
replay
neither
we
decide
it
be
not
worth
pay
the
cost
of
a
migration
to
it
and
then
we
to
choosethe
war
be
rag
between
technology_7
and
technology_4
none
of
the
above
present
technology_5
allow
to
fulfill
james
need
in
a
satisfy
manner
while
fit
our
production
technology_12
thus
we
decide
to
exclude
james
feature
from
the
choice
the
mail
component_1
advance
capability
will
be
connector_1
with
a
connector_data_1
component_1
component_11
combinaison
our
strategy
then
become
explore
with
a
poc
the
limitation
regard
technology_4
use
we
provide
a
poc
of
openpaas
use
requirement_1
on
top
of
rabbitmqwe
conduct
experiment
on
top
of
a
dockerized
technology_4
cluster
stop
technology_13
produce
and
connector_8
on
differents
technology_13
declare
exchange
and
component_8
on
different
technology_13
we
test
quality_attribute_5
production
consumption
order
a
strategic
meet
will
then
tell
if
we
would
to
perform
the
move
to
technology_7

5more
from
linagora
engineeringwe
be
open_source
engineer
hack
awesome
stuffread
more
from
linagora
engineeringrecommended
from
mediumsahil
satralkarentity
relationship
in
core
dataercan
ermisdownload
specific
extension
via
wgetj
lisystem
design
prep
how
to
build
a
component_7
to
handle
long
run
jobandrew
koneckiudacity
—
gwg
—
bake
component_12
day

milad
shiria
complete
guide
to
quality_attribute_6
a
full
technology_14
component_13
base
on
technology_15
and
vuejs
technology_15
and
vue…gordon
styronusing
technology_16
to
help
huntnisali
kularatnechallenges
of
quality_attribute_7
with
third
party
api’s
of
corporate
requirement_5
and
how
to
handle
themdavid
w
suttonzero
to
hero
the
story
of
technology_14
overflowabouthelptermsprivacyget
the
appget
startedantoine
duprat63
followersdev
technology_17
@linagora
technology_18
technology_9
james
pmcfollowmore
from
mediumyasser
karimienterprise
component_13
—
part

performancejeya
lakshmi
authithanintegrating
rest
component_5
with
bpmnravindu
yasith
t
k
technology_19
databasejackiemicroservies
in
monorepohelpstatuswritersblogcareersprivacytermsaboutknowable
