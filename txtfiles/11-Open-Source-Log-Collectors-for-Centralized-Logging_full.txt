 











11 Open Source Log Collectors for Centralized Logging






























 


















 

 

















Start Here 





Articles 





Tools 





Deals 





API 





Compiler 







 English  French  Spanish  German  Italian



 



 


 



 


 



 

 












Geekflare Articles 


















 

DevOps 














 

Cloud Computing 















 

Security 















 

Sysadmin 
















 

Development 


















 

Smart Things 















 

Growing Business 





Explore 1900+ Articles 

 






Geekflare Tools 




 

Website Audit 



















 

TTFB Test 





 

TLS Scanner 





 

WordPress Scanner 





 

DNS Lookup 
















 

Secure Headers Test 





 

Screenshot 





Explore 35+ Tools 

 






Geekflare API 















 

DNS Lookup 















Is Site Up? 

















 

Lighthouse 












 

Loadtime 





 

Screenshot 












 

TLS Scan 





















Broken Link 





Explore 20+ APIs 

 






Join Geekflare Newsletter 












All
DevOps
Development
Cloud Computing
Database
Growing Business
Digital Marketing
Security

Join Newsletter 






Follow Geekflare on 




 





 





 













Start Here 

 





Articles 

 





Tools 

 





Deals 

 





API 

 





Compiler 

 















 







11 Open Source Log Collectors for Centralized Logging 



 

By 
Ankush 
in 
Sysadmin 
on May 3, 2021 






 





 





 





 






Geekflare is supported by our audience. We may earn affiliate commissions from buying links on this site. 

 






Invicti Web Application Security Scanner - the only solution that delivers automatic verification of vulnerabilities with Proof-Based Scanning‚Ñ¢. 


The difference between mediocre products and great products is logging. Learn why it‚Äôs so, and how to tie it all together.
Just like security, logging is another key component of web applications (or applications in general) that gets sidelined because of old habits and the inability to see ahead. What many see as useless reams of digital tape are powerful tools to look inside your applications, correct errors, improve weak areas, and delight customers.
Before we get on to centralized logging, let‚Äôs first look into why logging is such a big deal.
Two types (levels) of logging
Computers are deterministic systems, except when they‚Äôre not.
As a professional developer, I‚Äôve come across many cases where the observed behavior of the app baffled everyone for days on end, but the key was always in the logs. Every piece of software we run produces (or at least should generate) logs, which tell us what it was going through when the problematic situation occurred.
Now, logging, as I see it, is of two types: auto-generated logs and programmer-generated logs. Please note that this isn‚Äôt any textbook differentiation, and quoting me on this terminology will land you in trouble. üòâ

The image above shows what can be termed as an auto-generated log.
In this specific case, it‚Äôs a WordPress system logging an unexpected condition (a Notice) when running some PHP code. Logs like these are being generated all the time tirelessly ‚Äî by database tools like MySQL, web servers like Apache, programming languages and environments, mobile devices, and even operating systems.
These rarely contain much value, and programmers¬†don‚Äôt even bother to look into them, except when something goes wrong. At such moments, they dig deep into the logs, trying to understand what went wrong.
But auto-generated logs can help only so much. If several people have admin access to a site, for example, and one of them happens to delete an essential piece of information, it‚Äôs impossible to detect the culprit with the use of auto-generated logs. From the perspective of the systems tied together as the application, it was just another day in the job ‚Äî someone had the needed authority to execute a task, and so the system carried it out.
What‚Äôs needed here is an additional layer of explicit, extensive logging that creates trails for the human side of things. These are what I term as programmer-generated logs, and they form the backbone of sensitive industries like banking. Here‚Äôs an example of what such a logging scheme might look like:
Source: joomlatools.com
Logging is power
So, given these two types of logs in a system, here‚Äôs how you can leverage them and ramp up the impact.
Staying ahead of the customer
‚ÄúCustomer delight‚Äù has come to be known as a useless marketing gimmick, but thanks to logging, it can be made very real. I know of digital products that monitor their logs like a hawk, and as soon as a customer breaks something on the page, they can call the customer and offer to help.

Just think about it ‚Äî within seconds of getting an ugly error, you get a call from the company that says, ‚ÄúHey, I understand you were trying to add this item to the cart, but it kept dying. Is it okay for me to add this time and complete the order for you?‚Äù
Delighted customer? You bet!
Team morale and productivity
Like I said before, when bugs go untracked for a long time, the developers in your team get frustrated and lose more and more time chasing their tails. And here‚Äôs the thing with debugging ‚Äî it requires a fresh, curious mind from the start. If a WTF thought so much as enters your brain, the whole process goes for a toss.

And what makes debugging hard? In my experience, lack of logging, or the lack of knowledge of logging. For starters, you may not realize that your favorite database is also just another piece of software that generates logs, or you not be logging extensively in your application (see programmer-generated logs above).
I particularly remember a case where the application was going unresponsive, and no one knew why. A few days later, the culprit was the disk I/O limit reached due to excessive traffic. Because no one bothered to look there, no one could figure out why.
Audit trails
What if two years down the line your customer says that all those orders weren‚Äôt placed by them but by some hacker?
What argument would have to entertain or reject their request? If you have extensive logging (IP address, date and time, credit card, etc.), then you‚Äôll be able to analyze all that and reach a decision. Good or bad, it will at least have some objective basis, rather than resembling a shot in the dark.
Source: signature-reads.com
The same is true if you come under some regulatory lens or are required to undergo a third-party audit as part of a new, important project. Not having a robust logging system will show you in a bad light.
Improving existing systems
How do you go about improving the current system?
Should you merely throw more RAM and CPU threads at it? What if your app is slow despite enough resources? Where is the bottleneck? More often than not, logging is the answer.
For instance, all major database systems have a feature for logging¬†slow queries.
Source: speedawarenessmonth.com
If you visit the slow query log regularly, you‚Äôll get to know which operations and taking the most time, and hence uncover small but important areas that need work. Often, a small change like this works better than doubling the hardware capacity.
There‚Äôs no counting how many ways a good logging system helps you. Perhaps the best argument is that it‚Äôs an automated activity that once set up, doesn‚Äôt need any monitoring, and will save you from ruin someday.
With that out of the way, let‚Äôs look at some of the amazing Open Source Log Collectors (unified logging tools) out there. Just in case you‚Äôre wondering, we did cover commercial cloud-based logging tools in an earlier post.
Graylog
Graylog is one of the leading names in the industry when it comes to industry-grade logging and visualization capabilities. It‚Äôs also unique in that it scans your collected logs for signs of security vulnerabilities and notifies you instantly.
While Graylog is a centralized logging system, it has the flexibility you need, letting you customize alerts, dashboards, and more.

Greylog is open-source, but there‚Äôs an enterprise plan if your needs are complex.
With clients like SAP, Cisco, and LinkedIn on its roster, Graylog is a tool you can trust with your eyes closed.
Logstash
If you‚Äôre a fan or user of the Elastic stack, Logstash is worth checking out (the ELK stack is already a thing, in case you didn‚Äôt know). Like other logging tools on this list, Logstash if fully open-source, allowing you the freedom to deploy and use as you wish.

But don‚Äôt be misled: Logstash is a mothership with capabilities far outweighing any humble logging tool. It‚Äôs able to collect vast amounts of data from multiple platforms, allows you to define and execute your own data pipelines, make sense of unstructured log dumps, and more.
Of course, the only limitation is that it works with the Elastic suite of products only, but if you‚Äôre starting and looking to scale soon, Logstash is the way to go!
Fluentd
Among centralized logging tools that work as a middle layer for data ingestion, Flutend is a first among equals. With an excellent library of plugins, Fluentd is able to capture data from virtually any production system, knead it into the desired structure, build a custom pipeline, and feed it to your favorite analytics platform, be it MongoDB or Elasticsearch.

Fluentd is built on Ruby, is entirely open source, and is extensively popular because of its flexibility and modularity.
With major companies like Microsoft, Atlassian, and Twilio using the platform, Fluentd has nothing to prove. üôÇ
Flume
If really, really large data sets are your challenge, and you eventually want to feed everything into something like Hadoop, Flume is one of the best choices around. It‚Äôs a ‚Äúpure‚Äù open source project, in the sense that it‚Äôs maintained by our beloved Apache Foundation, which means there is no enterprise plan.
This may or may not be what you‚Äôre exactly looking for. üôÇ
Source: beyondcoder.com
Written in Java (which continues to astonish me when it comes to groundbreaking tech), Flume‚Äôs source code is entirely open. Flume is best for you if you‚Äôre looking for a distributed, fault-tolerant data ingestion platform for heavy-duty stuff.
Octopussy
I give it zero out of ten for product naming, but Octopussy can be a good choice if your needs are simple, and you‚Äôre wondering about what all the fuss related to pipelines, ingestion, aggregation, etc., is all about.
In my opinion, Octopussy covers the needs of most of the products out there (estimated stats are useless, but if I had to guess, I‚Äôd say it takes care of 80% of use cases in the real world).

Octopussy doesn‚Äôt have a great UI (see here) at all, but it makes up for it regarding speed and lack of bloat. The source is available on GitHub, as expected, and I do think it‚Äôs worth a serious look.
Rsyslog
Rsyslog stands for a rocket-fast system for log processing.
It is a utility for Unix-like operating systems. In technical terms, it is a message router with dynamically loadable inputs and outputs and is highly configurable.
It can take input from multiple data sources, transform it, and send the output to several destinations. With Rsyslog, you can deliver 1 million messages per second over local destinations.

Rsyslog also provides a Windows agent that works very closely with the Rsyslog Linux agent. It is used for integration between the two environments. This windows agent is used to forward the event logs of windows and setup file monitor service.
Below are other features offered by Rsyslog:

Flexible configurations
Provides multi-threading capabilities
Log file manipulation protection using log signatures and encryption.
Supports Big Data platforms
Provides content-based filtering capabilities

LOGalyze
LOGalyze was a commercial product that was recently made open source. Though I couldn‚Äôt the project on GitHub, they do make a Windows installer and all source code downloadable.
If you‚Äôre intent on a community, you can find details of a mailing list here.

LOGalyze is a relatively flexible and powerful offering that will work nicely for single-system deployments that seek to combine logging from known sources like Postfix, Apache, etc., and produce the output in CSV, PDF, HTML or similar formats.¬† Yes, it doesn‚Äôt do everything, but since it was a commercial product at one time, it does so rather well.
Grafana Loki
Inspired by Prometheus, Grafana Loki is a multi-tenant log aggregation solution.

Loki solution is cost-effective, it indexes metadata only and can be plugged into a popular system like Kubernetes, Prometheus, Linux, SQL, etc. You can check out this getting started guide to install and see yourself how it works.
Logwatch
I‚Äôm sure there are those among us who don‚Äôt want all the ceremony associated with a ‚Äúunified,‚Äù ‚Äúcentralized‚Äù logging system. Their business comes from single servers, and they‚Äôre looking for something quick and efficient for watching their log files. Well, say hello to Logwatch.
Once installed, LogWatch can scan your system logs and create a report of the type you want. It‚Äôs a somewhat dated piece of software (read ‚Äúreliable‚Äù), though, and was written in Perl. So, you‚Äôll need Perl 5.6+ on your server to run it. I don‚Äôt have any screenshots to share as it‚Äôs a purely command line, daemonized process.
If you‚Äôre a CLI junkie and have a love for the old-school way of doing things, you‚Äôll love Logwatch!
Syslog-ng
The Syslog-ng tool was developed as a way to process Syslog¬†(an established client-server protocol for system logging) data files in real-time. Over time, though, it has come to support other data formats: unstructured, SQL, and NoSQL. How the¬†Syslog¬†protocol works are pretty much summed up neatly in the following illustration.

syslog-ng is a production-grade, reliable log collection and classification tool that was written in C and has been an established name in the industry for long. The best part is its extensibility, allowing you to write plugins in C, Python, Java, Lua, or Perl.
lnav
Short for (Log Navigator), lnav¬†is a pure-terminal tool that works on a single machine, single directory. It‚Äôs for those who have their logging unified into a single directory or want to filter and display real-time logs from a single source.

If you thought lnav was nothing more than glorified tailf |grep¬†you‚Äôd be wrong. There are several features that will make you fall in love with it: time-series view, pretty-printing (for JSON and other formats), color-coded log sources, powerful filters, ability to understand several logging protocols, and more.
It‚Äôs just that sometimes you want a zero-hassle, zero setup, maybe-temporary logging layer, and lnav fits the bill perfectly!
Conclusion
And there you have it!
It was a hard list to compile, to be frank, as logging isn‚Äôt as popular as, say, content management, and all mindshare seems to have been grabbed by three or four tools. Still, everyone‚Äôs needs are different, and I‚Äôve tried to cover them extensively.
From silly command-line, no-setup tools to full-blown data juggernauts, it‚Äôs all here!
Next, explore some of the best profiling software to optimize the application.



Enjoyed reading the article? How about sharing with the world? 





 





 





 





 







Tagged in:



Monitoring 





Open Source 






More great readings on Sysadmin 




 



7 Best Server Configuration Monitoring and Auditing Tools 


Talha Khalid on May 24, 2022 






 



8 Best FTP Server Software for Windows for Secure Transfer 


Satish Shethi on May 24, 2022 






 



OSI Model Layers: An Introduction Guide 


Amrita Pathak on May 13, 2022 






 



How to Scan and Fix Log4j Vulnerability? 


Amrita Pathak on May 10, 2022 






 



What is Network Latency and How to Improve It? [2022] 


Hitesh Sant on May 6, 2022 






 



8 Best NetFlow Analyzers and Collector Tools for Your Network 


Ashlin Jenifa on May 7, 2022 







Join Geekflare Newsletter 

Every week we share¬†trending articles¬†and¬†tools¬†in our newsletter. More than 10,000 people enjoy reading, and you will love it too. 












All
DevOps
Development
Cloud Computing
Database
Growing Business
Digital Marketing
Security

Join Newsletter 









More great readings on Sysadmin 





7 Best Server Configuration Monitoring and Auditing Tools 



7 Best Server Configuration Monitoring and Auditing Tools 







8 Best FTP Server Software for Windows for Secure Transfer 



8 Best FTP Server Software for Windows for Secure Transfer 







OSI Model Layers: An Introduction Guide 



OSI Model Layers: An Introduction Guide 







How to Scan and Fix Log4j Vulnerability? 



How to Scan and Fix Log4j Vulnerability? 







What is Network Latency and How to Improve It? [2022] 



What is Network Latency and How to Improve It? [2022] 







8 Best NetFlow Analyzers and Collector Tools for Your Network 



8 Best NetFlow Analyzers and Collector Tools for Your Network 









 








Thanks to our sponsors 


































 











Power Your Business 


Here are some of the tools and services to help your business grow. 












Invicti uses the Proof-Based Scanning‚Ñ¢ to automatically verify the identified vulnerabilities and generate actionable results within just hours. 


Try Invicti 

 













Web scraping, residential proxy, proxy manager, web unlocker, search engine crawler, and all you need to collect web data. 


Try Brightdata 

 













Vultr features the latest generation CPUs and an intuitive control panel, along with 100% KVM virtualization. 


Try Vultr 

 













Semrush is an all-in-one digital marketing solution with more than 50 tools in SEO, social media, and content marketing. 


Try Semrush 

 











Explore 50+ resources 













Products 




Geekflare API 





Geekflare Tools 





Newsletter 





Tech Articles 





Finance Articles 





Compiler 






Company 




Advertise 





About 





Hiring 





Terms 





Privacy 





Disclosure 





Sitemap 





RSS Feed 






Geekflare Articles 




DevOps 





Cloud Computing 





Security 





Sysadmin 





Development 





Smart Things 





Growing Business 






Geekflare Tools 




Website Audit 





TTFB Test 





TLS Scanner 





WordPress Scanner 





DNS Lookup 





Secure Headers Test 





Screenshot 






Geekflare API 




DNS Lookup 





Is Site Up? 





Lighthouse 





Loadtime 





Screenshot 





TLS Scan 





Broken Link 














¬© 2022 ¬∑ Geekflare 





 





 





 



























