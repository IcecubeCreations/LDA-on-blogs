











The JSON License and the problem with "Good" and "Evil" | Synopsys























































 












 Application Security 

















 Application Security
 | Build trust in your software





Support


About Us




English


日本語


Blog Home
Managing security risks
Building secure software
Open source and software supply chain risks
Security news and research







close search bar


















Sorry, not available in this language yet




close language selection





English


日本語





















Managing security risks
Building secure software
Open source and software supply chain risks
Security news and research
 







Application Security Blog













Search


















Home
Application Security
Blog




« Previous: Lessons learned from 2016's…
Next: How to prevent SQL injection… »

 



The fly in the ointment of the JSON license
Posted by Synopsys Editorial Team on Thursday, December 8, 2016


 
Use of some JSON projects is limited by the JSON License, which has a problematic, ambiguous clause. The Apache Foundation recently reexamined the issue.

JSON (JavaScript Object Notation) is an extremely flexible, lightweight format for exchanging data of all sorts. It lives up to JSON.org’s description as “an ideal data-interchange format.” But use of some JSON projects is limited by the JSON License. Concern with the license is not new, but the issue has recently been reexamined by the Apache Foundation, and the discussion is a good reminder of the importance of license selection and a caution against “rolling your own.”
The troublesome JSON License clause
The JSON License (read the whole text here) is typical of permissive licenses, with a grant of broad rights, an obligation of attribution, and a disclaimer of liability. Great stuff so far. The fly in the ointment is a little, nine-word addition: “The Software shall be used for Good, not Evil.” “Software” is a defined term. “Good” and “Evil” are not. And therein lies the problem.
Actually, defined or not, this clause is enough to disqualify the JSON License as an open source license per se. Point 6 of the Open Source Initiative (OSI) definition of an open source license is “No Discrimination Against Fields of Endeavour,” which would include evil ones. Although the OSI has approved fewer than 80 licenses, we track over 2,500 licenses in the Black Duck KnowledgeBase, our open source database. Many, like the JSON License, are minor variations on more common licenses.
The Apache Foundation
My sense is that the Apache Foundation, in its license selection, is not so much focused on the lack of OSI approval. Rather, the concern is its ambiguity, Evil clearly being in the mind of the beholder. Some time ago, the foundation justified inclusion of code with the JSON License, on the basis that the Good/Evil clause is “clearly a joke.” But they raised the issue again six weeks or so ago, on the basis that downstream attorneys may not get the joke, thus hindering adoption. And Apache is all about encouraging adoption. Rethinking the decision, they have moved the license to Category X. And they are working to remove any JSON-licensed components from Apache projects.
Use of the JSON License
The JSON License is not among the top licenses we see, but JSON-licensed components are embedded in over 2,300 projects tracked in the Black Duck KnowledgeBase, including some very popular ones, like Perl, Lucene, and Solr. It also turns up in components of some versions of the Java software development kit and runtime environment. So if you are running a Java application, don’t be Evil.
Reining in license proliferation
License proliferation was a big topic 10 years ago. The OSI and the community, in general, have done a good job reining that in. The top 20 licenses cover approximately 98% of the open source out there, so an attorney familiar with a relatively small number licenses is in pretty good shape. But clearly there’s a long, long tail of nonstandard licenses that adopters of software must contend with. One common source of variants, as in the JSON License case, is adding restrictions to a common license. Many, like this one, are not ill-intended. Some licenses, for example, disallow use by companies that use animals for testing or those involved with nuclear power.
Why popular licenses drive adoption
However, understanding the desire for individuality, it’s still a bad idea to invent your own license. There are plenty of official open source licenses from which to choose. Most people or organizations that make their work available as open source want to see adoption. Picking a popular license will help to encourage developers to adopt. In addition, working from a common, standard open source license greatly reduces the burden on lawyers with respect to their review and interpretation of such license. To give a sense for the friction that can come with a custom license, this discussion has, in recent weeks, generated literally hundreds of emails for the Apache Foundation.
Business users of software, too, should be mindful of the rights and obligations of licenses in the products they consume to ensure there are no unusual clauses that could interfere with their use of the software.



            This post is filed under Open source and software supply chain risks.
    
 





        
     Synopsys Editorial Team     
     


Posted by
Synopsys Editorial Team












SEE AUTHOR ARCHIVE







More from Open source and software supply chain risks






  


AppSec Decoded: Managing software supply chain risks

Posted by Synopsys Editorial Team on May 23, 2022
Software composition analysis








  


AppSec Decoded: Open source trends uncovered in the 2022 OSSRA report

Posted by Synopsys Editorial Team on May 4, 2022









  


2022 OSSRA discovers 88% of organizations still behind in keeping open source updated

Posted by Fred Bals on April 12, 2022









  


AppSec Decoded: Is an SBOM a silver bullet for software supply chain security?

Posted by Synopsys Editorial Team on April 5, 2022
Software compliance,  quality,  and standardsSoftware composition analysis












Subscribe


















Thanks for subscribing to the Synopsys Integrity Group blog. You’ll receive your welcome email shortly. In the meantime, please enjoy a complimentary copy of the Gartner Magic Quadrant for Application Security Testing.























Get the OSSRA report










Related Tags





M&A and OSS license compliance
Mergers and acquisitions due diligence
Open source license compliance





Agile,  CI/CD,  and DevOps
API security testing
Application security best practices
Application security orchestration and correlation
Application security program strategy and planning
Application security threat and risk assessment
Automotive cyber security
Cloud cyber security
Container security
Cybersecurity Research Center
DevSecOps
Dynamic application security testing
Financial cyber security
Fuzz testing
Healthcare cyber security
Interactive application security testing
Internet of Things cyber security
M&A and OSS license compliance
Medical devices cyber security
Mergers and acquisitions due diligence
Mobile application security
Open source license compliance
Penetration testing
Public sector cyber security
Security and developer training
Software compliance,  quality,  and standards
Software composition analysis
Software Integrity Group’s products and services
Static application security testing
Telecommunications and network cyber security
Threat modeling
Web application security





SEE ALL TAGS










 

 





Footer













Products 

Application Security
Semiconductor IP
Verification
Design
Silicon Engineering



Resources

Solutions
Services
Support
Community
Manage Subscriptions



Corporate

About Us
Careers
CSR Report
Inclusion & Diversity
Investor Relations
Contact Us





Legal

Privacy
Trademarks & Brands
Software Integrity Agreements



Follow










Follow








            ©2022 Synopsys, Inc. All Rights Reserved
          





















