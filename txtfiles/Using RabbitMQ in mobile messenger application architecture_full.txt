
















Using RabbitMQ in mobile messenger application architecture






























































































Contact Us







Search for:


✕

✕
Show results →





 


 





Smartym Pro
 / 
Blog
 / 
Mobile
 / 













 



18 

July 



Using RabbitMQ in chat applications and messenger app architecture 

Mobile messengers have become very popular recently. At the moment, there are plenty of mobile messengers, such as Viber, WhatsApp, or Telegram, each having its pros and cons.
Certainly, in order to take a high place among popular messengers, an application must not only have a perfect design and reliable performance but also be easily scalable and able to support heavy loads with the increase of user base.
Implementing such functionality is a real challenge since it requires not only a lot of time for development and testing, and high qualification of developers, but also integration with reliable platforms for message delivery.
In our case, the best way was to use an open-source message broker RabbitMQ which supports different protocols of message delivery and has plenty of client libraries allowing to integrate it with popular mobile platforms (Android, iOS).
This solution allowed us to pay more attention to architecture and business logic development and ensure stable work of messages delivery and easy scaling.
According to RabbitMQ tutorial, it allows easy implementation of the following functions:
– group chats;
– message delivery check;
– receiving a message from the user while offline;
– receiving a message on all client applications at the same time (iOS, Android);
– preventing unnecessary messages sending, as well as message delivery optimization in case of disconnection from RabbitMQ, e.g. during Internet cut-off.
At the same time, the development process always has some challenges. For example, during the development process, our team had to implement communication of RabbitMQ with the server side, as well as communication with an Android application using AMQP protocol.
At first, we were planning to use AMQP Objective-C wrapper for librabbitmq-c library for iOS, but it turned out to have lots of latent problems and bugs – this problem was solved by replacing AMQP protocol with MQTT. One should note that we didn’t have such difficulties with the client library on Android.
Also, we had a challenge of correct message delivery configuration, which required the right choice of Quality of service (QoS). As a result, we developed a reliable system supporting heavy loads and their increase due to the expansion of the user base and user activity peaks.
Using RabbitMQ in message application architecture helps to solve the problem of message delivery with the support of multi-user conversations and users with several clients switched on at the same time, with writing a minimum of code in the server application.
Thus, RabbitMQ message broker is an effective solution for messenger development and implementation of many other tasks related to IoT. It completely solves the issue of communication with the application, which allows to pay more attention and dedicate more time to business logic implementation of the messenger app.
In case you are interested in creating a  messaging app, we have deep expertise in mobile development. Write to us and together we will create a complete working solution with great respect to your ideas, even the craziest ones.









 



2020 Hottest UI/UX Design Trends You Should Know


Why Page Speed is blocking you from being in the top Google searches and how to improve the situation


PSD 2 and Open Banking: a brief onboarding on the main points of a new FinTech trend


Facebook Libra’s custom programming language Move and consensus protocol: peculiarities and possibilities


A red apple from an apple tree: an example of creating a social benefit from a decentralised network


REST API basic tutorial: main characteristics and advantages


14 use cases of web and mobile applications development in healthcare


React Native: 5 reasons why it is the best choice for mobile app development


RabbitMQ message broker for messenger development. Tips for developers


IT project audit check-list: the key tips for the audit process


Using RabbitMQ in chat applications and messenger app architecture


How Smartym Pro made a unique trading platform


Java or PHP? What to choose for web application?


Top-5 RPA use cases in Logistics and Supply Chain Management


5 Key Blockchain Applications in the Retail Industry


What is a reactive architecture. Review of reactive systems


AR app development: Reviewing top 5 Augmented Reality SDKs


Blockchain applications in commercial real estate: Why should integrate?







 Recent Posts 

What is Project Health Checkup and why do you need to conduct it regularly?


Smartym‌ ‌Pro‌ ‌is‌ ‌named‌ ‌The‌ ‌best‌ ‌blockchain‌ ‌development‌ ‌company‌ ‌in‌ ‌Belarus‌


Top 5 tips on how to start an IT-project’s maintenance process with a new team


 
Blog topics





















 









































ExpertiseMobile App Development
Web App Development
Blockchain Development
UI/UX Design
 



CompanyContact Us
Portfolio
Our Blog
Our Team
 



About 



[email protected]







smartym.pro





Call Us




 



 
CONTACT US




















 


 















 Copyright Smartym © 2019. All Rights Reserved. Privacy policy

 






 
































This website uses cookies to ensure you get the best experience on our website. Learn more Accept and continue×

Revoke cookies

