




Real-time streaming market data with free software























Toggle navigation









Home


About


Blog



Projects


Github


Gitlab


Contact
















        Real-time streaming market data with free software
      

Here is an overview of the real-time market data architecture based on OpenMAMA:

All these components may be running on a single host or they may be distributed across different servers and workstations in a LAN.  The OpenMAMA market data bus ties them together.
External data sources
These are external sources of data.  These could be currency trading firms, stock brokers, bullion dealers or even Bitcoin exchanges.  Some exchanges don't provide data services directly to the general public and they distribute their price data through third-party data vendors such as Reuters and Bloomberg.
Feed handlers
The feed handlers manage the connections to external data sources.  These are typically daemon processes that implement the wire protocols used by the external vendors for transmitting data over the public internet or a leased line.  They typically use a point-to-point topology such as TCP connections.
The feed handlers publish the data into the market data bus.
In practice, the feed handler may be a proprietary application provided by the data vendor or it may simply be a Python script that fetches exchange rates from a URL every five minutes.
OpenMAMA
The market data bus is a distributed framework that is accessible to all of the local servers and workstations in the LAN.
At the lowest level a messaging middleware solution is used to transport the data.  The Avis Event Router is a free middleware.  There is upcoming support for Apache QPID as well.  Some commcercial middleware is supported too - here is the full list
OpenMAMA does not provide a daemon or server process of its own.  It is a set of libraries that operate on top of the middleware transport.
In very general terms, the OpenMAMA libraries let applications publish messages (such as price ticks) or subscribe to receive the messages published by other applications.
Spreadsheet application (for example, LibreOffice)
LibreOffice is introducing a new data import feature for streaming time series data.  This appears to provide a useful integration point for OpenMAMA and discussion is taking place in the development community.
The spreadsheet can operate in various ways.  A simple application may simply poll the currency prices when the spreadsheet is opened or refreshed.  A more demanding application may see the spreadsheet come alive, recalculating all cells on every tick from the data vendor (several times per second).  This latter scenario is more common in dealing rooms and hedge funds.

Accounting/billing software
There are many free accounting applications today, including PostBooks and GnuCash and some more heavyweight solutions like Adempiere and OpenERP.  In a world where credit cards and the world wide web have made international trade an everyday activity, many people are using this software to track expenses and accounts in more than one currency.  For example, a British business may be paying some suppliers in Euros and a Canadian may be charging some customers in US dollars.  A Swiss person may be keeping some of their savings in gold bullion in the vault of one of their world reknowned Swiss banks.
A common requirement for all of these users is the balance sheet.  Using real-time market data sources, the balance sheet can be refreshed at any time from the live market prices.  A home user may just find it convenient that they can open the balance sheet and always see their net worth immediately without having to manually cut and paste the currency prices from a web page.  A business user operating in a competitive industry with low margins may be checking the balance sheet several times per day to ensure they remain solvent and profitable.
Web shops
Many web shops now offer the customers the convenience of viewing prices in their own currency.  It is important to make sure these prices are accurate, especially when dealing with volatile currencies or when the products have a low profit margin.
The web application server can receive the market data price ticks just like any other application in the network.  Using this data, it can insert live prices into the pages as they are generated.  If the currencies are particularly volatile, the web application could stream the prices to the browser using WebSockets and a JavaScript client embedded in the page would update the price field in real time.
In fact, this web-based streaming price update mechanism is exactly how many online financial trading services offer live market prices to their customers.
Real-time valuation server
In a large organisation there may be many users looking at the same values.  For example, in a trading desk, many users may need to see the desk's overall position in each market.  In a busy web shop, many concurrent users may need to see the prices of common products.
Rather than recalculating these values for each user in parallel, a common solution involves setting up a server to receive raw values (such as currency prices) from the data feed, calculate values needed by local users and then broadcast those values over the market data bus.
How applications can integrate with real-time market data
Here are some steps for getting started:

See my earlier blog on OpenMAMA for some very trivial code samples
The OpenMAMA developers guide
Sample code in the repository (for both C/C++ samples and Java samples)
Build and install it from sources
Use the packages on Debian or Ubuntu - RPM packages will hopefully be developed in the near future, most likely after the OpenMAMA build system update is complete.









 Contact:

          Daniel Pocock 




 Links
 About

 Contact
 Blog








Â© Copyright 2022, DanielPocock.com. Theme ported by Melvin Ch'ng



